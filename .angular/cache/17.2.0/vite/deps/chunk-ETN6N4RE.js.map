{
  "version": 3,
  "sources": ["../../../../../node_modules/@aws-amplify/core/dist/esm/constants.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Logger/types.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Logger/ConsoleLogger.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/errors/AmplifyError.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/types/errors.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/errors/createAssertionFunction.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/errors/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Hub/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/globalHelpers/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Decoder.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/utils/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/parseAWSExports.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/getClientInfo/getClientInfo.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/retry/retry.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deepFreeze.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Auth/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/constants.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/Amplify.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/apis/internal/fetchAuthSession.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/apis/fetchAuthSession.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/singleton/apis/clearCredentials.mjs", "../../../../../node_modules/@aws-crypto/sha256-js/build/module/jsSha256.js", "../../../../../node_modules/@aws-crypto/sha256-js/build/module/constants.js", "../../../../../node_modules/@aws-crypto/sha256-js/build/module/RawSha256.js", "../../../../../node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js", "../../../../../node_modules/@aws-crypto/util/build/module/convertToBuffer.js", "../../../../../node_modules/@aws-crypto/util/build/module/isEmptyData.js", "../../../../../node_modules/@smithy/util-hex-encoding/dist-es/index.js", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/serde/responseInfo.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/serde/json.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/internal/composeServiceApi.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/endpoints/partitions.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/endpoints/getDnsSuffix.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/middleware.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/userAgent/middleware.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/internal/composeTransferHandler.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/utils/memoization.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/fetch.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/unauthenticated.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/retry/constants.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/retry/jitteredBackoff.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/jitteredBackoff.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/isClockSkewError.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/retry/defaultRetryDecider.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/amplifyUrl/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/types.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/version.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/helpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/React.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Vue.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Svelte.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Next.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Nuxt.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Angular.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/ReactNative.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Expo.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/Web.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detection/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/detectFramework.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/customUserAgent.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Platform/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/cognitoIdentity/base.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/cognitoIdentity/getId.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/cognitoIdentity/getCredentialsForIdentity.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/errors/PlatformNotSupportedError.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/KeyValueStorage.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/InMemoryStorage.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/utils.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/DefaultStorage.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/SessionStorage.mjs", "../../../../../node_modules/js-cookie/dist/js.cookie.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/CookieStorage.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/storage/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/constants.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/utils/cacheHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/utils/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/StorageCacheCommon.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/StorageCache.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Cache/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/I18n/I18n.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/I18n/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/I18n/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/isBrowser.mjs", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/rng.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/regex.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/validate.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/stringify.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/parse.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v35.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/md5.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v3.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/native.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/sha1.js", "../../../../../node_modules/@aws-amplify/core/node_modules/uuid/dist/esm-browser/v5.js", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/base.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignedHeaders.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/constants.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCredentialScope.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getFormattedDates.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningValues.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/dataHashHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalHeaders.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalQueryString.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalUri.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getHashedPayload.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getCanonicalRequest.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSigningKey.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getStringToSign.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/utils/getSignature.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/signer/signatureV4/signRequest.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getSkewCorrectedDate.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/isClockSkewed.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/getUpdatedSystemClockOffset.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/middleware.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/handlers/authenticated.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/clients/middleware/signing/utils/extendedEncodeURIComponent.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/updateEndpoint.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/sessionListener/SessionListener.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/sessionListener/index.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/providers/pinpoint/utils/constants.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/awsClients/pinpoint/putEvents.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/providers/pinpoint/utils/PinpointEventBuffer.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/providers/pinpoint/types/errors.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/ServiceWorker/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/cryptoSecureRandomInt.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/WordArray.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/generateRandomString.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/isWebWorker.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeDecode.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/urlSafeEncode.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/deDupeAsyncFunction.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Signer/DateUtils.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/BackgroundProcessManager/types.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/Reachability/Reachability.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/bytesToString.mjs", "../../../../../node_modules/@aws-amplify/core/dist/esm/utils/convert/base64/base64Encoder.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/clients/CognitoIdentityProvider/base.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/AuthError.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/utils/assertServiceError.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/clients/CognitoIdentityProvider/index.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/types/validation.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/common/AuthErrorStrings.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/utils/assertValidationError.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/clients/CognitoIdentityProvider/utils.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/apiHelpers.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/BigInteger/BigInteger.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/textEncoder/index.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/calculate/calculateS.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/constants.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getBytesFromHex.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHexFromBytes.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHashFromData.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHashFromHex.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getPaddedHex.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/calculate/calculateU.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getHkdfKey.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getRandomBytes.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getRandomString.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/AuthenticationHelper/AuthenticationHelper.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/calculate/calculateA.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getAuthenticationHelper.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getNowString.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/srp/getSignatureString.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/types/errors.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signInStore.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/errors/constants.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/types.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/internal/getCurrentUser.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/getCurrentUser.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/utils/getAuthUserAgentValue.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/userContextData.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signInHelpers.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/refreshAuthTokens.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/types.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/errorHelpers.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/TokenStore.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/TokenOrchestrator.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/CognitoUserPoolsTokenProvider.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/tokenProvider.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/tokenProvider/cacheTokens.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/dispatchSignedInHubEvent.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithCustomAuth.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithCustomSRPAuth.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithSRP.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithUserPassword.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signIn.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/autoSignIn.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signUpHelpers.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signUp.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/resetPassword.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmResetPassword.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/resendSignUpCode.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmSignUp.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmSignIn.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/confirmUserAttribute.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/signInWithRedirectStore.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/oAuthStore.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/types/Auth.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/validateState.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/inflightPromise.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/Errors.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/createOAuthError.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/completeOAuthFlow.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/getRedirectUrl.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/handleFailure.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/attemptCompleteOAuthFlow.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/enableOAuthListener.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/types/models.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/utils/openAuthSession.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/generateCodeVerifier.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/generateState.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signInWithRedirect.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/internal/fetchUserAttributes.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/fetchUserAttributes.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/completeOAuthSignOut.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/oAuthSignOutRedirect.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/utils/oauth/handleOAuthSignOut.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/signOut.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/apis/sendUserAttributeVerificationCode.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/types.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/IdentityIdStore.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/utils.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/IdentityIdProvider.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/credentialsProvider.mjs", "../../../../../node_modules/@aws-amplify/auth/dist/esm/providers/cognito/credentialsProvider/index.mjs", "../../../../../node_modules/aws-amplify/dist/esm/initSingleton.mjs"],
  "sourcesContent": ["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Logging constants\nconst AWS_CLOUDWATCH_CATEGORY = 'Logging';\nconst USER_AGENT_HEADER = 'x-amz-user-agent';\n// Error exception code constants\nconst NO_HUBCALLBACK_PROVIDED_EXCEPTION = 'NoHubcallbackProvidedException';\n\nexport { AWS_CLOUDWATCH_CATEGORY, NO_HUBCALLBACK_PROVIDED_EXCEPTION, USER_AGENT_HEADER };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar LogType;\n(function (LogType) {\n    LogType[\"DEBUG\"] = \"DEBUG\";\n    LogType[\"ERROR\"] = \"ERROR\";\n    LogType[\"INFO\"] = \"INFO\";\n    LogType[\"WARN\"] = \"WARN\";\n    LogType[\"VERBOSE\"] = \"VERBOSE\";\n    LogType[\"NONE\"] = \"NONE\";\n})(LogType || (LogType = {}));\n\nexport { LogType };\n\n", "import { AWS_CLOUDWATCH_CATEGORY } from '../constants.mjs';\nimport { LogType } from './types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst LOG_LEVELS = {\n    VERBOSE: 1,\n    DEBUG: 2,\n    INFO: 3,\n    WARN: 4,\n    ERROR: 5,\n    NONE: 6,\n};\n/**\n * Write logs\n * @class Logger\n */\nclass ConsoleLogger {\n    /**\n     * @constructor\n     * @param {string} name - Name of the logger\n     */\n    constructor(name, level = LogType.WARN) {\n        this.name = name;\n        this.level = level;\n        this._pluggables = [];\n    }\n    _padding(n) {\n        return n < 10 ? '0' + n : '' + n;\n    }\n    _ts() {\n        const dt = new Date();\n        return ([this._padding(dt.getMinutes()), this._padding(dt.getSeconds())].join(':') +\n            '.' +\n            dt.getMilliseconds());\n    }\n    configure(config) {\n        if (!config)\n            return this._config;\n        this._config = config;\n        return this._config;\n    }\n    /**\n     * Write log\n     * @method\n     * @memeberof Logger\n     * @param {LogType|string} type - log type, default INFO\n     * @param {string|object} msg - Logging message or object\n     */\n    _log(type, ...msg) {\n        let loggerLevelName = this.level;\n        if (ConsoleLogger.LOG_LEVEL) {\n            loggerLevelName = ConsoleLogger.LOG_LEVEL;\n        }\n        if (typeof window !== 'undefined' && window.LOG_LEVEL) {\n            loggerLevelName = window.LOG_LEVEL;\n        }\n        const loggerLevel = LOG_LEVELS[loggerLevelName];\n        const typeLevel = LOG_LEVELS[type];\n        if (!(typeLevel >= loggerLevel)) {\n            // Do nothing if type is not greater than or equal to logger level (handle undefined)\n            return;\n        }\n        let log = console.log.bind(console);\n        if (type === LogType.ERROR && console.error) {\n            log = console.error.bind(console);\n        }\n        if (type === LogType.WARN && console.warn) {\n            log = console.warn.bind(console);\n        }\n        const prefix = `[${type}] ${this._ts()} ${this.name}`;\n        let message = '';\n        if (msg.length === 1 && typeof msg[0] === 'string') {\n            message = `${prefix} - ${msg[0]}`;\n            log(message);\n        }\n        else if (msg.length === 1) {\n            message = `${prefix} ${msg[0]}`;\n            log(prefix, msg[0]);\n        }\n        else if (typeof msg[0] === 'string') {\n            let obj = msg.slice(1);\n            if (obj.length === 1) {\n                obj = obj[0];\n            }\n            message = `${prefix} - ${msg[0]} ${obj}`;\n            log(`${prefix} - ${msg[0]}`, obj);\n        }\n        else {\n            message = `${prefix} ${msg}`;\n            log(prefix, msg);\n        }\n        for (const plugin of this._pluggables) {\n            const logEvent = { message, timestamp: Date.now() };\n            plugin.pushLogs([logEvent]);\n        }\n    }\n    /**\n     * Write General log. Default to INFO\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    log(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write INFO log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    info(...msg) {\n        this._log(LogType.INFO, ...msg);\n    }\n    /**\n     * Write WARN log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    warn(...msg) {\n        this._log(LogType.WARN, ...msg);\n    }\n    /**\n     * Write ERROR log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    error(...msg) {\n        this._log(LogType.ERROR, ...msg);\n    }\n    /**\n     * Write DEBUG log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    debug(...msg) {\n        this._log(LogType.DEBUG, ...msg);\n    }\n    /**\n     * Write VERBOSE log\n     * @method\n     * @memeberof Logger\n     * @param {string|object} msg - Logging message or object\n     */\n    verbose(...msg) {\n        this._log(LogType.VERBOSE, ...msg);\n    }\n    addPluggable(pluggable) {\n        if (pluggable && pluggable.getCategoryName() === AWS_CLOUDWATCH_CATEGORY) {\n            this._pluggables.push(pluggable);\n            pluggable.configure(this._config);\n        }\n    }\n    listPluggables() {\n        return this._pluggables;\n    }\n}\nConsoleLogger.LOG_LEVEL = null;\n\nexport { ConsoleLogger };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyError extends Error {\n    /**\n     *  Constructs an AmplifyError.\n     *\n     * @param message text that describes the main problem.\n     * @param underlyingError the underlying cause of the error.\n     * @param recoverySuggestion suggestion to recover from the error.\n     *\n     */\n    constructor({ message, name, recoverySuggestion, underlyingError, }) {\n        super(message);\n        this.name = name;\n        this.underlyingError = underlyingError;\n        this.recoverySuggestion = recoverySuggestion;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AmplifyError;\n        Object.setPrototypeOf(this, AmplifyError.prototype);\n    }\n}\n\nexport { AmplifyError };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AmplifyErrorCode;\n(function (AmplifyErrorCode) {\n    AmplifyErrorCode[\"NoEndpointId\"] = \"NoEndpointId\";\n    AmplifyErrorCode[\"PlatformNotSupported\"] = \"PlatformNotSupported\";\n    AmplifyErrorCode[\"Unknown\"] = \"Unknown\";\n})(AmplifyErrorCode || (AmplifyErrorCode = {}));\n\nexport { AmplifyErrorCode };\n\n", "import { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createAssertionFunction = (errorMap, AssertionError = AmplifyError) => (assertion, name, additionalContext) => {\n    const { message, recoverySuggestion } = errorMap[name];\n    if (!assertion) {\n        throw new AssertionError({\n            name,\n            message: additionalContext\n                ? `${message} ${additionalContext}`\n                : message,\n            recoverySuggestion,\n        });\n    }\n};\n\nexport { createAssertionFunction };\n\n", "import { AmplifyErrorCode } from '../types/errors.mjs';\nimport { createAssertionFunction } from './createAssertionFunction.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst amplifyErrorMap = {\n    [AmplifyErrorCode.NoEndpointId]: {\n        message: 'Endpoint ID was not found and was unable to be created.',\n    },\n    [AmplifyErrorCode.PlatformNotSupported]: {\n        message: 'Function not supported on current platform.',\n    },\n    [AmplifyErrorCode.Unknown]: {\n        message: 'An unknown error occurred.',\n    },\n};\nconst assert = createAssertionFunction(amplifyErrorMap);\n\nexport { assert };\n\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { NO_HUBCALLBACK_PROVIDED_EXCEPTION } from '../constants.mjs';\nimport { AmplifyError } from '../errors/AmplifyError.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined'\n    ? Symbol('amplify_default')\n    : '@@amplify_default');\nconst logger = new ConsoleLogger('Hub');\nclass HubClass {\n    constructor(name) {\n        this.listeners = new Map();\n        this.protectedChannels = [\n            'core',\n            'auth',\n            'api',\n            'analytics',\n            'interactions',\n            'pubsub',\n            'storage',\n            'ui',\n            'xr',\n        ];\n        this.name = name;\n    }\n    /**\n     * Used internally to remove a Hub listener.\n     *\n     * @remarks\n     * This private method is for internal use only. Instead of calling Hub.remove, call the result of Hub.listen.\n     */\n    _remove(channel, listener) {\n        const holder = this.listeners.get(channel);\n        if (!holder) {\n            logger.warn(`No listeners for ${channel}`);\n            return;\n        }\n        this.listeners.set(channel, [\n            ...holder.filter(({ callback }) => callback !== listener),\n        ]);\n    }\n    dispatch(channel, payload, source, ampSymbol) {\n        if (typeof channel === 'string' &&\n            this.protectedChannels.indexOf(channel) > -1) {\n            const hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n            if (!hasAccess) {\n                logger.warn(`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`);\n            }\n        }\n        const capsule = {\n            channel,\n            payload: { ...payload },\n            source,\n            patternInfo: [],\n        };\n        try {\n            this._toListeners(capsule);\n        }\n        catch (e) {\n            logger.error(e);\n        }\n    }\n    listen(channel, callback, listenerName = 'noname') {\n        let cb;\n        if (typeof callback !== 'function') {\n            throw new AmplifyError({\n                name: NO_HUBCALLBACK_PROVIDED_EXCEPTION,\n                message: 'No callback supplied to Hub',\n            });\n        }\n        else {\n            // Needs to be casted as a more generic type\n            cb = callback;\n        }\n        let holder = this.listeners.get(channel);\n        if (!holder) {\n            holder = [];\n            this.listeners.set(channel, holder);\n        }\n        holder.push({\n            name: listenerName,\n            callback: cb,\n        });\n        return () => {\n            this._remove(channel, cb);\n        };\n    }\n    _toListeners(capsule) {\n        const { channel, payload } = capsule;\n        const holder = this.listeners.get(channel);\n        if (holder) {\n            holder.forEach(listener => {\n                logger.debug(`Dispatching to ${channel} with `, payload);\n                try {\n                    listener.callback(capsule);\n                }\n                catch (e) {\n                    logger.error(e);\n                }\n            });\n        }\n    }\n}\n/* We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events. */\nconst Hub = new HubClass('__default__');\n/**\n * @internal\n *\n * Internal hub used for core Amplify functionality. Not intended for use outside of Amplify.\n *\n */\nconst HubInternal = new HubClass('internal-hub');\n\nexport { AMPLIFY_SYMBOL, Hub, HubClass, HubInternal };\n\n", "import { AmplifyError } from '../../errors/AmplifyError.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCrypto = () => {\n    if (typeof window === 'object' && typeof window.crypto === 'object') {\n        return window.crypto;\n    }\n    // Next.js global polyfill\n    if (typeof crypto === 'object') {\n        return crypto;\n    }\n    throw new AmplifyError({\n        name: 'MissingPolyfill',\n        message: 'Cannot resolve the `crypto` function from the environment.',\n    });\n};\nconst getBtoa = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n        return window.btoa;\n    }\n    // Next.js global polyfill\n    if (typeof btoa === 'function') {\n        return btoa;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `btoa` function from the environment.',\n    });\n};\nconst getAtob = () => {\n    // browser\n    if (typeof window !== 'undefined' && typeof window.atob === 'function') {\n        return window.atob;\n    }\n    // Next.js global polyfill\n    if (typeof atob === 'function') {\n        return atob;\n    }\n    throw new AmplifyError({\n        name: 'Base64EncoderError',\n        message: 'Cannot resolve the `atob` function from the environment.',\n    });\n};\n\nexport { getAtob, getBtoa, getCrypto };\n\n", "import { getAtob } from '../../globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Decoder = {\n    convert(input) {\n        return getAtob()(input);\n    },\n};\n\nexport { base64Decoder };\n\n", "import { createAssertionFunction } from '../../../errors/createAssertionFunction.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthConfigurationErrorCode;\n(function (AuthConfigurationErrorCode) {\n    AuthConfigurationErrorCode[\"AuthTokenConfigException\"] = \"AuthTokenConfigException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolAndIdentityPoolException\"] = \"AuthUserPoolAndIdentityPoolException\";\n    AuthConfigurationErrorCode[\"AuthUserPoolException\"] = \"AuthUserPoolException\";\n    AuthConfigurationErrorCode[\"InvalidIdentityPoolIdException\"] = \"InvalidIdentityPoolIdException\";\n    AuthConfigurationErrorCode[\"OAuthNotConfigureException\"] = \"OAuthNotConfigureException\";\n})(AuthConfigurationErrorCode || (AuthConfigurationErrorCode = {}));\nconst authConfigurationErrorMap = {\n    [AuthConfigurationErrorCode.AuthTokenConfigException]: {\n        message: 'Auth Token Provider not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolAndIdentityPoolException]: {\n        message: 'Auth UserPool or IdentityPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with UserPoolId and IdentityPoolId.',\n    },\n    [AuthConfigurationErrorCode.AuthUserPoolException]: {\n        message: 'Auth UserPool not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure in your app with userPoolId and userPoolClientId.',\n    },\n    [AuthConfigurationErrorCode.InvalidIdentityPoolIdException]: {\n        message: 'Invalid identity pool id provided.',\n        recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n    },\n    [AuthConfigurationErrorCode.OAuthNotConfigureException]: {\n        message: 'oauth param not configured.',\n        recoverySuggestion: 'Make sure to call Amplify.configure with oauth parameter in your app.',\n    },\n};\nconst assert = createAssertionFunction(authConfigurationErrorMap);\n\nexport { AuthConfigurationErrorCode, assert };\n\n", "import { base64Decoder } from '../../../utils/convert/base64/base64Decoder.mjs';\nimport '../../../types/errors.mjs';\nimport '../../../errors/errorHelpers.mjs';\nimport { assert, AuthConfigurationErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertTokenProviderConfig(cognitoConfig) {\n    let assertionValid = true; // assume valid until otherwise proveed\n    if (!cognitoConfig) {\n        assertionValid = false;\n    }\n    else {\n        assertionValid =\n            !!cognitoConfig.userPoolId && !!cognitoConfig.userPoolClientId;\n    }\n    assert(assertionValid, AuthConfigurationErrorCode.AuthUserPoolException);\n}\nfunction assertOAuthConfig(cognitoConfig) {\n    const validOAuthConfig = !!cognitoConfig?.loginWith?.oauth?.domain &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignOut &&\n        !!cognitoConfig?.loginWith?.oauth?.redirectSignIn &&\n        !!cognitoConfig?.loginWith?.oauth?.responseType;\n    assert(validOAuthConfig, AuthConfigurationErrorCode.OAuthNotConfigureException);\n}\nfunction assertIdentityPoolIdConfig(cognitoConfig) {\n    const validConfig = !!cognitoConfig?.identityPoolId;\n    assert(validConfig, AuthConfigurationErrorCode.InvalidIdentityPoolIdException);\n}\nfunction decodeJWT(token) {\n    const tokenParts = token.split('.');\n    if (tokenParts.length !== 3) {\n        throw new Error('Invalid token');\n    }\n    try {\n        const base64WithUrlSafe = tokenParts[1];\n        const base64 = base64WithUrlSafe.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonStr = decodeURIComponent(base64Decoder\n            .convert(base64)\n            .split('')\n            .map(char => `%${`00${char.charCodeAt(0).toString(16)}`.slice(-2)}`)\n            .join(''));\n        const payload = JSON.parse(jsonStr);\n        return {\n            toString: () => token,\n            payload,\n        };\n    }\n    catch (err) {\n        throw new Error('Invalid token payload');\n    }\n}\n\nexport { assertIdentityPoolIdConfig, assertOAuthConfig, assertTokenProviderConfig, decodeJWT };\n\n", "import { ConsoleLogger } from './Logger/ConsoleLogger.mjs';\nimport { AmplifyError } from './errors/AmplifyError.mjs';\nimport './types/errors.mjs';\nimport './errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('parseAWSExports');\nconst authTypeMapping = {\n    API_KEY: 'apiKey',\n    AWS_IAM: 'iam',\n    AMAZON_COGNITO_USER_POOLS: 'userPool',\n    OPENID_CONNECT: 'oidc',\n    NONE: 'none',\n    AWS_LAMBDA: 'lambda',\n    // `LAMBDA` is an incorrect value that was added during the v6 rewrite.\n    // Keeping it as a valid value until v7 to prevent breaking customers who might\n    // be relying on it as a workaround.\n    // ref: https://github.com/aws-amplify/amplify-js/pull/12922\n    // TODO: @v7 remove next line\n    LAMBDA: 'lambda',\n};\n/**\n * Converts the object imported from `aws-exports.js` or `amplifyconfiguration.json` files generated by\n * the Amplify CLI into an object that conforms to the {@link ResourcesConfig}.\n *\n * @param config A configuration object imported  from `aws-exports.js` or `amplifyconfiguration.json`.\n *\n * @returns An object that conforms to the {@link ResourcesConfig} .\n */\nconst parseAWSExports = (config = {}) => {\n    if (!Object.prototype.hasOwnProperty.call(config, 'aws_project_region')) {\n        throw new AmplifyError({\n            name: 'InvalidParameterException',\n            message: 'Invalid config parameter.',\n            recoverySuggestion: 'Ensure passing the config object imported from  `amplifyconfiguration.json`.',\n        });\n    }\n    const { aws_appsync_apiKey, aws_appsync_authenticationType, aws_appsync_graphqlEndpoint, aws_appsync_region, aws_bots_config, aws_cognito_identity_pool_id, aws_cognito_sign_up_verification_method, aws_cognito_mfa_configuration, aws_cognito_mfa_types, aws_cognito_password_protection_settings, aws_cognito_verification_mechanisms, aws_cognito_signup_attributes, aws_cognito_social_providers, aws_cognito_username_attributes, aws_mandatory_sign_in, aws_mobile_analytics_app_id, aws_mobile_analytics_app_region, aws_user_files_s3_bucket, aws_user_files_s3_bucket_region, aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing, aws_user_pools_id, aws_user_pools_web_client_id, geo, oauth, predictions, aws_cloud_logic_custom, Notifications, modelIntrospection, } = config;\n    const amplifyConfig = {};\n    // Analytics\n    if (aws_mobile_analytics_app_id) {\n        amplifyConfig.Analytics = {\n            Pinpoint: {\n                appId: aws_mobile_analytics_app_id,\n                region: aws_mobile_analytics_app_region,\n            },\n        };\n    }\n    // Notifications\n    const { InAppMessaging, Push } = Notifications ?? {};\n    if (InAppMessaging?.AWSPinpoint || Push?.AWSPinpoint) {\n        if (InAppMessaging?.AWSPinpoint) {\n            const { appId, region } = InAppMessaging.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                InAppMessaging: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n        if (Push?.AWSPinpoint) {\n            const { appId, region } = Push.AWSPinpoint;\n            amplifyConfig.Notifications = {\n                ...amplifyConfig.Notifications,\n                PushNotification: {\n                    Pinpoint: {\n                        appId,\n                        region,\n                    },\n                },\n            };\n        }\n    }\n    // Interactions\n    if (Array.isArray(aws_bots_config)) {\n        amplifyConfig.Interactions = {\n            LexV1: Object.fromEntries(aws_bots_config.map(bot => [bot.name, bot])),\n        };\n    }\n    // API\n    if (aws_appsync_graphqlEndpoint) {\n        const defaultAuthMode = authTypeMapping[aws_appsync_authenticationType];\n        if (!defaultAuthMode) {\n            logger.debug(`Invalid authentication type ${aws_appsync_authenticationType}. Falling back to IAM.`);\n        }\n        amplifyConfig.API = {\n            GraphQL: {\n                endpoint: aws_appsync_graphqlEndpoint,\n                apiKey: aws_appsync_apiKey,\n                region: aws_appsync_region,\n                defaultAuthMode: defaultAuthMode ?? 'iam',\n            },\n        };\n        if (modelIntrospection) {\n            amplifyConfig.API.GraphQL.modelIntrospection = modelIntrospection;\n        }\n    }\n    // Auth\n    const mfaConfig = aws_cognito_mfa_configuration\n        ? {\n            status: aws_cognito_mfa_configuration &&\n                aws_cognito_mfa_configuration.toLowerCase(),\n            totpEnabled: aws_cognito_mfa_types?.includes('TOTP') ?? false,\n            smsEnabled: aws_cognito_mfa_types?.includes('SMS') ?? false,\n        }\n        : undefined;\n    const passwordFormatConfig = aws_cognito_password_protection_settings\n        ? {\n            minLength: aws_cognito_password_protection_settings.passwordPolicyMinLength,\n            requireLowercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_LOWERCASE') ?? false,\n            requireUppercase: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_UPPERCASE') ?? false,\n            requireNumbers: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_NUMBERS') ?? false,\n            requireSpecialCharacters: aws_cognito_password_protection_settings.passwordPolicyCharacters?.includes('REQUIRES_SYMBOLS') ?? false,\n        }\n        : undefined;\n    const mergedUserAttributes = Array.from(new Set([\n        ...(aws_cognito_verification_mechanisms ?? []),\n        ...(aws_cognito_signup_attributes ?? []),\n    ]));\n    const userAttributes = mergedUserAttributes.reduce((attributes, key) => ({\n        ...attributes,\n        // All user attributes generated by the CLI are required\n        [key.toLowerCase()]: { required: true },\n    }), {});\n    const loginWithEmailEnabled = aws_cognito_username_attributes?.includes('EMAIL') ?? false;\n    const loginWithPhoneEnabled = aws_cognito_username_attributes?.includes('PHONE_NUMBER') ?? false;\n    if (aws_cognito_identity_pool_id || aws_user_pools_id) {\n        amplifyConfig.Auth = {\n            Cognito: {\n                identityPoolId: aws_cognito_identity_pool_id,\n                allowGuestAccess: aws_mandatory_sign_in !== 'enable',\n                signUpVerificationMethod: aws_cognito_sign_up_verification_method,\n                userAttributes,\n                userPoolClientId: aws_user_pools_web_client_id,\n                userPoolId: aws_user_pools_id,\n                mfa: mfaConfig,\n                passwordFormat: passwordFormatConfig,\n                loginWith: {\n                    username: !(loginWithEmailEnabled || loginWithPhoneEnabled),\n                    email: loginWithEmailEnabled,\n                    phone: loginWithPhoneEnabled,\n                },\n            },\n        };\n    }\n    const hasOAuthConfig = oauth ? Object.keys(oauth).length > 0 : false;\n    const hasSocialProviderConfig = aws_cognito_social_providers\n        ? aws_cognito_social_providers.length > 0\n        : false;\n    if (amplifyConfig.Auth && hasOAuthConfig) {\n        amplifyConfig.Auth.Cognito.loginWith = {\n            ...amplifyConfig.Auth.Cognito.loginWith,\n            oauth: {\n                ...getOAuthConfig(oauth),\n                ...(hasSocialProviderConfig && {\n                    providers: parseSocialProviders(aws_cognito_social_providers),\n                }),\n            },\n        };\n    }\n    // Storage\n    if (aws_user_files_s3_bucket) {\n        amplifyConfig.Storage = {\n            S3: {\n                bucket: aws_user_files_s3_bucket,\n                region: aws_user_files_s3_bucket_region,\n                dangerouslyConnectToHttpEndpointForTesting: aws_user_files_s3_dangerously_connect_to_http_endpoint_for_testing,\n            },\n        };\n    }\n    // Geo\n    if (geo) {\n        const { amazon_location_service } = geo;\n        amplifyConfig.Geo = amazon_location_service\n            ? {\n                LocationService: {\n                    ...amazon_location_service,\n                    searchIndices: amazon_location_service.search_indices,\n                    region: amazon_location_service.region,\n                },\n            }\n            : { ...geo };\n    }\n    // REST API\n    if (aws_cloud_logic_custom) {\n        amplifyConfig.API = {\n            ...amplifyConfig.API,\n            REST: aws_cloud_logic_custom.reduce((acc, api) => {\n                const { name, endpoint, region, service } = api;\n                return {\n                    ...acc,\n                    [name]: {\n                        endpoint,\n                        ...(service ? { service } : undefined),\n                        ...(region ? { region } : undefined),\n                    },\n                };\n            }, {}),\n        };\n    }\n    // Predictions\n    if (predictions) {\n        // map VoiceId from speechGenerator defaults to voiceId\n        const { VoiceId: voiceId } = predictions?.convert?.speechGenerator?.defaults ?? {};\n        amplifyConfig.Predictions = voiceId\n            ? {\n                ...predictions,\n                convert: {\n                    ...predictions.convert,\n                    speechGenerator: {\n                        ...predictions.convert.speechGenerator,\n                        defaults: { voiceId },\n                    },\n                },\n            }\n            : predictions;\n    }\n    return amplifyConfig;\n};\nconst getRedirectUrl = (redirectStr) => redirectStr?.split(',') ?? [];\nconst getOAuthConfig = ({ domain, scope, redirectSignIn, redirectSignOut, responseType, }) => ({\n    domain,\n    scopes: scope,\n    redirectSignIn: getRedirectUrl(redirectSignIn),\n    redirectSignOut: getRedirectUrl(redirectSignOut),\n    responseType,\n});\nconst parseSocialProviders = (aws_cognito_social_providers) => {\n    return aws_cognito_social_providers.map((provider) => {\n        const updatedProvider = provider.toLowerCase();\n        return updatedProvider.charAt(0).toUpperCase() + updatedProvider.slice(1);\n    });\n};\n\nexport { parseAWSExports };\n\n", "import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('getClientInfo');\nfunction getClientInfo() {\n    if (typeof window === 'undefined') {\n        return {};\n    }\n    return browserClientInfo();\n}\nfunction browserClientInfo() {\n    if (typeof window === 'undefined') {\n        logger.warn('No window object available to get browser client info');\n        return {};\n    }\n    const nav = window.navigator;\n    if (!nav) {\n        logger.warn('No navigator object available to get browser client info');\n        return {};\n    }\n    const { platform, product, vendor, userAgent, language } = nav;\n    const type = getBrowserType(userAgent);\n    const timezone = browserTimezone();\n    return {\n        platform,\n        make: product || vendor,\n        model: type.type,\n        version: type.version,\n        appVersion: [type.type, type.version].join('/'),\n        language,\n        timezone,\n    };\n}\nfunction browserTimezone() {\n    const tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n    return tzMatch ? tzMatch[1] || '' : '';\n}\nfunction getBrowserType(userAgent) {\n    // The latest user agents for Opera: https://www.whatismybrowser.com/guides/the-latest-user-agent/opera\n    const operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9.]+).*/i.exec(userAgent);\n    if (operaMatch) {\n        return { type: operaMatch[1], version: operaMatch[2] };\n    }\n    // The latest user agents for Edge: https://www.whatismybrowser.com/guides/the-latest-user-agent/edge\n    const ieMatch = /.+(Trident|Edge|Edg|EdgA|EdgiOS)\\/([0-9.]+).*/i.exec(userAgent);\n    if (ieMatch) {\n        return { type: ieMatch[1], version: ieMatch[2] };\n    }\n    // The latest user agents for web browsers on Firefox and Chrome\n    // https://www.whatismybrowser.com/guides/the-latest-user-agent/firefox\n    // https://www.whatismybrowser.com/guides/the-latest-user-agent/chrome\n    const cfMatch = /.+(Chrome|CriOS|Firefox|FxiOS)\\/([0-9.]+).*/i.exec(userAgent);\n    if (cfMatch) {\n        return { type: cfMatch[1], version: cfMatch[2] };\n    }\n    // The latest user agents for Safari: https://www.whatismybrowser.com/guides/the-latest-user-agent/safari\n    const sMatch = /.+(Safari)\\/([0-9.]+).*/i.exec(userAgent);\n    if (sMatch) {\n        return { type: sMatch[1], version: sMatch[2] };\n    }\n    const awkMatch = /.+(AppleWebKit)\\/([0-9.]+).*/i.exec(userAgent);\n    if (awkMatch) {\n        return { type: awkMatch[1], version: awkMatch[2] };\n    }\n    const anyMatch = /.*([A-Z]+)\\/([0-9.]+).*/i.exec(userAgent);\n    if (anyMatch) {\n        return { type: anyMatch[1], version: anyMatch[2] };\n    }\n    return { type: '', version: '' };\n}\n\nexport { getClientInfo };\n\n", "import { ConsoleLogger } from '../../Logger/ConsoleLogger.mjs';\nimport { isNonRetryableError } from './isNonRetryableError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('retryUtil');\n/**\n * @private\n * Internal use of Amplify only\n */\nasync function retry(functionToRetry, args, delayFn, onTerminate) {\n    if (typeof functionToRetry !== 'function') {\n        throw Error('functionToRetry must be a function');\n    }\n    // TODO(eslint): remove this linter suppression with refactoring.\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n        let attempt = 0;\n        let terminated = false;\n        let timeout;\n        let wakeUp = () => {\n            // no-op\n        }; // will be replaced with a resolver()\n        // used after the loop if terminated while waiting for a timer.\n        let lastError;\n        onTerminate &&\n            onTerminate.then(() => {\n                // signal not to try anymore.\n                terminated = true;\n                // stop sleeping if we're sleeping.\n                clearTimeout(timeout);\n                wakeUp();\n            });\n        // TODO(eslint): remove this linter suppression with refactoring.\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (!terminated) {\n            attempt++;\n            logger.debug(`${functionToRetry.name} attempt #${attempt} with this vars: ${JSON.stringify(args)}`);\n            try {\n                resolve(await functionToRetry(...args));\n                return;\n            }\n            catch (err) {\n                lastError = err;\n                logger.debug(`error on ${functionToRetry.name}`, err);\n                if (isNonRetryableError(err)) {\n                    logger.debug(`${functionToRetry.name} non retryable error`, err);\n                    reject(err);\n                    return;\n                }\n                const retryIn = delayFn(attempt, args, err);\n                logger.debug(`${functionToRetry.name} retrying in ${retryIn} ms`);\n                // we check `terminated` again here because it could have flipped\n                // in the time it took `functionToRetry` to return.\n                if (retryIn === false || terminated) {\n                    reject(err);\n                    return;\n                }\n                else {\n                    await new Promise(_resolve => {\n                        wakeUp = _resolve; // export wakeUp for onTerminate handling\n                        timeout = setTimeout(wakeUp, retryIn);\n                    });\n                }\n            }\n        }\n        // reached if terminated while waiting for a timer.\n        reject(lastError);\n    });\n}\n\nexport { retry };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst deepFreeze = (object) => {\n    const propNames = Reflect.ownKeys(object);\n    for (const name of propNames) {\n        const value = object[name];\n        if ((value && typeof value === 'object') || typeof value === 'function') {\n            deepFreeze(value);\n        }\n    }\n    return Object.freeze(object);\n};\n\nexport { deepFreeze };\n\n", "function isTokenExpired({ expiresAt, clockDrift, }) {\n    const currentTime = Date.now();\n    return currentTime + clockDrift > expiresAt;\n}\nclass AuthClass {\n    /**\n     * Configure Auth category\n     *\n     * @internal\n     *\n     * @param authResourcesConfig - Resources configurations required by Auth providers.\n     * @param authOptions - Client options used by library\n     *\n     * @returns void\n     */\n    configure(authResourcesConfig, authOptions) {\n        this.authConfig = authResourcesConfig;\n        this.authOptions = authOptions;\n    }\n    /**\n     * Fetch the auth tokens, and the temporary AWS credentials and identity if they are configured. By default it\n     * does not refresh the auth tokens or credentials if they are loaded in storage already. You can force a refresh\n     * with `{ forceRefresh: true }` input.\n     *\n     * @param options - Options configuring the fetch behavior.\n     *\n     * @returns Promise of current auth session {@link AuthSession}.\n     */\n    async fetchAuthSession(options = {}) {\n        let credentialsAndIdentityId;\n        let userSub;\n        // Get tokens will throw if session cannot be refreshed (network or service error) or return null if not available\n        const tokens = await this.getTokens(options);\n        if (tokens) {\n            userSub = tokens.accessToken?.payload?.sub;\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    tokens,\n                    authenticated: true,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        else {\n            // getCredentialsAndIdentityId will throw if cannot get credentials (network or service error)\n            credentialsAndIdentityId =\n                await this.authOptions?.credentialsProvider?.getCredentialsAndIdentityId({\n                    authConfig: this.authConfig,\n                    authenticated: false,\n                    forceRefresh: options.forceRefresh,\n                });\n        }\n        return {\n            tokens,\n            credentials: credentialsAndIdentityId?.credentials,\n            identityId: credentialsAndIdentityId?.identityId,\n            userSub,\n        };\n    }\n    async clearCredentials() {\n        await this.authOptions?.credentialsProvider?.clearCredentialsAndIdentityId();\n    }\n    async getTokens(options) {\n        return ((await this.authOptions?.tokenProvider?.getTokens(options)) ?? undefined);\n    }\n}\n\nexport { AuthClass, isTokenExpired };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ADD_OAUTH_LISTENER = Symbol('oauth-listener');\n\nexport { ADD_OAUTH_LISTENER };\n\n", "import { Hub, AMPLIFY_SYMBOL } from '../Hub/index.mjs';\nimport { parseAWSExports } from '../parseAWSExports.mjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport '../utils/retry/retry.mjs';\nimport { deepFreeze } from '../utils/deepFreeze.mjs';\nimport { AuthClass } from './Auth/index.mjs';\nimport { ADD_OAUTH_LISTENER } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AmplifyClass {\n    constructor() {\n        this.oAuthListener = undefined;\n        this.resourcesConfig = {};\n        this.libraryOptions = {};\n        this.Auth = new AuthClass();\n    }\n    /**\n     * Configures Amplify for use with your back-end resources.\n     *\n     * @remarks\n     * This API does not perform any merging of either `resourcesConfig` or `libraryOptions`. The most recently\n     * provided values will be used after configuration.\n     *\n     * @remarks\n     * `configure` can be used to specify additional library options where available for supported categories.\n     *\n     * @param resourceConfig - Back-end resource configuration. Typically provided via the `aws-exports.js` file.\n     * @param libraryOptions - Additional options for customizing the behavior of the library.\n     */\n    configure(resourcesConfig, libraryOptions) {\n        let resolvedResourceConfig;\n        if (Object.keys(resourcesConfig).some(key => key.startsWith('aws_'))) {\n            resolvedResourceConfig = parseAWSExports(resourcesConfig);\n        }\n        else {\n            resolvedResourceConfig = resourcesConfig;\n        }\n        this.resourcesConfig = resolvedResourceConfig;\n        if (libraryOptions) {\n            this.libraryOptions = libraryOptions;\n        }\n        // Make resource config immutable\n        this.resourcesConfig = deepFreeze(this.resourcesConfig);\n        this.Auth.configure(this.resourcesConfig.Auth, this.libraryOptions.Auth);\n        Hub.dispatch('core', {\n            event: 'configure',\n            data: this.resourcesConfig,\n        }, 'Configure', AMPLIFY_SYMBOL);\n        this.notifyOAuthListener();\n    }\n    /**\n     * Provides access to the current back-end resource configuration for the Library.\n     *\n     * @returns Returns the immutable back-end resource configuration.\n     */\n    getConfig() {\n        return this.resourcesConfig;\n    }\n    /** @internal */\n    [ADD_OAUTH_LISTENER](listener) {\n        if (this.resourcesConfig.Auth?.Cognito.loginWith?.oauth) {\n            // when Amplify has been configured with a valid OAuth config while adding the listener, run it directly\n            listener(this.resourcesConfig.Auth?.Cognito);\n        }\n        else {\n            // otherwise register the listener and run it later when Amplify gets configured with a valid oauth config\n            this.oAuthListener = listener;\n        }\n    }\n    notifyOAuthListener() {\n        if (!this.resourcesConfig.Auth?.Cognito.loginWith?.oauth ||\n            !this.oAuthListener) {\n            return;\n        }\n        this.oAuthListener(this.resourcesConfig.Auth?.Cognito);\n        // the listener should only be notified once with a valid oauth config\n        this.oAuthListener = undefined;\n    }\n}\n/**\n * The `Amplify` utility is used to configure the library.\n *\n * @remarks\n * `Amplify` is responsible for orchestrating cross-category communication within the library.\n */\nconst Amplify = new AmplifyClass();\n\nexport { Amplify, AmplifyClass };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchAuthSession = (amplify, options) => {\n    return amplify.Auth.fetchAuthSession(options);\n};\n\nexport { fetchAuthSession };\n\n", "import { Amplify } from '../Amplify.mjs';\nimport { fetchAuthSession as fetchAuthSession$1 } from './internal/fetchAuthSession.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchAuthSession = (options) => {\n    return fetchAuthSession$1(Amplify, options);\n};\n\nexport { fetchAuthSession };\n\n", "import { Amplify } from '../Amplify.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction clearCredentials() {\n    return Amplify.Auth.clearCredentials();\n}\n\nexport { clearCredentials };\n\n", "import { __awaiter, __generator } from \"tslib\";\nimport { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if (isEmptyData(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update(convertToBuffer(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexport { Sha256 };\nfunction bufferFromSecret(secret) {\n    var input = convertToBuffer(secret);\n    if (input.byteLength > BLOCK_SIZE) {\n        var bufferHash = new RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n", "/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexport var DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexport var KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexport var INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexport var MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n", "import { BLOCK_SIZE, DIGEST_LENGTH, INIT, KEY, MAX_HASHABLE_LENGTH } from \"./constants\";\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexport { RawSha256 };\n", "export const fromUtf8 = (input) => new TextEncoder().encode(input);\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : fromUtf8Browser;\nexport function convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nexport function isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\n", "const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst parseMetadata = (response) => {\n    const { headers, statusCode } = response;\n    return {\n        ...(isMetadataBearer(response) ? response.$metadata : {}),\n        httpStatusCode: statusCode,\n        requestId: headers['x-amzn-requestid'] ??\n            headers['x-amzn-request-id'] ??\n            headers['x-amz-request-id'],\n        extendedRequestId: headers['x-amz-id-2'],\n        cfId: headers['x-amz-cf-id'],\n    };\n};\nconst isMetadataBearer = (response) => typeof response?.$metadata === 'object';\n\nexport { parseMetadata };\n\n", "import { parseMetadata } from './responseInfo.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Utility functions for serializing and deserializing of JSON protocol in general(including: REST-JSON, JSON-RPC, etc.)\n */\n/**\n * Error parser for AWS JSON protocol.\n */\nconst parseJsonError = async (response) => {\n    if (!response || response.statusCode < 300) {\n        return;\n    }\n    const body = await parseJsonBody(response);\n    const sanitizeErrorCode = (rawValue) => {\n        const [cleanValue] = rawValue.toString().split(/[,:]+/);\n        if (cleanValue.includes('#')) {\n            return cleanValue.split('#')[1];\n        }\n        return cleanValue;\n    };\n    const code = sanitizeErrorCode(response.headers['x-amzn-errortype'] ??\n        body.code ??\n        body.__type ??\n        'UnknownError');\n    const message = body.message ?? body.Message ?? 'Unknown error';\n    const error = new Error(message);\n    return Object.assign(error, {\n        name: code,\n        $metadata: parseMetadata(response),\n    });\n};\n/**\n * Parse JSON response body to JavaScript object.\n */\nconst parseJsonBody = async (response) => {\n    if (!response.body) {\n        throw new Error('Missing response payload');\n    }\n    const output = await response.body.json();\n    return Object.assign(output, {\n        $metadata: parseMetadata(response),\n    });\n};\n\nexport { parseJsonBody, parseJsonError };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst composeServiceApi = (transferHandler, serializer, deserializer, defaultConfig) => {\n    return async (config, input) => {\n        const resolvedConfig = {\n            ...defaultConfig,\n            ...config,\n        };\n        // We may want to allow different endpoints from given config(other than region) and input.\n        // Currently S3 supports additional `useAccelerateEndpoint` option to use accelerate endpoint.\n        const endpoint = await resolvedConfig.endpointResolver(resolvedConfig, input);\n        // Unlike AWS SDK clients, a serializer should NOT populate the `host` or `content-length` headers.\n        // Both of these headers are prohibited per Spec(https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name).\n        // They will be populated automatically by browser, or node-fetch polyfill.\n        const request = await serializer(input, endpoint);\n        const response = await transferHandler(request, {\n            ...resolvedConfig,\n        });\n        return deserializer(response);\n    };\n};\n\nexport { composeServiceApi };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default partition for AWS services. This is used when the region is not provided or the region is not recognized.\n *\n * @internal\n */\nconst defaultPartition = {\n    id: 'aws',\n    outputs: {\n        dnsSuffix: 'amazonaws.com',\n    },\n    regionRegex: '^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$',\n    regions: ['aws-global'],\n};\n/**\n * This data is adapted from the partition file from AWS SDK shared utilities but remove some contents for bundle size\n * concern. Information removed are `dualStackDnsSuffix`, `supportDualStack`, `supportFIPS`, restricted partitions, and\n * list of regions for each partition other than global regions.\n *\n * * Ref: https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints\n * * Ref: https://github.com/aws/aws-sdk-js-v3/blob/0201baef03c2379f1f6f7150b9d401d4b230d488/packages/util-endpoints/src/lib/aws/partitions.json#L1\n *\n * @internal\n */\nconst partitionsInfo = {\n    partitions: [\n        defaultPartition,\n        {\n            id: 'aws-cn',\n            outputs: {\n                dnsSuffix: 'amazonaws.com.cn',\n            },\n            regionRegex: '^cn\\\\-\\\\w+\\\\-\\\\d+$',\n            regions: ['aws-cn-global'],\n        },\n    ],\n};\n\nexport { defaultPartition, partitionsInfo };\n\n", "import { defaultPartition, partitionsInfo } from './partitions.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get the AWS Services endpoint URL's DNS suffix for a given region. A typical AWS regional service endpoint URL will\n * follow this pattern: {endpointPrefix}.{region}.{dnsSuffix}. For example, the endpoint URL for Cognito Identity in\n * us-east-1 will be cognito-identity.us-east-1.amazonaws.com. Here the DnsSuffix is `amazonaws.com`.\n *\n * @param region\n * @returns The DNS suffix\n *\n * @internal\n */\nconst getDnsSuffix = (region) => {\n    const { partitions } = partitionsInfo;\n    for (const { regions, outputs, regionRegex } of partitions) {\n        const regex = new RegExp(regionRegex);\n        if (regions.includes(region) || regex.test(region)) {\n            return outputs.dnsSuffix;\n        }\n    }\n    return defaultPartition.outputs.dnsSuffix;\n};\n\nexport { getDnsSuffix };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_RETRY_ATTEMPTS = 3;\n/**\n * Retry middleware\n */\nconst retryMiddlewareFactory = ({ maxAttempts = DEFAULT_RETRY_ATTEMPTS, retryDecider, computeDelay, abortSignal, }) => {\n    if (maxAttempts < 1) {\n        throw new Error('maxAttempts must be greater than 0');\n    }\n    return (next, context) => async function retryMiddleware(request) {\n        let error;\n        let attemptsCount = context.attemptsCount ?? 0;\n        let response;\n        // When retry is not needed or max attempts is reached, either error or response will be set. This function handles either cases.\n        const handleTerminalErrorOrResponse = () => {\n            if (response) {\n                addOrIncrementMetadataAttempts(response, attemptsCount);\n                return response;\n            }\n            else {\n                addOrIncrementMetadataAttempts(error, attemptsCount);\n                throw error;\n            }\n        };\n        while (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n            try {\n                response = await next(request);\n                error = undefined;\n            }\n            catch (e) {\n                error = e;\n                response = undefined;\n            }\n            // context.attemptsCount may be updated after calling next handler which may retry the request by itself.\n            attemptsCount =\n                (context.attemptsCount ?? 0) > attemptsCount\n                    ? context.attemptsCount ?? 0\n                    : attemptsCount + 1;\n            context.attemptsCount = attemptsCount;\n            if (await retryDecider(response, error)) {\n                if (!abortSignal?.aborted && attemptsCount < maxAttempts) {\n                    // prevent sleep for last attempt or cancelled request;\n                    const delay = computeDelay(attemptsCount);\n                    await cancellableSleep(delay, abortSignal);\n                }\n                continue;\n            }\n            else {\n                return handleTerminalErrorOrResponse();\n            }\n        }\n        if (abortSignal?.aborted) {\n            throw new Error('Request aborted.');\n        }\n        else {\n            return handleTerminalErrorOrResponse();\n        }\n    };\n};\nconst cancellableSleep = (timeoutMs, abortSignal) => {\n    if (abortSignal?.aborted) {\n        return Promise.resolve();\n    }\n    let timeoutId;\n    let sleepPromiseResolveFn;\n    const sleepPromise = new Promise(resolve => {\n        sleepPromiseResolveFn = resolve;\n        timeoutId = setTimeout(resolve, timeoutMs);\n    });\n    abortSignal?.addEventListener('abort', function cancelSleep(_) {\n        clearTimeout(timeoutId);\n        abortSignal?.removeEventListener('abort', cancelSleep);\n        sleepPromiseResolveFn();\n    });\n    return sleepPromise;\n};\nconst addOrIncrementMetadataAttempts = (nextHandlerOutput, attempts) => {\n    if (Object.prototype.toString.call(nextHandlerOutput) !== '[object Object]') {\n        return;\n    }\n    nextHandlerOutput.$metadata = {\n        ...(nextHandlerOutput.$metadata ?? {}),\n        attempts,\n    };\n};\n\nexport { retryMiddlewareFactory };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware injects user agent string to specified header(default to 'x-amz-user-agent'),\n * if the header is not set already.\n *\n * TODO: incorporate new user agent design\n */\nconst userAgentMiddlewareFactory = ({ userAgentHeader = 'x-amz-user-agent', userAgentValue = '', }) => next => {\n    return async function userAgentMiddleware(request) {\n        if (userAgentValue.trim().length === 0) {\n            const result = await next(request);\n            return result;\n        }\n        else {\n            const headerName = userAgentHeader.toLowerCase();\n            request.headers[headerName] = request.headers[headerName]\n                ? `${request.headers[headerName]} ${userAgentValue}`\n                : userAgentValue;\n            const response = await next(request);\n            return response;\n        }\n    };\n};\n\nexport { userAgentMiddlewareFactory };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Compose a transfer handler with a core transfer handler and a list of middleware.\n * @param coreHandler Core transfer handler\n * @param middleware\tList of middleware\n * @returns A transfer handler whose option type is the union of the core\n * \ttransfer handler's option type and the middleware's option type.\n * @internal\n */\nconst composeTransferHandler = (coreHandler, middleware) => (request, options) => {\n    const context = {};\n    let composedHandler = (composeHandlerRequest) => coreHandler(composeHandlerRequest, options);\n    for (let i = middleware.length - 1; i >= 0; i--) {\n        const m = middleware[i];\n        const resolvedMiddleware = m(options);\n        composedHandler = resolvedMiddleware(composedHandler, context);\n    }\n    return composedHandler(request);\n};\n\nexport { composeTransferHandler };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cache the payload of a response body. It allows multiple calls to the body,\n * for example, when reading the body in both retry decider and error deserializer.\n * Caching body is allowed here because we call the body accessor(blob(), json(),\n * etc.) when body is small or streaming implementation is not available(RN).\n *\n * @internal\n */\nconst withMemoization = (payloadAccessor) => {\n    let cached;\n    return () => {\n        if (!cached) {\n            // Explicitly not awaiting. Intermediate await would add overhead and\n            // introduce a possible race in the event that this wrapper is called\n            // again before the first `payloadAccessor` call resolves.\n            cached = payloadAccessor();\n        }\n        return cached;\n    };\n};\n\nexport { withMemoization };\n\n", "import { withMemoization } from '../utils/memoization.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst shouldSendBody = (method) => !['HEAD', 'GET', 'DELETE'].includes(method.toUpperCase());\n// TODO[AllanZhengYP]: we need to provide isCanceledError utility\nconst fetchTransferHandler = async ({ url, method, headers, body }, { abortSignal, cache, withCrossDomainCredentials }) => {\n    let resp;\n    try {\n        resp = await fetch(url, {\n            method,\n            headers,\n            body: shouldSendBody(method) ? body : undefined,\n            signal: abortSignal,\n            cache,\n            credentials: withCrossDomainCredentials ? 'include' : 'same-origin',\n        });\n    }\n    catch (e) {\n        // TODO: needs to revise error handling in v6\n        // For now this is a thin wrapper over original fetch error similar to cognito-identity-js package.\n        // Ref: https://github.com/aws-amplify/amplify-js/blob/4fbc8c0a2be7526aab723579b4c95b552195a80b/packages/amazon-cognito-identity-js/src/Client.js#L103-L108\n        if (e instanceof TypeError) {\n            throw new Error('Network error');\n        }\n        throw e;\n    }\n    const responseHeaders = {};\n    resp.headers?.forEach((value, key) => {\n        responseHeaders[key.toLowerCase()] = value;\n    });\n    const httpResponse = {\n        statusCode: resp.status,\n        headers: responseHeaders,\n        body: null,\n    };\n    // resp.body is a ReadableStream according to Fetch API spec, but React Native\n    // does not implement it.\n    const bodyWithMixin = Object.assign(resp.body ?? {}, {\n        text: withMemoization(() => resp.text()),\n        blob: withMemoization(() => resp.blob()),\n        json: withMemoization(() => resp.json()),\n    });\n    return {\n        ...httpResponse,\n        body: bodyWithMixin,\n    };\n};\n\nexport { fetchTransferHandler };\n\n", "import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from './fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst unauthenticatedHandler = composeTransferHandler(fetchTransferHandler, [userAgentMiddlewareFactory, retryMiddlewareFactory]);\n\nexport { unauthenticatedHandler };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_DELAY_MS = 5 * 60 * 1000;\n\nexport { MAX_DELAY_MS };\n\n", "import { MAX_DELAY_MS } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @private\n * Internal use of Amplify only\n */\nfunction jitteredBackoff(maxDelayMs = MAX_DELAY_MS) {\n    const BASE_TIME_MS = 100;\n    const JITTER_FACTOR = 100;\n    return attempt => {\n        const delay = 2 ** attempt * BASE_TIME_MS + JITTER_FACTOR * Math.random();\n        return delay > maxDelayMs ? false : delay;\n    };\n}\n\nexport { jitteredBackoff };\n\n", "import '../../../utils/getClientInfo/getClientInfo.mjs';\nimport { jitteredBackoff as jitteredBackoff$1 } from '../../../utils/retry/jitteredBackoff.mjs';\nimport '../../../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: [v6] The separate retry utility is used by Data packages now and will replaced by retry middleware.\nconst DEFAULT_MAX_DELAY_MS = 5 * 60 * 1000;\nconst jitteredBackoff = attempt => {\n    const delayFunction = jitteredBackoff$1(DEFAULT_MAX_DELAY_MS);\n    const delay = delayFunction(attempt);\n    // The delayFunction returns false when the delay is greater than the max delay(5 mins).\n    // In this case, the retry middleware will delay 5 mins instead, as a ceiling of the delay.\n    return delay === false ? DEFAULT_MAX_DELAY_MS : delay;\n};\n\nexport { jitteredBackoff };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// via https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L8\nconst CLOCK_SKEW_ERROR_CODES = [\n    'AuthFailure',\n    'InvalidSignatureException',\n    'RequestExpired',\n    'RequestInTheFuture',\n    'RequestTimeTooSkewed',\n    'SignatureDoesNotMatch',\n    'BadRequestException', // API Gateway\n];\n/**\n * Given an error code, returns true if it is related to a clock skew error.\n *\n * @param errorCode String representation of some error.\n * @returns True if given error is present in `CLOCK_SKEW_ERROR_CODES`, false otherwise.\n *\n * @internal\n */\nconst isClockSkewError = (errorCode) => !!errorCode && CLOCK_SKEW_ERROR_CODES.includes(errorCode);\n\nexport { isClockSkewError };\n\n", "import { isClockSkewError } from './isClockSkewError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Get retry decider function\n * @param errorParser Function to load JavaScript error from HTTP response\n */\nconst getRetryDecider = (errorParser) => async (response, error) => {\n    const parsedError = error ??\n        (await errorParser(response)) ??\n        undefined;\n    const errorCode = parsedError?.code;\n    const statusCode = response?.statusCode;\n    return (isConnectionError(error) ||\n        isThrottlingError(statusCode, errorCode) ||\n        isClockSkewError(errorCode) ||\n        isServerSideError(statusCode, errorCode));\n};\n// reference: https://github.com/aws/aws-sdk-js-v3/blob/ab0e7be36e7e7f8a0c04834357aaad643c7912c3/packages/service-error-classification/src/constants.ts#L22-L37\nconst THROTTLING_ERROR_CODES = [\n    'BandwidthLimitExceeded',\n    'EC2ThrottledException',\n    'LimitExceededException',\n    'PriorRequestNotComplete',\n    'ProvisionedThroughputExceededException',\n    'RequestLimitExceeded',\n    'RequestThrottled',\n    'RequestThrottledException',\n    'SlowDown',\n    'ThrottledException',\n    'Throttling',\n    'ThrottlingException',\n    'TooManyRequestsException',\n];\nconst TIMEOUT_ERROR_CODES = [\n    'TimeoutError',\n    'RequestTimeout',\n    'RequestTimeoutException',\n];\nconst isThrottlingError = (statusCode, errorCode) => statusCode === 429 ||\n    (!!errorCode && THROTTLING_ERROR_CODES.includes(errorCode));\nconst isConnectionError = (error) => error?.name === 'Network error';\nconst isServerSideError = (statusCode, errorCode) => (!!statusCode && [500, 502, 503, 504].includes(statusCode)) ||\n    (!!errorCode && TIMEOUT_ERROR_CODES.includes(errorCode));\n\nexport { getRetryDecider };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst AmplifyUrl = URL;\nconst AmplifyUrlSearchParams = URLSearchParams;\n\nexport { AmplifyUrl, AmplifyUrlSearchParams };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar Framework;\n(function (Framework) {\n    // < 100 - Web frameworks\n    Framework[\"WebUnknown\"] = \"0\";\n    Framework[\"React\"] = \"1\";\n    Framework[\"NextJs\"] = \"2\";\n    Framework[\"Angular\"] = \"3\";\n    Framework[\"VueJs\"] = \"4\";\n    Framework[\"Nuxt\"] = \"5\";\n    Framework[\"Svelte\"] = \"6\";\n    // 100s - Server side frameworks\n    Framework[\"ServerSideUnknown\"] = \"100\";\n    Framework[\"ReactSSR\"] = \"101\";\n    Framework[\"NextJsSSR\"] = \"102\";\n    Framework[\"AngularSSR\"] = \"103\";\n    Framework[\"VueJsSSR\"] = \"104\";\n    Framework[\"NuxtSSR\"] = \"105\";\n    Framework[\"SvelteSSR\"] = \"106\";\n    // 200s - Mobile framework\n    Framework[\"ReactNative\"] = \"201\";\n    Framework[\"Expo\"] = \"202\";\n})(Framework || (Framework = {}));\nvar Category;\n(function (Category) {\n    Category[\"API\"] = \"api\";\n    Category[\"Auth\"] = \"auth\";\n    Category[\"Analytics\"] = \"analytics\";\n    Category[\"DataStore\"] = \"datastore\";\n    Category[\"Geo\"] = \"geo\";\n    Category[\"InAppMessaging\"] = \"inappmessaging\";\n    Category[\"Interactions\"] = \"interactions\";\n    Category[\"Predictions\"] = \"predictions\";\n    Category[\"PubSub\"] = \"pubsub\";\n    Category[\"PushNotification\"] = \"pushnotification\";\n    Category[\"Storage\"] = \"storage\";\n})(Category || (Category = {}));\nvar AnalyticsAction;\n(function (AnalyticsAction) {\n    AnalyticsAction[\"Record\"] = \"1\";\n    AnalyticsAction[\"IdentifyUser\"] = \"2\";\n})(AnalyticsAction || (AnalyticsAction = {}));\nvar ApiAction;\n(function (ApiAction) {\n    ApiAction[\"GraphQl\"] = \"1\";\n    ApiAction[\"Get\"] = \"2\";\n    ApiAction[\"Post\"] = \"3\";\n    ApiAction[\"Put\"] = \"4\";\n    ApiAction[\"Patch\"] = \"5\";\n    ApiAction[\"Del\"] = \"6\";\n    ApiAction[\"Head\"] = \"7\";\n})(ApiAction || (ApiAction = {}));\nvar AuthAction;\n(function (AuthAction) {\n    AuthAction[\"SignUp\"] = \"1\";\n    AuthAction[\"ConfirmSignUp\"] = \"2\";\n    AuthAction[\"ResendSignUpCode\"] = \"3\";\n    AuthAction[\"SignIn\"] = \"4\";\n    AuthAction[\"FetchMFAPreference\"] = \"6\";\n    AuthAction[\"UpdateMFAPreference\"] = \"7\";\n    AuthAction[\"SetUpTOTP\"] = \"10\";\n    AuthAction[\"VerifyTOTPSetup\"] = \"11\";\n    AuthAction[\"ConfirmSignIn\"] = \"12\";\n    AuthAction[\"DeleteUserAttributes\"] = \"15\";\n    AuthAction[\"DeleteUser\"] = \"16\";\n    AuthAction[\"UpdateUserAttributes\"] = \"17\";\n    AuthAction[\"FetchUserAttributes\"] = \"18\";\n    AuthAction[\"ConfirmUserAttribute\"] = \"22\";\n    AuthAction[\"SignOut\"] = \"26\";\n    AuthAction[\"UpdatePassword\"] = \"27\";\n    AuthAction[\"ResetPassword\"] = \"28\";\n    AuthAction[\"ConfirmResetPassword\"] = \"29\";\n    AuthAction[\"FederatedSignIn\"] = \"30\";\n    AuthAction[\"RememberDevice\"] = \"32\";\n    AuthAction[\"ForgetDevice\"] = \"33\";\n    AuthAction[\"FetchDevices\"] = \"34\";\n    AuthAction[\"SendUserAttributeVerificationCode\"] = \"35\";\n    AuthAction[\"SignInWithRedirect\"] = \"36\";\n})(AuthAction || (AuthAction = {}));\nvar DataStoreAction;\n(function (DataStoreAction) {\n    DataStoreAction[\"Subscribe\"] = \"1\";\n    DataStoreAction[\"GraphQl\"] = \"2\";\n})(DataStoreAction || (DataStoreAction = {}));\nvar GeoAction;\n(function (GeoAction) {\n    GeoAction[\"SearchByText\"] = \"0\";\n    GeoAction[\"SearchByCoordinates\"] = \"1\";\n    GeoAction[\"SearchForSuggestions\"] = \"2\";\n    GeoAction[\"SearchByPlaceId\"] = \"3\";\n    GeoAction[\"SaveGeofences\"] = \"4\";\n    GeoAction[\"GetGeofence\"] = \"5\";\n    GeoAction[\"ListGeofences\"] = \"6\";\n    GeoAction[\"DeleteGeofences\"] = \"7\";\n})(GeoAction || (GeoAction = {}));\nvar InAppMessagingAction;\n(function (InAppMessagingAction) {\n    InAppMessagingAction[\"SyncMessages\"] = \"1\";\n    InAppMessagingAction[\"IdentifyUser\"] = \"2\";\n    InAppMessagingAction[\"NotifyMessageInteraction\"] = \"3\";\n})(InAppMessagingAction || (InAppMessagingAction = {}));\nvar InteractionsAction;\n(function (InteractionsAction) {\n    InteractionsAction[\"None\"] = \"0\";\n})(InteractionsAction || (InteractionsAction = {}));\nvar PredictionsAction;\n(function (PredictionsAction) {\n    PredictionsAction[\"Convert\"] = \"1\";\n    PredictionsAction[\"Identify\"] = \"2\";\n    PredictionsAction[\"Interpret\"] = \"3\";\n})(PredictionsAction || (PredictionsAction = {}));\nvar PubSubAction;\n(function (PubSubAction) {\n    PubSubAction[\"Subscribe\"] = \"1\";\n})(PubSubAction || (PubSubAction = {}));\nvar PushNotificationAction;\n(function (PushNotificationAction) {\n    PushNotificationAction[\"InitializePushNotifications\"] = \"1\";\n    PushNotificationAction[\"IdentifyUser\"] = \"2\";\n})(PushNotificationAction || (PushNotificationAction = {}));\nvar StorageAction;\n(function (StorageAction) {\n    StorageAction[\"UploadData\"] = \"1\";\n    StorageAction[\"DownloadData\"] = \"2\";\n    StorageAction[\"List\"] = \"3\";\n    StorageAction[\"Copy\"] = \"4\";\n    StorageAction[\"Remove\"] = \"5\";\n    StorageAction[\"GetProperties\"] = \"6\";\n    StorageAction[\"GetUrl\"] = \"7\";\n})(StorageAction || (StorageAction = {}));\n\nexport { AnalyticsAction, ApiAction, AuthAction, Category, DataStoreAction, Framework, GeoAction, InAppMessagingAction, InteractionsAction, PredictionsAction, PubSubAction, PushNotificationAction, StorageAction };\n\n", "// generated by genversion\nconst version = '6.0.17';\n\nexport { version };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst globalExists = () => {\n    return typeof global !== 'undefined';\n};\nconst globalThisExists = () => {\n    return typeof globalThis !== 'undefined';\n};\nconst windowExists = () => {\n    return typeof window !== 'undefined';\n};\nconst documentExists = () => {\n    return typeof document !== 'undefined';\n};\nconst processExists = () => {\n    return typeof process !== 'undefined';\n};\nconst keyPrefixMatch = (object, prefix) => {\n    return !!Object.keys(object).find(key => key.startsWith(prefix));\n};\n\nexport { documentExists, globalExists, globalThisExists, keyPrefixMatch, processExists, windowExists };\n\n", "import { documentExists, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react 18.2 - built using Vite\nfunction reactWebDetect() {\n    const elementKeyPrefixedWithReact = (key) => {\n        return key.startsWith('_react') || key.startsWith('__react');\n    };\n    const elementIsReactEnabled = (element) => {\n        return Object.keys(element).find(elementKeyPrefixedWithReact);\n    };\n    const allElementsWithId = () => Array.from(document.querySelectorAll('[id]'));\n    return documentExists() && allElementsWithId().some(elementIsReactEnabled);\n}\nfunction reactSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('react')));\n}\n// use the some\n\nexport { reactSSRDetect, reactWebDetect };\n\n", "import { windowExists, keyPrefixMatch, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with vue 3.3.2\nfunction vueWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__VUE');\n}\nfunction vueSSRDetect() {\n    return globalExists() && keyPrefixMatch(global, '__VUE');\n}\n\nexport { vueSSRDetect, vueWebDetect };\n\n", "import { windowExists, keyPrefixMatch, processExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with svelte 3.59\nfunction svelteWebDetect() {\n    return windowExists() && keyPrefixMatch(window, '__SVELTE');\n}\nfunction svelteSSRDetect() {\n    return (processExists() &&\n        typeof process.env !== 'undefined' &&\n        !!Object.keys(process.env).find(key => key.includes('svelte')));\n}\n\nexport { svelteSSRDetect, svelteWebDetect };\n\n", "import { windowExists, globalExists, keyPrefixMatch } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with next 13.4 / react 18.2\nfunction nextWebDetect() {\n    return (windowExists() &&\n        window.next &&\n        typeof window.next === 'object');\n}\nfunction nextSSRDetect() {\n    return (globalExists() &&\n        (keyPrefixMatch(global, '__next') || keyPrefixMatch(global, '__NEXT')));\n}\n\nexport { nextSSRDetect, nextWebDetect };\n\n", "import { windowExists, globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with nuxt 2.15 / vue 2.7\nfunction nuxtWebDetect() {\n    return (windowExists() &&\n        (window.__NUXT__ !== undefined ||\n            window.$nuxt !== undefined));\n}\nfunction nuxtSSRDetect() {\n    return (globalExists() && typeof global.__NUXT_PATHS__ !== 'undefined');\n}\n\nexport { nuxtSSRDetect, nuxtWebDetect };\n\n", "import { documentExists, processExists, windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with @angular/core 16.0.0\nfunction angularWebDetect() {\n    const angularVersionSetInDocument = Boolean(documentExists() && document.querySelector('[ng-version]'));\n    const angularContentSetInWindow = Boolean(windowExists() && typeof window.ng !== 'undefined');\n    return angularVersionSetInDocument || angularContentSetInWindow;\n}\nfunction angularSSRDetect() {\n    return ((processExists() &&\n        typeof process.env === 'object' &&\n        process.env.npm_lifecycle_script?.startsWith('ng ')) ||\n        false);\n}\n\nexport { angularSSRDetect, angularWebDetect };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with react-native 0.17.7\nfunction reactNativeDetect() {\n    return (typeof navigator !== 'undefined' &&\n        typeof navigator.product !== 'undefined' &&\n        navigator.product === 'ReactNative');\n}\n\nexport { reactNativeDetect };\n\n", "import { globalExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Tested with expo 48 / react-native 0.71.3\nfunction expoDetect() {\n    return globalExists() && typeof global.expo !== 'undefined';\n}\n\nexport { expoDetect };\n\n", "import { windowExists } from './helpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction webDetect() {\n    return windowExists();\n}\n\nexport { webDetect };\n\n", "import { Framework } from '../types.mjs';\nimport { reactWebDetect, reactSSRDetect } from './React.mjs';\nimport { vueWebDetect, vueSSRDetect } from './Vue.mjs';\nimport { svelteWebDetect, svelteSSRDetect } from './Svelte.mjs';\nimport { nextWebDetect, nextSSRDetect } from './Next.mjs';\nimport { nuxtWebDetect, nuxtSSRDetect } from './Nuxt.mjs';\nimport { angularWebDetect, angularSSRDetect } from './Angular.mjs';\nimport { reactNativeDetect } from './ReactNative.mjs';\nimport { expoDetect } from './Expo.mjs';\nimport { webDetect } from './Web.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// These are in the order of detection where when both are detectable, the early Framework will be reported\nconst detectionMap = [\n    // First, detect mobile\n    { platform: Framework.Expo, detectionMethod: expoDetect },\n    { platform: Framework.ReactNative, detectionMethod: reactNativeDetect },\n    // Next, detect web frameworks\n    { platform: Framework.NextJs, detectionMethod: nextWebDetect },\n    { platform: Framework.Nuxt, detectionMethod: nuxtWebDetect },\n    { platform: Framework.Angular, detectionMethod: angularWebDetect },\n    { platform: Framework.React, detectionMethod: reactWebDetect },\n    { platform: Framework.VueJs, detectionMethod: vueWebDetect },\n    { platform: Framework.Svelte, detectionMethod: svelteWebDetect },\n    { platform: Framework.WebUnknown, detectionMethod: webDetect },\n    // Last, detect ssr frameworks\n    { platform: Framework.NextJsSSR, detectionMethod: nextSSRDetect },\n    { platform: Framework.NuxtSSR, detectionMethod: nuxtSSRDetect },\n    { platform: Framework.ReactSSR, detectionMethod: reactSSRDetect },\n    { platform: Framework.VueJsSSR, detectionMethod: vueSSRDetect },\n    { platform: Framework.AngularSSR, detectionMethod: angularSSRDetect },\n    { platform: Framework.SvelteSSR, detectionMethod: svelteSSRDetect },\n];\nfunction detect() {\n    return (detectionMap.find(detectionEntry => detectionEntry.detectionMethod())\n        ?.platform || Framework.ServerSideUnknown);\n}\n\nexport { detect };\n\n", "import { Framework } from './types.mjs';\nimport { detect } from './detection/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// We want to cache detection since the framework won't change\nlet frameworkCache;\nconst frameworkChangeObservers = [];\n// Setup the detection reset tracking / timeout delays\nlet resetTriggered = false;\nconst SSR_RESET_TIMEOUT = 10; // ms\nconst WEB_RESET_TIMEOUT = 10; // ms\nconst PRIME_FRAMEWORK_DELAY = 1000; // ms\nconst detectFramework = () => {\n    if (!frameworkCache) {\n        frameworkCache = detect();\n        if (resetTriggered) {\n            // The final run of detectFramework:\n            // Starting from this point, the `frameworkCache` becomes \"final\".\n            // So we don't need to notify the observers again so the observer\n            // can be removed after the final notice.\n            while (frameworkChangeObservers.length) {\n                frameworkChangeObservers.pop()?.();\n            }\n        }\n        else {\n            // The first run of detectFramework:\n            // Every time we update the cache, call each observer function\n            frameworkChangeObservers.forEach(fcn => {\n                fcn();\n            });\n        }\n        // Retry once for either Unknown type after a delay (explained below)\n        resetTimeout(Framework.ServerSideUnknown, SSR_RESET_TIMEOUT);\n        resetTimeout(Framework.WebUnknown, WEB_RESET_TIMEOUT);\n    }\n    return frameworkCache;\n};\n/**\n * @internal Setup observer callback that will be called everytime the framework changes\n */\nconst observeFrameworkChanges = (fcn) => {\n    // When the `frameworkCache` won't be updated again, we ignore all incoming\n    // observers.\n    if (resetTriggered) {\n        return;\n    }\n    frameworkChangeObservers.push(fcn);\n};\nfunction clearCache() {\n    frameworkCache = undefined;\n}\n// For a framework type and a delay amount, setup the event to re-detect\n//   During the runtime boot, it is possible that framework detection will\n//   be triggered before the framework has made modifications to the\n//   global/window/etc needed for detection. When no framework is detected\n//   we will reset and try again to ensure we don't use a cached\n//   non-framework detection result for all requests.\nfunction resetTimeout(framework, delay) {\n    if (frameworkCache === framework && !resetTriggered) {\n        setTimeout(() => {\n            clearCache();\n            resetTriggered = true;\n            setTimeout(detectFramework, PRIME_FRAMEWORK_DELAY);\n        }, delay);\n    }\n}\n\nexport { clearCache, detectFramework, frameworkChangeObservers, observeFrameworkChanges };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n\nexport { getCustomUserAgent, setCustomUserAgent };\n\n", "import { Framework } from './types.mjs';\nimport { version } from './version.mjs';\nimport { detectFramework, observeFrameworkChanges } from './detectFramework.mjs';\nimport { getCustomUserAgent } from './customUserAgent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst BASE_USER_AGENT = `aws-amplify`;\nclass PlatformBuilder {\n    constructor() {\n        this.userAgent = `${BASE_USER_AGENT}/${version}`;\n    }\n    get framework() {\n        return detectFramework();\n    }\n    get isReactNative() {\n        return (this.framework === Framework.ReactNative ||\n            this.framework === Framework.Expo);\n    }\n    observeFrameworkChanges(fcn) {\n        observeFrameworkChanges(fcn);\n    }\n}\nconst Platform = new PlatformBuilder();\nconst getAmplifyUserAgentObject = ({ category, action, } = {}) => {\n    const userAgent = [[BASE_USER_AGENT, version]];\n    if (category) {\n        userAgent.push([category, action]);\n    }\n    userAgent.push(['framework', detectFramework()]);\n    if (category && action) {\n        const customState = getCustomUserAgent(category, action);\n        if (customState) {\n            customState.forEach(state => {\n                userAgent.push(state);\n            });\n        }\n    }\n    return userAgent;\n};\nconst getAmplifyUserAgent = (customUserAgentDetails) => {\n    const userAgent = getAmplifyUserAgentObject(customUserAgentDetails);\n    const userAgentString = userAgent\n        .map(([agentKey, agentValue]) => agentKey && agentValue ? `${agentKey}/${agentValue}` : agentKey)\n        .join(' ');\n    return userAgentString;\n};\n\nexport { Platform, getAmplifyUserAgent, getAmplifyUserAgentObject };\n\n", "import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\nimport { unauthenticatedHandler } from '../../clients/handlers/unauthenticated.mjs';\nimport { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler.mjs';\nimport { parseJsonError } from '../../clients/serde/json.mjs';\nimport { getAmplifyUserAgent } from '../../Platform/index.mjs';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddlewareFactory = () => next => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddlewareFactory]);\n/**\n * @internal\n */\nconst defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\nobserveFrameworkChanges(() => {\n    defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\n/**\n * @internal\n */\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n\nexport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders };\n\n", "import '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getIdSerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetId');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getIdDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nconst getId = composeServiceApi(cognitoIdentityTransferHandler, getIdSerializer, getIdDeserializer, defaultConfig);\n\nexport { getId };\n\n", "import '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { defaultConfig, cognitoIdentityTransferHandler, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCredentialsForIdentitySerializer = (input, endpoint) => {\n    const headers = getSharedHeaders('GetCredentialsForIdentity');\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst getCredentialsForIdentityDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const body = await parseJsonBody(response);\n        return {\n            IdentityId: body.IdentityId,\n            Credentials: deserializeCredentials(body.Credentials),\n            $metadata: parseMetadata(response),\n        };\n    }\n};\nconst deserializeCredentials = ({ AccessKeyId, SecretKey, SessionToken, Expiration, } = {}) => {\n    return {\n        AccessKeyId,\n        SecretKey,\n        SessionToken,\n        Expiration: Expiration && new Date(Expiration * 1000),\n    };\n};\n/**\n * @internal\n */\nconst getCredentialsForIdentity = composeServiceApi(cognitoIdentityTransferHandler, getCredentialsForIdentitySerializer, getCredentialsForIdentityDeserializer, defaultConfig);\n\nexport { getCredentialsForIdentity };\n\n", "import { AmplifyErrorCode } from '../types/errors.mjs';\nimport { AmplifyError } from './AmplifyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass PlatformNotSupportedError extends AmplifyError {\n    constructor() {\n        super({\n            name: AmplifyErrorCode.PlatformNotSupported,\n            message: 'Function not supported on current platform',\n        });\n    }\n}\n\nexport { PlatformNotSupportedError };\n\n", "import { PlatformNotSupportedError } from '../errors/PlatformNotSupportedError.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass KeyValueStorage {\n    constructor(storage) {\n        this.storage = storage;\n    }\n    /**\n     * This is used to set a specific item in storage\n     * @param {string} key - the key for the item\n     * @param {object} value - the value\n     * @returns {string} value that was set\n     */\n    async setItem(key, value) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.setItem(key, value);\n    }\n    /**\n     * This is used to get a specific key from storage\n     * @param {string} key - the key for the item\n     * This is used to clear the storage\n     * @returns {string} the data item\n     */\n    async getItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        return this.storage.getItem(key);\n    }\n    /**\n     * This is used to remove an item from storage\n     * @param {string} key - the key being set\n     * @returns {string} value - value that was deleted\n     */\n    async removeItem(key) {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.removeItem(key);\n    }\n    /**\n     * This is used to clear the storage\n     * @returns {string} nothing\n     */\n    async clear() {\n        if (!this.storage)\n            throw new PlatformNotSupportedError();\n        this.storage.clear();\n    }\n}\n\nexport { KeyValueStorage };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass InMemoryStorage {\n    constructor() {\n        this.storage = new Map();\n    }\n    get length() {\n        return this.storage.size;\n    }\n    key(index) {\n        if (index > this.length - 1) {\n            return null;\n        }\n        return Array.from(this.storage.keys())[index];\n    }\n    setItem(key, value) {\n        this.storage.set(key, value);\n    }\n    getItem(key) {\n        return this.storage.get(key) ?? null;\n    }\n    removeItem(key) {\n        this.storage.delete(key);\n    }\n    clear() {\n        this.storage.clear();\n    }\n}\n\nexport { InMemoryStorage };\n\n", "import { InMemoryStorage } from './InMemoryStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n * @returns Either a reference to window.localStorage or an in-memory storage as fallback\n */\nconst getLocalStorageWithFallback = () => typeof window !== 'undefined' && window.localStorage\n    ? window.localStorage\n    : new InMemoryStorage();\n/**\n * @internal\n * @returns Either a reference to window.sessionStorage or an in-memory storage as fallback\n */\nconst getSessionStorageWithFallback = () => typeof window !== 'undefined' && window.sessionStorage\n    ? window.sessionStorage\n    : new InMemoryStorage();\n\nexport { getLocalStorageWithFallback, getSessionStorageWithFallback };\n\n", "import { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { getLocalStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass DefaultStorage extends KeyValueStorage {\n    constructor() {\n        super(getLocalStorageWithFallback());\n    }\n}\n\nexport { DefaultStorage };\n\n", "import { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { getSessionStorageWithFallback } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nclass SessionStorage extends KeyValueStorage {\n    constructor() {\n        super(getSessionStorageWithFallback());\n    }\n}\n\nexport { SessionStorage };\n\n", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "import JsCookie from 'js-cookie';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CookieStorage {\n    constructor(data = {}) {\n        const { path, domain, expires, sameSite, secure } = data;\n        this.domain = domain;\n        this.path = path || '/';\n        this.expires = Object.prototype.hasOwnProperty.call(data, 'expires')\n            ? expires\n            : 365;\n        this.secure = Object.prototype.hasOwnProperty.call(data, 'secure')\n            ? secure\n            : true;\n        if (Object.prototype.hasOwnProperty.call(data, 'sameSite')) {\n            if (!sameSite || !['strict', 'lax', 'none'].includes(sameSite)) {\n                throw new Error('The sameSite value of cookieStorage must be \"lax\", \"strict\" or \"none\".');\n            }\n            if (sameSite === 'none' && !this.secure) {\n                throw new Error('sameSite = None requires the Secure attribute in latest browser versions.');\n            }\n            this.sameSite = sameSite;\n        }\n    }\n    async setItem(key, value) {\n        JsCookie.set(key, value, this.getData());\n    }\n    async getItem(key) {\n        const item = JsCookie.get(key);\n        return item ?? null;\n    }\n    async removeItem(key) {\n        JsCookie.remove(key, this.getData());\n    }\n    async clear() {\n        const cookie = JsCookie.get();\n        const promises = Object.keys(cookie).map(key => this.removeItem(key));\n        await Promise.all(promises);\n    }\n    getData() {\n        return {\n            path: this.path,\n            expires: this.expires,\n            domain: this.domain,\n            secure: this.secure,\n            ...(this.sameSite && { sameSite: this.sameSite }),\n        };\n    }\n}\n\nexport { CookieStorage };\n\n", "import { DefaultStorage } from './DefaultStorage.mjs';\nimport { InMemoryStorage } from './InMemoryStorage.mjs';\nimport { KeyValueStorage } from './KeyValueStorage.mjs';\nimport { SessionStorage } from './SessionStorage.mjs';\nexport { CookieStorage } from './CookieStorage.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst defaultStorage = new DefaultStorage();\nconst sessionStorage = new SessionStorage();\nconst sharedInMemoryStorage = new KeyValueStorage(new InMemoryStorage());\n\nexport { defaultStorage, sessionStorage, sharedInMemoryStorage };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Default cache config\n */\nconst defaultConfig = {\n    keyPrefix: 'aws-amplify-cache',\n    capacityInBytes: 1048576,\n    itemMaxSize: 210000,\n    defaultTTL: 259200000,\n    defaultPriority: 5,\n    warningThreshold: 0.8,\n};\nconst currentSizeKey = 'CurSize';\n\nexport { currentSizeKey, defaultConfig };\n\n", "import { currentSizeKey } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * return the byte size of the string\n * @param str\n */\nfunction getByteLength(str) {\n    let ret = 0;\n    ret = str.length;\n    for (let i = str.length; i >= 0; i -= 1) {\n        const charCode = str.charCodeAt(i);\n        if (charCode > 0x7f && charCode <= 0x7ff) {\n            ret += 1;\n        }\n        else if (charCode > 0x7ff && charCode <= 0xffff) {\n            ret += 2;\n        }\n        // trail surrogate\n        if (charCode >= 0xdc00 && charCode <= 0xdfff) {\n            i -= 1;\n        }\n    }\n    return ret;\n}\n/**\n * get current time\n */\nfunction getCurrentTime() {\n    const currentTime = new Date();\n    return currentTime.getTime();\n}\n/**\n * check if passed value is an integer\n */\nfunction isInteger(value) {\n    if (Number.isInteger) {\n        return Number.isInteger(value);\n    }\n    return (typeof value === 'number' && isFinite(value) && Math.floor(value) === value);\n}\nconst getCurrentSizeKey = (keyPrefix) => `${keyPrefix}${currentSizeKey}`;\n\nexport { getByteLength, getCurrentSizeKey, getCurrentTime, isInteger };\n\n", "import { createAssertionFunction } from '../../errors/createAssertionFunction.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar CacheErrorCode;\n(function (CacheErrorCode) {\n    CacheErrorCode[\"NoCacheItem\"] = \"NoCacheItem\";\n    CacheErrorCode[\"NullNextNode\"] = \"NullNextNode\";\n    CacheErrorCode[\"NullPreviousNode\"] = \"NullPreviousNode\";\n})(CacheErrorCode || (CacheErrorCode = {}));\nconst cacheErrorMap = {\n    [CacheErrorCode.NoCacheItem]: {\n        message: 'Item not found in the cache storage.',\n    },\n    [CacheErrorCode.NullNextNode]: {\n        message: 'Next node is null.',\n    },\n    [CacheErrorCode.NullPreviousNode]: {\n        message: 'Previous node is null.',\n    },\n};\nconst assert = createAssertionFunction(cacheErrorMap);\n\nexport { CacheErrorCode, assert };\n\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { defaultConfig, currentSizeKey } from './constants.mjs';\nimport { getCurrentSizeKey, getCurrentTime, getByteLength } from './utils/cacheHelpers.mjs';\nimport { assert, CacheErrorCode } from './utils/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Initialization of the cache\n *\n */\nclass StorageCacheCommon {\n    /**\n     * Initialize the cache\n     *\n     * @param config - Custom configuration for this instance.\n     */\n    constructor({ config, keyValueStorage, }) {\n        this.config = {\n            ...defaultConfig,\n            ...config,\n        };\n        this.keyValueStorage = keyValueStorage;\n        this.sanitizeConfig();\n    }\n    getModuleName() {\n        return 'Cache';\n    }\n    /**\n     * Set custom configuration for the cache instance.\n     *\n     * @param config - customized configuration (without keyPrefix, which can't be changed)\n     *\n     * @return - the current configuration\n     */\n    configure(config) {\n        if (config) {\n            if (config.keyPrefix) {\n                logger.warn('keyPrefix can not be re-configured on an existing Cache instance.');\n            }\n            this.config = {\n                ...this.config,\n                ...config,\n            };\n        }\n        this.sanitizeConfig();\n        return this.config;\n    }\n    /**\n     * return the current size of the cache\n     * @return {Promise}\n     */\n    async getCurrentCacheSize() {\n        let size = await this.getStorage().getItem(getCurrentSizeKey(this.config.keyPrefix));\n        if (!size) {\n            await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), '0');\n            size = '0';\n        }\n        return Number(size);\n    }\n    /**\n     * Set item into cache. You can put number, string, boolean or object.\n     * The cache will first check whether has the same key.\n     * If it has, it will delete the old item and then put the new item in\n     * The cache will pop out items if it is full\n     * You can specify the cache item options. The cache will abort and output a warning:\n     * If the key is invalid\n     * If the size of the item exceeds itemMaxSize.\n     * If the value is undefined\n     * If incorrect cache item configuration\n     * If error happened with browser storage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} value - the value of the item\n     * @param {Object} [options] - optional, the specified meta-data\n     *\n     * @return {Promise}\n     */\n    async setItem(key, value, options) {\n        logger.debug(`Set item: key is ${key}, value is ${value} with options: ${options}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        if (typeof value === 'undefined') {\n            logger.warn(`The value of item should not be undefined!`);\n            return;\n        }\n        const cacheItemOptions = {\n            priority: options?.priority !== undefined\n                ? options.priority\n                : this.config.defaultPriority,\n            expires: options?.expires !== undefined\n                ? options.expires\n                : this.config.defaultTTL + getCurrentTime(),\n        };\n        if (cacheItemOptions.priority < 1 || cacheItemOptions.priority > 5) {\n            logger.warn(`Invalid parameter: priority due to out or range. It should be within 1 and 5.`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        const item = this.fillCacheItem(prefixedKey, value, cacheItemOptions);\n        // check whether this item is too big;\n        if (item.byteSize > this.config.itemMaxSize) {\n            logger.warn(`Item with key: ${key} you are trying to put into is too big!`);\n            return;\n        }\n        try {\n            // first look into the storage, if it exists, delete it.\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n            // check whether the cache is full\n            if (await this.isCacheFull(item.byteSize)) {\n                const validKeys = await this.clearInvalidAndGetRemainingKeys();\n                if (await this.isCacheFull(item.byteSize)) {\n                    const sizeToPop = await this.sizeToPop(item.byteSize);\n                    await this.popOutItems(validKeys, sizeToPop);\n                }\n            }\n            // put item in the cache\n            return this.setCacheItem(prefixedKey, item);\n        }\n        catch (e) {\n            logger.warn(`setItem failed! ${e}`);\n        }\n    }\n    /**\n     * Get item from cache. It will return null if item doesn’t exist or it has been expired.\n     * If you specified callback function in the options,\n     * then the function will be executed if no such item in the cache\n     * and finally put the return value into cache.\n     * Please make sure the callback function will return the value you want to put into the cache.\n     * The cache will abort output a warning:\n     * If the key is invalid\n     * If error happened with AsyncStorage\n     *\n     * @param {String} key - the key of the item\n     * @param {Object} [options] - the options of callback function\n     *\n     * @return {Promise} - return a promise resolves to be the value of the item\n     */\n    async getItem(key, options) {\n        logger.debug(`Get item: key is ${key} with options ${options}`);\n        let cached;\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return null;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            cached = await this.getStorage().getItem(prefixedKey);\n            if (cached != null) {\n                if (await this.isExpired(prefixedKey)) {\n                    // if expired, remove that item and return null\n                    await this.removeCacheItem(prefixedKey, JSON.parse(cached).byteSize);\n                }\n                else {\n                    // if not expired, update its visitedTime and return the value\n                    const item = await this.updateVisitedTime(JSON.parse(cached), prefixedKey);\n                    return item.data;\n                }\n            }\n            if (options?.callback) {\n                const val = options.callback();\n                if (val !== null) {\n                    await this.setItem(key, val, options);\n                }\n                return val;\n            }\n            return null;\n        }\n        catch (e) {\n            logger.warn(`getItem failed! ${e}`);\n            return null;\n        }\n    }\n    /**\n     * remove item from the cache\n     * The cache will abort output a warning:\n     * If error happened with AsyncStorage\n     * @param {String} key - the key of the item\n     * @return {Promise}\n     */\n    async removeItem(key) {\n        logger.debug(`Remove item: key is ${key}`);\n        if (!key || key === currentSizeKey) {\n            logger.warn(`Invalid key: should not be empty or reserved key: '${currentSizeKey}'`);\n            return;\n        }\n        const prefixedKey = `${this.config.keyPrefix}${key}`;\n        try {\n            const val = await this.getStorage().getItem(prefixedKey);\n            if (val) {\n                await this.removeCacheItem(prefixedKey, JSON.parse(val).byteSize);\n            }\n        }\n        catch (e) {\n            logger.warn(`removeItem failed! ${e}`);\n        }\n    }\n    /**\n     * Return all the keys owned by this cache.\n     * Will return an empty array if error occurred.\n     *\n     * @return {Promise}\n     */\n    async getAllKeys() {\n        try {\n            return await this.getAllCacheKeys();\n        }\n        catch (e) {\n            logger.warn(`getAllkeys failed! ${e}`);\n            return [];\n        }\n    }\n    getStorage() {\n        return this.keyValueStorage;\n    }\n    /**\n     * check whether item is expired\n     *\n     * @param key - the key of the item\n     *\n     * @return true if the item is expired.\n     */\n    async isExpired(key) {\n        const text = await this.getStorage().getItem(key);\n        assert(text !== null, CacheErrorCode.NoCacheItem, `Key: ${key}`);\n        const item = JSON.parse(text);\n        if (getCurrentTime() >= item.expires) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * delete item from cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param size - optional, the byte size of the item\n     */\n    async removeCacheItem(prefixedKey, size) {\n        const item = await this.getStorage().getItem(prefixedKey);\n        assert(item !== null, CacheErrorCode.NoCacheItem, `Key: ${prefixedKey}`);\n        const itemSize = size ?? JSON.parse(item).byteSize;\n        // first try to update the current size of the cache\n        await this.decreaseCurrentSizeInBytes(itemSize);\n        // try to remove the item from cache\n        try {\n            await this.getStorage().removeItem(prefixedKey);\n        }\n        catch (removeItemError) {\n            // if some error happened, we need to rollback the current size\n            await this.increaseCurrentSizeInBytes(itemSize);\n            logger.error(`Failed to remove item: ${removeItemError}`);\n        }\n    }\n    /**\n     * produce a JSON object with meta-data and data value\n     * @param value - the value of the item\n     * @param options - optional, the specified meta-data\n     *\n     * @return - the item which has the meta-data and the value\n     */\n    fillCacheItem(key, value, options) {\n        const item = {\n            key,\n            data: value,\n            timestamp: getCurrentTime(),\n            visitedTime: getCurrentTime(),\n            priority: options.priority ?? 0,\n            expires: options.expires ?? 0,\n            type: typeof value,\n            byteSize: 0,\n        };\n        // calculate byte size\n        item.byteSize = getByteLength(JSON.stringify(item));\n        // re-calculate using cache item with updated byteSize property\n        item.byteSize = getByteLength(JSON.stringify(item));\n        return item;\n    }\n    sanitizeConfig() {\n        if (this.config.itemMaxSize > this.config.capacityInBytes) {\n            logger.error('Invalid parameter: itemMaxSize. It should be smaller than capacityInBytes. Setting back to default.');\n            this.config.itemMaxSize = defaultConfig.itemMaxSize;\n        }\n        if (this.config.defaultPriority > 5 || this.config.defaultPriority < 1) {\n            logger.error('Invalid parameter: defaultPriority. It should be between 1 and 5. Setting back to default.');\n            this.config.defaultPriority = defaultConfig.defaultPriority;\n        }\n        if (Number(this.config.warningThreshold) > 1 ||\n            Number(this.config.warningThreshold) < 0) {\n            logger.error('Invalid parameter: warningThreshold. It should be between 0 and 1. Setting back to default.');\n            this.config.warningThreshold = defaultConfig.warningThreshold;\n        }\n        // Set 5MB limit\n        const cacheLimit = 5 * 1024 * 1024;\n        if (this.config.capacityInBytes > cacheLimit) {\n            logger.error('Cache Capacity should be less than 5MB. Setting back to default. Setting back to default.');\n            this.config.capacityInBytes = defaultConfig.capacityInBytes;\n        }\n    }\n    /**\n     * increase current size of the cache\n     *\n     * @param amount - the amount of the cache szie which need to be increased\n     */\n    async increaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size + amount).toString());\n    }\n    /**\n     * decrease current size of the cache\n     *\n     * @param amount - the amount of the cache size which needs to be decreased\n     */\n    async decreaseCurrentSizeInBytes(amount) {\n        const size = await this.getCurrentCacheSize();\n        await this.getStorage().setItem(getCurrentSizeKey(this.config.keyPrefix), (size - amount).toString());\n    }\n    /**\n     * update the visited time if item has been visited\n     *\n     * @param item - the item which need to be updated\n     * @param prefixedKey - the key of the item\n     *\n     * @return the updated item\n     */\n    async updateVisitedTime(item, prefixedKey) {\n        item.visitedTime = getCurrentTime();\n        await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        return item;\n    }\n    /**\n     * put item into cache\n     *\n     * @param prefixedKey - the key of the item\n     * @param itemData - the value of the item\n     * @param itemSizeInBytes - the byte size of the item\n     */\n    async setCacheItem(prefixedKey, item) {\n        // first try to update the current size of the cache.\n        await this.increaseCurrentSizeInBytes(item.byteSize);\n        // try to add the item into cache\n        try {\n            await this.getStorage().setItem(prefixedKey, JSON.stringify(item));\n        }\n        catch (setItemErr) {\n            // if some error happened, we need to rollback the current size\n            await this.decreaseCurrentSizeInBytes(item.byteSize);\n            logger.error(`Failed to set item ${setItemErr}`);\n        }\n    }\n    /**\n     * total space needed when poping out items\n     *\n     * @param itemSize\n     *\n     * @return total space needed\n     */\n    async sizeToPop(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        const spaceItemNeed = cur + itemSize - this.config.capacityInBytes;\n        const cacheThresholdSpace = (1 - this.config.warningThreshold) * this.config.capacityInBytes;\n        return spaceItemNeed > cacheThresholdSpace\n            ? spaceItemNeed\n            : cacheThresholdSpace;\n    }\n    /**\n     * see whether cache is full\n     *\n     * @param itemSize\n     *\n     * @return true if cache is full\n     */\n    async isCacheFull(itemSize) {\n        const cur = await this.getCurrentCacheSize();\n        return itemSize + cur > this.config.capacityInBytes;\n    }\n    /**\n     * get all the items we have, sort them by their priority,\n     * if priority is same, sort them by their last visited time\n     * pop out items from the low priority (5 is the lowest)\n     * @private\n     * @param keys - all the keys in this cache\n     * @param sizeToPop - the total size of the items which needed to be poped out\n     */\n    async popOutItems(keys, sizeToPop) {\n        const items = [];\n        let remainedSize = sizeToPop;\n        for (const key of keys) {\n            const val = await this.getStorage().getItem(key);\n            if (val != null) {\n                const item = JSON.parse(val);\n                items.push(item);\n            }\n        }\n        // first compare priority\n        // then compare visited time\n        items.sort((a, b) => {\n            if (a.priority > b.priority) {\n                return -1;\n            }\n            else if (a.priority < b.priority) {\n                return 1;\n            }\n            else {\n                if (a.visitedTime < b.visitedTime) {\n                    return -1;\n                }\n                else\n                    return 1;\n            }\n        });\n        for (const item of items) {\n            // pop out items until we have enough room for new item\n            await this.removeCacheItem(item.key, item.byteSize);\n            remainedSize -= item.byteSize;\n            if (remainedSize <= 0) {\n                return;\n            }\n        }\n    }\n    /**\n     * Scan the storage and combine the following operations for efficiency\n     *   1. Clear out all expired keys owned by this cache, not including the size key.\n     *   2. Return the remaining keys.\n     *\n     * @return The remaining valid keys\n     */\n    async clearInvalidAndGetRemainingKeys() {\n        const remainingKeys = [];\n        const keys = await this.getAllCacheKeys({\n            omitSizeKey: true,\n        });\n        for (const key of keys) {\n            if (await this.isExpired(key)) {\n                await this.removeCacheItem(key);\n            }\n            else {\n                remainingKeys.push(key);\n            }\n        }\n        return remainingKeys;\n    }\n    /**\n     * clear the entire cache\n     * The cache will abort and output a warning if error occurs\n     * @return {Promise}\n     */\n    async clear() {\n        logger.debug(`Clear Cache`);\n        try {\n            const keys = await this.getAllKeys();\n            for (const key of keys) {\n                await this.getStorage().removeItem(key);\n            }\n        }\n        catch (e) {\n            logger.warn(`clear failed! ${e}`);\n        }\n    }\n}\n\nexport { StorageCacheCommon };\n\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { KeyValueStorage } from '../storage/KeyValueStorage.mjs';\nimport { getLocalStorageWithFallback } from '../storage/utils.mjs';\nimport { defaultConfig } from './constants.mjs';\nimport { StorageCacheCommon } from './StorageCacheCommon.mjs';\nimport { getCurrentSizeKey, getCurrentTime } from './utils/cacheHelpers.mjs';\nimport './utils/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('StorageCache');\n/**\n * Customized storage based on the SessionStorage or LocalStorage with LRU implemented\n */\nclass StorageCache extends StorageCacheCommon {\n    /**\n     * initialize the cache\n     * @param config - the configuration of the cache\n     */\n    constructor(config) {\n        const storage = getLocalStorageWithFallback();\n        super({ config, keyValueStorage: new KeyValueStorage(storage) });\n        this.storage = storage;\n        this.getItem = this.getItem.bind(this);\n        this.setItem = this.setItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n    }\n    async getAllCacheKeys(options) {\n        const { omitSizeKey } = options ?? {};\n        const keys = [];\n        for (let i = 0; i < this.storage.length; i++) {\n            const key = this.storage.key(i);\n            if (omitSizeKey && key === getCurrentSizeKey(this.config.keyPrefix)) {\n                continue;\n            }\n            if (key?.startsWith(this.config.keyPrefix)) {\n                keys.push(key.substring(this.config.keyPrefix.length));\n            }\n        }\n        return keys;\n    }\n    /**\n     * Return a new instance of cache with customized configuration.\n     * @param {Object} config - the customized configuration\n     * @return {Object} - the new instance of Cache\n     */\n    createInstance(config) {\n        if (!config.keyPrefix || config.keyPrefix === defaultConfig.keyPrefix) {\n            logger.error('invalid keyPrefix, setting keyPrefix with timeStamp');\n            config.keyPrefix = getCurrentTime.toString();\n        }\n        return new StorageCache(config);\n    }\n}\n\nexport { StorageCache };\n\n", "import { StorageCache } from './StorageCache.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst Cache = new StorageCache();\n\nexport { Cache };\n\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('I18n');\n/**\n * Language translation utility.\n */\nlet I18n$1 = class I18n {\n    constructor() {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n    }\n    /**\n     * Sets the default language from the configuration when required.\n     */\n    setDefaultLanguage() {\n        // Default to window language if not set in instance\n        if (!this._lang &&\n            typeof window !== 'undefined' &&\n            window &&\n            window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    setLanguage(lang) {\n        this._lang = lang;\n    }\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    get(key, defVal = undefined) {\n        this.setDefaultLanguage();\n        if (!this._lang) {\n            return typeof defVal !== 'undefined' ? defVal : key;\n        }\n        const lang = this._lang;\n        let val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return typeof defVal !== 'undefined' ? defVal : key;\n    }\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    getByLanguage(key, language, defVal = null) {\n        if (!language) {\n            return defVal;\n        }\n        const langDict = this._dict[language];\n        if (!langDict) {\n            return defVal;\n        }\n        return langDict[key];\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} language - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    putVocabulariesForLanguage(language, vocabularies) {\n        let langDict = this._dict[language];\n        if (!langDict) {\n            langDict = this._dict[language] = {};\n        }\n        this._dict[language] = { ...langDict, ...vocabularies };\n    }\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    putVocabularies(vocabularies) {\n        Object.keys(vocabularies).forEach(key => {\n            this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    }\n};\n\nexport { I18n$1 as I18n };\n\n", "import { createAssertionFunction } from '../errors/createAssertionFunction.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar I18nErrorCode;\n(function (I18nErrorCode) {\n    I18nErrorCode[\"NotConfigured\"] = \"NotConfigured\";\n})(I18nErrorCode || (I18nErrorCode = {}));\nconst i18nErrorMap = {\n    [I18nErrorCode.NotConfigured]: {\n        message: 'i18n is not configured.',\n    },\n};\nconst assert = createAssertionFunction(i18nErrorMap);\n\nexport { I18nErrorCode, assert };\n\n", "import { ConsoleLogger } from '../Logger/ConsoleLogger.mjs';\nimport { I18n as I18n$1 } from './I18n.mjs';\nimport { assert, I18nErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('I18n');\nlet _config = { language: null };\nlet _i18n = null;\n/**\n * Export I18n APIs\n */\nclass I18n {\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    static configure(config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    }\n    static getModuleName() {\n        return 'I18n';\n    }\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    static createInstance() {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18n$1();\n    }\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    static setLanguage(lang) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.setLanguage(lang);\n    }\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    static get(key, defVal) {\n        if (!I18n.checkConfig()) {\n            return typeof defVal === 'undefined' ? key : defVal;\n        }\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        return _i18n.get(key, defVal);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    static putVocabulariesForLanguage(language, vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabulariesForLanguage(language, vocabularies);\n    }\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    static putVocabularies(vocabularies) {\n        I18n.checkConfig();\n        assert(!!_i18n, I18nErrorCode.NotConfigured);\n        _i18n.putVocabularies(vocabularies);\n    }\n    static checkConfig() {\n        if (!_i18n) {\n            I18n.createInstance();\n        }\n        return true;\n    }\n}\n// Create an instance of I18n in the static class\nI18n.createInstance();\n\nexport { I18n };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport { isBrowser };\n\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\nimport { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport { parseJsonError } from '../../clients/serde/json.mjs';\nimport { getAmplifyUserAgent } from '../../Platform/index.mjs';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'mobiletargeting';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://pinpoint.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * @internal\n */\nconst defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n};\n/**\n * @internal\n */\nconst getSharedHeaders = () => ({\n    'content-type': 'application/json',\n});\n\nexport { defaultConfig, getSharedHeaders };\n\n", "import { createAssertionFunction } from '../../errors/createAssertionFunction.mjs';\nimport '../../types/errors.mjs';\nimport '../../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar PinpointValidationErrorCode;\n(function (PinpointValidationErrorCode) {\n    PinpointValidationErrorCode[\"NoAppId\"] = \"NoAppId\";\n})(PinpointValidationErrorCode || (PinpointValidationErrorCode = {}));\nconst pinpointValidationErrorMap = {\n    [PinpointValidationErrorCode.NoAppId]: {\n        message: 'Missing application id.',\n    },\n};\nconst assert = createAssertionFunction(pinpointValidationErrorMap);\n\nexport { PinpointValidationErrorCode, assert };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns signed headers.\n *\n * @param headers `headers` from the request.\n * @returns List of headers included in canonical headers, separated by semicolons (;). This indicates which headers\n * are part of the signing process. Header names must use lowercase characters and must appear in alphabetical order.\n *\n * @internal\n */\nconst getSignedHeaders = (headers) => Object.keys(headers)\n    .map(key => key.toLowerCase())\n    .sort()\n    .join(';');\n\nexport { getSignedHeaders };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// query params\nconst ALGORITHM_QUERY_PARAM = 'X-Amz-Algorithm';\nconst AMZ_DATE_QUERY_PARAM = 'X-Amz-Date';\nconst CREDENTIAL_QUERY_PARAM = 'X-Amz-Credential';\nconst EXPIRES_QUERY_PARAM = 'X-Amz-Expires';\nconst REGION_SET_PARAM = 'X-Amz-Region-Set';\nconst SIGNATURE_QUERY_PARAM = 'X-Amz-Signature';\nconst SIGNED_HEADERS_QUERY_PARAM = 'X-Amz-SignedHeaders';\nconst TOKEN_QUERY_PARAM = 'X-Amz-Security-Token';\n// headers\nconst AUTH_HEADER = 'authorization';\nconst HOST_HEADER = 'host';\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\n// identifiers\nconst KEY_TYPE_IDENTIFIER = 'aws4_request';\nconst SHA256_ALGORITHM_IDENTIFIER = 'AWS4-HMAC-SHA256';\nconst SIGNATURE_IDENTIFIER = 'AWS4';\n// preset values\nconst EMPTY_HASH = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\nconst UNSIGNED_PAYLOAD = 'UNSIGNED-PAYLOAD';\n\nexport { ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EMPTY_HASH, EXPIRES_QUERY_PARAM, HOST_HEADER, KEY_TYPE_IDENTIFIER, REGION_SET_PARAM, SHA256_ALGORITHM_IDENTIFIER, SIGNATURE_IDENTIFIER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, UNSIGNED_PAYLOAD };\n\n", "import { KEY_TYPE_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the credential scope which restricts the resulting signature to the specified region and service.\n *\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns  A string representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n *\n * @internal\n */\nconst getCredentialScope = (date, region, service) => `${date}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\n\nexport { getCredentialScope };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns expected date strings to be used in signing.\n *\n * @param date JavaScript `Date` object.\n * @returns `FormattedDates` object containing the following:\n * - longDate: A date string in 'YYYYMMDDThhmmssZ' format\n * - shortDate: A date string in 'YYYYMMDD' format\n *\n * @internal\n */\nconst getFormattedDates = (date) => {\n    const longDate = date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\n\nexport { getFormattedDates };\n\n", "import { getCredentialScope } from './getCredentialScope.mjs';\nimport { getFormattedDates } from './getFormattedDates.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Extracts common values used for signing both requests and urls.\n *\n * @param options `SignRequestOptions` object containing values used to construct the signature.\n * @returns Common `SigningValues` used for signing.\n *\n * @internal\n */\nconst getSigningValues = ({ credentials, signingDate = new Date(), signingRegion, signingService, uriEscapePath = true, }) => {\n    // get properties from credentials\n    const { accessKeyId, secretAccessKey, sessionToken } = credentials;\n    // get formatted dates for signing\n    const { longDate, shortDate } = getFormattedDates(signingDate);\n    // copy header and set signing properties\n    const credentialScope = getCredentialScope(shortDate, signingRegion, signingService);\n    return {\n        accessKeyId,\n        credentialScope,\n        longDate,\n        secretAccessKey,\n        sessionToken,\n        shortDate,\n        signingRegion,\n        signingService,\n        uriEscapePath,\n    };\n};\n\nexport { getSigningValues };\n\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { toHex } from '@smithy/util-hex-encoding';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// TODO: V6 update to different crypto dependency?\n/**\n * Returns the hashed data a `Uint8Array`.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns `Uint8Array` created from the data as input to a hash function.\n */\nconst getHashedData = (key, data) => {\n    const sha256 = new Sha256(key ?? undefined);\n    sha256.update(data);\n    // TODO: V6 flip to async digest\n    const hashedData = sha256.digestSync();\n    return hashedData;\n};\n/**\n * Returns the hashed data as a hex string.\n *\n * @param key `SourceData` to be used as hashing key.\n * @param data Hashable `SourceData`.\n * @returns String using lowercase hexadecimal characters created from the data as input to a hash function.\n *\n * @internal\n */\nconst getHashedDataAsHex = (key, data) => {\n    const hashedData = getHashedData(key, data);\n    return toHex(hashedData);\n};\n\nexport { getHashedData, getHashedDataAsHex };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns canonical headers.\n *\n * @param headers Headers from the request.\n * @returns Request headers that will be signed, and their values, separated by newline characters. Header names must\n * use lowercase characters, must appear in alphabetical order, and must be followed by a colon (:). For the values,\n * trim any leading or trailing spaces, convert sequential spaces to a single space, and separate the values\n * for a multi-value header using commas.\n *\n * @internal\n */\nconst getCanonicalHeaders = (headers) => Object.entries(headers)\n    .map(([key, value]) => ({\n    key: key.toLowerCase(),\n    value: value?.trim().replace(/\\s+/g, ' ') ?? '',\n}))\n    .sort((a, b) => (a.key < b.key ? -1 : 1))\n    .map(entry => `${entry.key}:${entry.value}\\n`)\n    .join('');\n\nexport { getCanonicalHeaders };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical query string.\n *\n * @param searchParams `searchParams` from the request url.\n * @returns URL-encoded query string parameters, separated by ampersands (&). Percent-encode reserved characters,\n * including the space character. Encode names and values separately. If there are empty parameters, append the equals\n * sign to the parameter name before encoding. After encoding, sort the parameters alphabetically by key name. If there\n * is no query string, use an empty string (\"\").\n *\n * @internal\n */\nconst getCanonicalQueryString = (searchParams) => Array.from(searchParams)\n    .sort(([keyA, valA], [keyB, valB]) => {\n    if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n    }\n    return keyA < keyB ? -1 : 1;\n})\n    .map(([key, val]) => `${escapeUri(key)}=${escapeUri(val)}`)\n    .join('&');\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nexport { getCanonicalQueryString };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical uri.\n *\n * @param pathname `pathname` from request url.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns URI-encoded version of the absolute path component URL (everything between the host and the question mark\n * character (?) that starts the query string parameters). If the absolute path is empty, a forward slash character (/).\n *\n * @internal\n */\nconst getCanonicalUri = (pathname, uriEscapePath = true) => pathname\n    ? uriEscapePath\n        ? encodeURIComponent(pathname).replace(/%2F/g, '/')\n        : pathname\n    : '/';\n\nexport { getCanonicalUri };\n\n", "import { EMPTY_HASH, UNSIGNED_PAYLOAD } from '../constants.mjs';\nimport { getHashedDataAsHex } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the hashed payload.\n *\n * @param body `body` (payload) from the request.\n * @returns String created using the payload in the body of the HTTP request as input to a hash function. This string\n * uses lowercase hexadecimal characters. If the payload is empty, return precalculated result of an empty hash.\n *\n * @internal\n */\nconst getHashedPayload = (body) => {\n    // return precalculated empty hash if body is undefined or null\n    if (body == null) {\n        return EMPTY_HASH;\n    }\n    if (isSourceData(body)) {\n        const hashedData = getHashedDataAsHex(null, body);\n        return hashedData;\n    }\n    // Defined body is not signable. Return unsigned payload which may or may not be accepted by the service.\n    return UNSIGNED_PAYLOAD;\n};\nconst isSourceData = (body) => typeof body === 'string' || ArrayBuffer.isView(body) || isArrayBuffer(body);\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === 'function' && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === '[object ArrayBuffer]';\n\nexport { getHashedPayload };\n\n", "import { getCanonicalHeaders } from './getCanonicalHeaders.mjs';\nimport { getCanonicalQueryString } from './getCanonicalQueryString.mjs';\nimport { getCanonicalUri } from './getCanonicalUri.mjs';\nimport { getHashedPayload } from './getHashedPayload.mjs';\nimport { getSignedHeaders } from './getSignedHeaders.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a canonical request.\n *\n * @param request `HttpRequest` from which to create the canonical request from.\n * @param uriEscapePath Whether to uri encode the path as part of canonical uri. It's used for S3 only where the\n *   pathname is already uri encoded, and the signing process is not expected to uri encode it again. Defaults to true.\n * @returns String created by by concatenating the following strings, separated by newline characters:\n * - HTTPMethod\n * - CanonicalUri\n * - CanonicalQueryString\n * - CanonicalHeaders\n * - SignedHeaders\n * - HashedPayload\n *\n * @internal\n */\nconst getCanonicalRequest = ({ body, headers, method, url }, uriEscapePath = true) => [\n    method,\n    getCanonicalUri(url.pathname, uriEscapePath),\n    getCanonicalQueryString(url.searchParams),\n    getCanonicalHeaders(headers),\n    getSignedHeaders(headers),\n    getHashedPayload(body),\n].join('\\n');\n\nexport { getCanonicalRequest };\n\n", "import { KEY_TYPE_IDENTIFIER, SIGNATURE_IDENTIFIER } from '../constants.mjs';\nimport { getHashedData } from './dataHashHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a signing key to be used for signing requests.\n *\n * @param secretAccessKey AWS secret access key from credentials.\n * @param date Current date in the format 'YYYYMMDD'.\n * @param region AWS region in which the service resides.\n * @param service Service to which the signed request is being sent.\n *\n * @returns `Uint8Array` calculated from its composite parts.\n *\n * @internal\n */\nconst getSigningKey = (secretAccessKey, date, region, service) => {\n    const key = `${SIGNATURE_IDENTIFIER}${secretAccessKey}`;\n    const dateKey = getHashedData(key, date);\n    const regionKey = getHashedData(dateKey, region);\n    const serviceKey = getHashedData(regionKey, service);\n    const signingKey = getHashedData(serviceKey, KEY_TYPE_IDENTIFIER);\n    return signingKey;\n};\n\nexport { getSigningKey };\n\n", "import { SHA256_ALGORITHM_IDENTIFIER } from '../constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a string to be signed.\n *\n * @param date Current date in the format 'YYYYMMDDThhmmssZ'.\n * @param credentialScope String representing the credential scope with format 'YYYYMMDD/region/service/aws4_request'.\n * @param hashedRequest Hashed canonical request.\n *\n * @returns A string created by by concatenating the following strings, separated by newline characters:\n * - Algorithm\n * - RequestDateTime\n * - CredentialScope\n * - HashedCanonicalRequest\n *\n * @internal\n */\nconst getStringToSign = (date, credentialScope, hashedRequest) => [SHA256_ALGORITHM_IDENTIFIER, date, credentialScope, hashedRequest].join('\\n');\n\nexport { getStringToSign };\n\n", "import { getHashedDataAsHex } from './dataHashHelpers.mjs';\nimport { getCanonicalRequest } from './getCanonicalRequest.mjs';\nimport { getSigningKey } from './getSigningKey.mjs';\nimport { getStringToSign } from './getStringToSign.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculates and returns an AWS API Signature.\n * https://docs.aws.amazon.com/IAM/latest/UserGuide/create-signed-request.html\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns AWS API Signature to sign a request or url with.\n *\n * @internal\n */\nconst getSignature = (request, { credentialScope, longDate, secretAccessKey, shortDate, signingRegion, signingService, uriEscapePath, }) => {\n    // step 1: create a canonical request\n    const canonicalRequest = getCanonicalRequest(request, uriEscapePath);\n    // step 2: create a hash of the canonical request\n    const hashedRequest = getHashedDataAsHex(null, canonicalRequest);\n    // step 3: create a string to sign\n    const stringToSign = getStringToSign(longDate, credentialScope, hashedRequest);\n    // step 4: calculate the signature\n    const signature = getHashedDataAsHex(getSigningKey(secretAccessKey, shortDate, signingRegion, signingService), stringToSign);\n    return signature;\n};\n\nexport { getSignature };\n\n", "import { getSignedHeaders } from './utils/getSignedHeaders.mjs';\nimport { getSigningValues } from './utils/getSigningValues.mjs';\nimport { HOST_HEADER, AMZ_DATE_HEADER, TOKEN_HEADER, AUTH_HEADER, SHA256_ALGORITHM_IDENTIFIER } from './constants.mjs';\nimport { getSignature } from './utils/getSignature.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Given a `HttpRequest`, returns a Signature Version 4 signed `HttpRequest`.\n *\n * @param request `HttpRequest` to be signed.\n * @param signRequestOptions `SignRequestOptions` object containing values used to construct the signature.\n * @returns A `HttpRequest` with authentication headers which can grant temporary access to AWS resources.\n */\nconst signRequest = (request, options) => {\n    const signingValues = getSigningValues(options);\n    const { accessKeyId, credentialScope, longDate, sessionToken } = signingValues;\n    // create the request to sign\n    const headers = { ...request.headers };\n    headers[HOST_HEADER] = request.url.host;\n    headers[AMZ_DATE_HEADER] = longDate;\n    if (sessionToken) {\n        headers[TOKEN_HEADER] = sessionToken;\n    }\n    const requestToSign = { ...request, headers };\n    // calculate and add the signature to the request\n    const signature = getSignature(requestToSign, signingValues);\n    const credentialEntry = `Credential=${accessKeyId}/${credentialScope}`;\n    const signedHeadersEntry = `SignedHeaders=${getSignedHeaders(headers)}`;\n    const signatureEntry = `Signature=${signature}`;\n    headers[AUTH_HEADER] =\n        `${SHA256_ALGORITHM_IDENTIFIER} ${credentialEntry}, ${signedHeadersEntry}, ${signatureEntry}`;\n    return requestToSign;\n};\n\nexport { signRequest };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a `Date` that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n *\n * @returns `Date` representing the current time adjusted by the system clock offset.\n *\n * @internal\n */\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n\nexport { getSkewCorrectedDate };\n\n", "import { getSkewCorrectedDate } from './getSkewCorrectedDate.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// 5 mins in milliseconds. Ref: https://github.com/aws/aws-sdk-js-v3/blob/6c0f44fab30a1bb2134af47362a31332abc3666b/packages/middleware-signing/src/utils/isClockSkewed.ts#L10\nconst SKEW_WINDOW = 5 * 60 * 1000;\n/**\n * Checks if the provided date is within the skew window of 5 minutes.\n *\n * @param clockTimeInMilliseconds Time to check for skew in milliseconds.\n * @param clockOffsetInMilliseconds Offset to check clock against in milliseconds.\n *\n * @returns True if skewed. False otherwise.\n *\n * @internal\n */\nconst isClockSkewed = (clockTimeInMilliseconds, clockOffsetInMilliseconds) => Math.abs(getSkewCorrectedDate(clockOffsetInMilliseconds).getTime() -\n    clockTimeInMilliseconds) >= SKEW_WINDOW;\n\nexport { isClockSkewed };\n\n", "import { isClockSkewed } from './isClockSkewed.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns the difference between clock time and the current system time if clock is skewed.\n *\n * @param clockTimeInMilliseconds Clock time in milliseconds.\n * @param currentSystemClockOffset Current system clock offset in milliseconds.\n *\n * @internal\n */\nconst getUpdatedSystemClockOffset = (clockTimeInMilliseconds, currentSystemClockOffset) => {\n    if (isClockSkewed(clockTimeInMilliseconds, currentSystemClockOffset)) {\n        return clockTimeInMilliseconds - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n\nexport { getUpdatedSystemClockOffset };\n\n", "import { signRequest } from './signer/signatureV4/signRequest.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { getSkewCorrectedDate } from './utils/getSkewCorrectedDate.mjs';\nimport { getUpdatedSystemClockOffset } from './utils/getUpdatedSystemClockOffset.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Middleware that SigV4 signs request with AWS credentials, and correct system clock offset.\n * This middleware is expected to be placed after retry middleware.\n */\nconst signingMiddlewareFactory = ({ credentials, region, service, uriEscapePath = true, }) => {\n    let currentSystemClockOffset;\n    return (next) => async function signingMiddleware(request) {\n        currentSystemClockOffset = currentSystemClockOffset ?? 0;\n        const signRequestOptions = {\n            credentials: typeof credentials === 'function' ? await credentials() : credentials,\n            signingDate: getSkewCorrectedDate(currentSystemClockOffset),\n            signingRegion: region,\n            signingService: service,\n            uriEscapePath,\n        };\n        const signedRequest = await signRequest(request, signRequestOptions);\n        const response = await next(signedRequest);\n        // Update system clock offset if response contains date header, regardless of the status code.\n        // non-2xx response will still be returned from next handler instead of thrown, because it's\n        // only thrown by the retry middleware.\n        const dateString = getDateHeader(response);\n        if (dateString) {\n            currentSystemClockOffset = getUpdatedSystemClockOffset(Date.parse(dateString), currentSystemClockOffset);\n        }\n        return response;\n    };\n};\nconst getDateHeader = ({ headers } = {}) => headers?.date ?? headers?.Date ?? headers?.['x-amz-date'];\n\nexport { signingMiddlewareFactory };\n\n", "import { retryMiddlewareFactory } from '../middleware/retry/middleware.mjs';\nimport '../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../utils/retry/retry.mjs';\nimport { signingMiddlewareFactory } from '../middleware/signing/middleware.mjs';\nimport { userAgentMiddlewareFactory } from '../middleware/userAgent/middleware.mjs';\nimport { composeTransferHandler } from '../internal/composeTransferHandler.mjs';\nimport { fetchTransferHandler } from './fetch.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst authenticatedHandler = composeTransferHandler(fetchTransferHandler, [\n    userAgentMiddlewareFactory,\n    retryMiddlewareFactory,\n    signingMiddlewareFactory,\n]);\n\nexport { authenticatedHandler };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Wraps encodeURIComponent to encode additional characters to fully adhere to RFC 3986.\n * @see https://github.com/aws/aws-sdk-js-v3/blob/86b432c464150069678b25ff88d57c2ca26e75a2/packages/smithy-client/src/extended-encode-uri-component.ts#L7\n *\n * @param uri URI string to encode\n * @returns RFC 3986 encoded string\n *\n * @internal\n */\nconst extendedEncodeURIComponent = (uri) => {\n    // Match characters normally not encoded by `encodeURIComponent`\n    const extendedCharacters = /[!'()*]/g;\n    return encodeURIComponent(uri).replace(extendedCharacters, hexEncode);\n};\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nexport { extendedEncodeURIComponent };\n\n", "import { authenticatedHandler } from '../../clients/handlers/authenticated.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent.mjs';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport { defaultConfig, getSharedHeaders } from './base.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst updateEndpointSerializer = ({ ApplicationId = '', EndpointId = '', EndpointRequest }, endpoint) => {\n    const headers = getSharedHeaders();\n    const url = new AmplifyUrl(endpoint.url);\n    url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/endpoints/${extendedEncodeURIComponent(EndpointId)}`;\n    const body = JSON.stringify(EndpointRequest);\n    return { method: 'PUT', headers, url, body };\n};\nconst updateEndpointDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const { Message, RequestID } = await parseJsonBody(response);\n        return {\n            MessageBody: {\n                Message,\n                RequestID,\n            },\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nconst updateEndpoint = composeServiceApi(authenticatedHandler, updateEndpointSerializer, updateEndpointDeserializer, defaultConfig);\n\nexport { updateEndpoint };\n\n", "import { isBrowser } from '../isBrowser.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst stateChangeListeners = new Set();\nclass SessionListener {\n    constructor() {\n        this.listenerActive = false;\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\n        // Setup state listeners\n        if (isBrowser()) {\n            document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n            this.listenerActive = true;\n        }\n    }\n    addStateChangeListener(listener, notifyOnAdd = false) {\n        // No-op if document listener is not active\n        if (!this.listenerActive) {\n            return;\n        }\n        stateChangeListeners.add(listener);\n        // Notify new handlers of the current status on add\n        if (notifyOnAdd) {\n            listener(this.getSessionState());\n        }\n    }\n    removeStateChangeListener(handler) {\n        // No-op if document listener is not active\n        if (!this.listenerActive) {\n            return;\n        }\n        stateChangeListeners.delete(handler);\n    }\n    handleVisibilityChange() {\n        this.notifyHandlers();\n    }\n    notifyHandlers() {\n        const sessionState = this.getSessionState();\n        stateChangeListeners.forEach(listener => {\n            listener(sessionState);\n        });\n    }\n    getSessionState() {\n        if (isBrowser() && document.visibilityState !== 'hidden') {\n            return 'started';\n        }\n        // If, for any reason, document is undefined the session will never start\n        return 'ended';\n    }\n}\n\nexport { SessionListener };\n\n", "import { SessionListener } from './SessionListener.mjs';\nexport { SESSION_START_EVENT, SESSION_STOP_EVENT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst sessionListener = new SessionListener();\n\nexport { sessionListener };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Default buffer constants\nconst BUFFER_SIZE = 1000;\nconst FLUSH_SIZE = 100;\nconst FLUSH_INTERVAL = 5 * 1000; // 5s\nconst RESEND_LIMIT = 5;\n\nexport { BUFFER_SIZE, FLUSH_INTERVAL, FLUSH_SIZE, RESEND_LIMIT };\n\n", "import { authenticatedHandler } from '../../clients/handlers/authenticated.mjs';\nimport { composeServiceApi } from '../../clients/internal/composeServiceApi.mjs';\nimport { extendedEncodeURIComponent } from '../../clients/middleware/signing/utils/extendedEncodeURIComponent.mjs';\nimport { parseMetadata } from '../../clients/serde/responseInfo.mjs';\nimport { parseJsonError, parseJsonBody } from '../../clients/serde/json.mjs';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport { defaultConfig, getSharedHeaders } from './base.mjs';\nimport { assert, PinpointValidationErrorCode } from './errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst putEventsSerializer = ({ ApplicationId, EventsRequest }, endpoint) => {\n    assert(!!ApplicationId, PinpointValidationErrorCode.NoAppId);\n    const headers = getSharedHeaders();\n    const url = new AmplifyUrl(endpoint.url);\n    url.pathname = `v1/apps/${extendedEncodeURIComponent(ApplicationId)}/events`;\n    const body = JSON.stringify(EventsRequest ?? {});\n    return { method: 'POST', headers, url, body };\n};\nconst putEventsDeserializer = async (response) => {\n    if (response.statusCode >= 300) {\n        const error = await parseJsonError(response);\n        throw error;\n    }\n    else {\n        const { Results } = await parseJsonBody(response);\n        return {\n            EventsResponse: { Results },\n            $metadata: parseMetadata(response),\n        };\n    }\n};\n/**\n * @internal\n */\nconst putEvents = composeServiceApi(authenticatedHandler, putEventsSerializer, putEventsDeserializer, defaultConfig);\n\nexport { putEvents };\n\n", "import { ConsoleLogger } from '../../../Logger/ConsoleLogger.mjs';\nimport '../../../utils/getClientInfo/getClientInfo.mjs';\nimport '../../../utils/retry/retry.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport '../../../awsClients/pinpoint/base.mjs';\nimport { putEvents } from '../../../awsClients/pinpoint/putEvents.mjs';\nimport { isAppInForeground } from './isAppInForeground.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('PinpointEventBuffer');\nconst RETRYABLE_CODES = [429, 500];\nconst ACCEPTED_CODES = [202];\nclass PinpointEventBuffer {\n    constructor(config) {\n        this._interval = undefined;\n        this._pause = false;\n        this._flush = false;\n        this._buffer = [];\n        this._config = config;\n        this._sendBatch = this._sendBatch.bind(this);\n        this._startLoop();\n    }\n    push(event) {\n        if (this._buffer.length >= this._config.bufferSize) {\n            logger.debug('Exceeded Pinpoint event buffer limits, event dropped.', {\n                eventId: event.eventId,\n            });\n            return;\n        }\n        this._buffer.push({ [event.eventId]: event });\n    }\n    pause() {\n        this._pause = true;\n    }\n    resume() {\n        this._pause = false;\n    }\n    flush() {\n        this._flush = true;\n    }\n    identityHasChanged(identityId) {\n        return this._config.identityId !== identityId;\n    }\n    flushAll() {\n        this._putEvents(this._buffer.splice(0, this._buffer.length));\n    }\n    _startLoop() {\n        if (this._interval) {\n            clearInterval(this._interval);\n        }\n        const { flushInterval } = this._config;\n        this._interval = setInterval(this._sendBatch, flushInterval);\n    }\n    _sendBatch() {\n        const bufferLength = this._buffer.length;\n        if (this._flush && !bufferLength && this._interval) {\n            clearInterval(this._interval);\n        }\n        if (this._pause || !bufferLength || !isAppInForeground()) {\n            return;\n        }\n        const { flushSize } = this._config;\n        const batchSize = Math.min(flushSize, bufferLength);\n        const bufferSubset = this._buffer.splice(0, batchSize);\n        this._putEvents(bufferSubset);\n    }\n    async _putEvents(buffer) {\n        const eventMap = this._bufferToMap(buffer);\n        const batchEventParams = this._generateBatchEventParams(eventMap);\n        try {\n            const { credentials, region, userAgentValue } = this._config;\n            const data = await putEvents({\n                credentials,\n                region,\n                userAgentValue,\n            }, batchEventParams);\n            this._processPutEventsSuccessResponse(data, eventMap);\n        }\n        catch (err) {\n            this._handlePutEventsFailure(err, eventMap);\n        }\n    }\n    _generateBatchEventParams(eventMap) {\n        const batchItem = {};\n        Object.values(eventMap).forEach(item => {\n            const { event, timestamp, endpointId, eventId, session } = item;\n            const { name, attributes, metrics } = event;\n            batchItem[endpointId] = {\n                Endpoint: {\n                    ...batchItem[endpointId]?.Endpoint,\n                },\n                Events: {\n                    ...batchItem[endpointId]?.Events,\n                    [eventId]: {\n                        EventType: name,\n                        Timestamp: new Date(timestamp).toISOString(),\n                        Attributes: attributes,\n                        Metrics: metrics,\n                        Session: session,\n                    },\n                },\n            };\n        });\n        return {\n            ApplicationId: this._config.appId,\n            EventsRequest: {\n                BatchItem: batchItem,\n            },\n        };\n    }\n    _handlePutEventsFailure(err, eventMap) {\n        logger.debug('putEvents call to Pinpoint failed.', err);\n        const statusCode = err.$metadata && err.$metadata.httpStatusCode;\n        if (RETRYABLE_CODES.includes(statusCode)) {\n            const retryableEvents = Object.values(eventMap);\n            this._retry(retryableEvents);\n        }\n    }\n    _processPutEventsSuccessResponse(data, eventMap) {\n        const { Results = {} } = data.EventsResponse ?? {};\n        const retryableEvents = [];\n        Object.entries(Results).forEach(([_, endpointValues]) => {\n            const responses = endpointValues.EventsItemResponse ?? {};\n            Object.entries(responses).forEach(([eventId, eventValues]) => {\n                const eventObject = eventMap[eventId];\n                if (!eventObject) {\n                    return;\n                }\n                const { StatusCode, Message } = eventValues ?? {};\n                if (StatusCode && ACCEPTED_CODES.includes(StatusCode)) {\n                    return;\n                }\n                if (StatusCode && RETRYABLE_CODES.includes(StatusCode)) {\n                    retryableEvents.push(eventObject);\n                    return;\n                }\n                const { name } = eventObject.event;\n                logger.warn('Pinpoint event failed to send.', {\n                    eventId,\n                    name,\n                    message: Message,\n                });\n            });\n        });\n        if (retryableEvents.length) {\n            this._retry(retryableEvents);\n        }\n    }\n    _retry(retryableEvents) {\n        // retryable events that haven't reached the resendLimit\n        const eligibleEvents = [];\n        retryableEvents.forEach((bufferedEvent) => {\n            const { eventId } = bufferedEvent;\n            const { name } = bufferedEvent.event;\n            if (bufferedEvent.resendLimit-- > 0) {\n                logger.debug('Resending event.', {\n                    eventId,\n                    name,\n                    remainingAttempts: bufferedEvent.resendLimit,\n                });\n                eligibleEvents.push({ [eventId]: bufferedEvent });\n                return;\n            }\n            logger.debug('No retry attempts remaining for event.', {\n                eventId,\n                name,\n            });\n        });\n        // add the events to the front of the buffer\n        this._buffer.unshift(...eligibleEvents);\n    }\n    _bufferToMap(buffer) {\n        return buffer.reduce((acc, curVal) => {\n            const [[key, value]] = Object.entries(curVal);\n            acc[key] = value;\n            return acc;\n        }, {});\n    }\n}\n\nexport { PinpointEventBuffer };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar UpdateEndpointException;\n(function (UpdateEndpointException) {\n    UpdateEndpointException[\"BadRequestException\"] = \"BadRequestException\";\n    UpdateEndpointException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateEndpointException[\"InternalServerErrorException\"] = \"InternalServerErrorException\";\n    UpdateEndpointException[\"MethodNotAllowedException\"] = \"MethodNotAllowedException\";\n    UpdateEndpointException[\"NotFoundException\"] = \"NotFoundException\";\n    UpdateEndpointException[\"PayloadTooLargeException\"] = \"PayloadTooLargeException\";\n    UpdateEndpointException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(UpdateEndpointException || (UpdateEndpointException = {}));\n\nexport { UpdateEndpointException };\n\n", "import { createAssertionFunction } from '../errors/createAssertionFunction.mjs';\nimport '../types/errors.mjs';\nimport '../errors/errorHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar ServiceWorkerErrorCode;\n(function (ServiceWorkerErrorCode) {\n    ServiceWorkerErrorCode[\"UndefinedInstance\"] = \"UndefinedInstance\";\n    ServiceWorkerErrorCode[\"UndefinedRegistration\"] = \"UndefinedRegistration\";\n    ServiceWorkerErrorCode[\"Unavailable\"] = \"Unavailable\";\n})(ServiceWorkerErrorCode || (ServiceWorkerErrorCode = {}));\nconst serviceWorkerErrorMap = {\n    [ServiceWorkerErrorCode.UndefinedInstance]: {\n        message: 'Service Worker instance is undefined.',\n    },\n    [ServiceWorkerErrorCode.UndefinedRegistration]: {\n        message: 'Service Worker registration is undefined.',\n    },\n    [ServiceWorkerErrorCode.Unavailable]: {\n        message: 'Service Worker not available.',\n    },\n};\nconst assert = createAssertionFunction(serviceWorkerErrorMap);\n\nexport { ServiceWorkerErrorCode, assert };\n\n", "import { getCrypto } from './globalHelpers/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/*\n * Cryptographically secure pseudorandom number generator\n * As Math.random() is cryptographically not safe to use\n */\nfunction cryptoSecureRandomInt() {\n    const crypto = getCrypto();\n    const randomResult = crypto.getRandomValues(new Uint32Array(1))[0];\n    return randomResult;\n}\n\nexport { cryptoSecureRandomInt };\n\n", "import { cryptoSecureRandomInt } from './cryptoSecureRandomInt.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Hex encoding strategy.\n * Converts a word array to a hex string.\n * @param {WordArray} wordArray The word array.\n * @return {string} The hex string.\n * @static\n */\nfunction hexStringify(wordArray) {\n    // Shortcuts\n    const { words } = wordArray;\n    const { sigBytes } = wordArray;\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i++) {\n        const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        hexChars.push((bite >>> 4).toString(16));\n        hexChars.push((bite & 0x0f).toString(16));\n    }\n    return hexChars.join('');\n}\nclass WordArray {\n    constructor(words, sigBytes) {\n        this.words = [];\n        let Words = words;\n        Words = this.words = Words || [];\n        if (sigBytes !== undefined) {\n            this.sigBytes = sigBytes;\n        }\n        else {\n            this.sigBytes = Words.length * 4;\n        }\n    }\n    random(nBytes) {\n        const words = [];\n        for (let i = 0; i < nBytes; i += 4) {\n            words.push(cryptoSecureRandomInt());\n        }\n        return new WordArray(words, nBytes);\n    }\n    toString() {\n        return hexStringify(this);\n    }\n}\n\nexport { WordArray as default };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateRandomString = (length) => {\n    const STATE_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n        result += STATE_CHARSET.charAt(Math.floor(Math.random() * STATE_CHARSET.length));\n    }\n    return result;\n};\n\nexport { generateRandomString };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst isWebWorker = () => {\n    if (typeof self === 'undefined') {\n        return false;\n    }\n    const selfContext = self;\n    return (typeof selfContext.WorkerGlobalScope !== 'undefined' &&\n        self instanceof selfContext.WorkerGlobalScope);\n};\n\nexport { isWebWorker };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeDecode(hex) {\n    const matchArr = hex.match(/.{2}/g) || [];\n    return matchArr.map(char => String.fromCharCode(parseInt(char, 16))).join('');\n}\n\nexport { urlSafeDecode };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction urlSafeEncode(str) {\n    return str\n        .split('')\n        .map(char => char.charCodeAt(0).toString(16).padStart(2, '0'))\n        .join('');\n}\n\nexport { urlSafeEncode };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * returns in-flight promise if there is one\n *\n * @param asyncFunction - asyncFunction to be deduped.\n * @returns - the return type of the callback\n */\nconst deDupeAsyncFunction = (asyncFunction) => {\n    let inflightPromise;\n    return async (...args) => {\n        if (inflightPromise)\n            return inflightPromise;\n        inflightPromise = new Promise((resolve, reject) => {\n            asyncFunction(...args)\n                .then(result => {\n                resolve(result);\n            })\n                .catch(error => {\n                reject(error);\n            })\n                .finally(() => {\n                inflightPromise = undefined;\n            });\n        });\n        return inflightPromise;\n    };\n};\n\nexport { deDupeAsyncFunction };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Date & time utility functions to abstract the `aws-sdk` away from users.\n * (v2 => v3 modularization is a breaking change)\n *\n * @see https://github.com/aws/aws-sdk-js/blob/6edf586dcc1de7fe8fbfbbd9a0d2b1847921e6e1/lib/util.js#L262\n */\nconst FIVE_MINUTES_IN_MS = 1000 * 60 * 5;\n/**\n * This utility is intended to be deprecated and replaced by `signRequest` and `presignUrl` functions from\n * `clients/middleware/signing/signer/signatureV4`.\n *\n * TODO: refactor the logics here into `signRequest` and `presignUrl` functions and remove this class.\n *\n * @internal\n * @deprecated\n */\nconst DateUtils = {\n    /**\n     * Milliseconds to offset the date to compensate for clock skew between device & services\n     */\n    clockOffset: 0,\n    getDateWithClockOffset() {\n        if (DateUtils.clockOffset) {\n            return new Date(new Date().getTime() + DateUtils.clockOffset);\n        }\n        else {\n            return new Date();\n        }\n    },\n    /**\n     * @returns {number} Clock offset in milliseconds\n     */\n    getClockOffset() {\n        return DateUtils.clockOffset;\n    },\n    getHeaderStringFromDate(date = DateUtils.getDateWithClockOffset()) {\n        return date.toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    },\n    getDateFromHeaderString(header) {\n        const [, year, month, day, hour, minute, second] = header.match(/^(\\d{4})(\\d{2})(\\d{2})T(\\d{2})(\\d{2})(\\d{2}).+/);\n        return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), Number(hour), Number(minute), Number(second)));\n    },\n    isClockSkewed(serverDate) {\n        // API gateway permits client calls that are off by no more than ±5 minutes\n        return (Math.abs(serverDate.getTime() - DateUtils.getDateWithClockOffset().getTime()) >= FIVE_MINUTES_IN_MS);\n    },\n    isClockSkewError(error) {\n        if (!error.response || !error.response.headers) {\n            return false;\n        }\n        const { headers } = error.response;\n        return Boolean(['BadRequestException', 'InvalidSignatureException'].includes(headers['x-amzn-errortype']) &&\n            (headers.date || headers.Date));\n    },\n    /**\n     * @param {number} offset Clock offset in milliseconds\n     */\n    setClockOffset(offset) {\n        DateUtils.clockOffset = offset;\n    },\n};\n\nexport { DateUtils };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * All possible states a `BackgroundProcessManager` instance can be in.\n */\nvar BackgroundProcessManagerState;\n(function (BackgroundProcessManagerState) {\n    /**\n     * Accepting new jobs.\n     */\n    BackgroundProcessManagerState[\"Open\"] = \"Open\";\n    /**\n     * Not accepting new jobs. Waiting for submitted jobs to complete.\n     */\n    BackgroundProcessManagerState[\"Closing\"] = \"Closing\";\n    /**\n     * Not accepting new jobs. All submitted jobs are complete.\n     */\n    BackgroundProcessManagerState[\"Closed\"] = \"Closed\";\n})(BackgroundProcessManagerState || (BackgroundProcessManagerState = {}));\n\nexport { BackgroundProcessManagerState };\n\n", "import { from, Observable } from 'rxjs';\nimport '../utils/getClientInfo/getClientInfo.mjs';\nimport { isWebWorker } from '../utils/isWebWorker.mjs';\nimport '../utils/retry/retry.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass Reachability {\n    networkMonitor(_) {\n        const globalObj = isWebWorker()\n            ? self\n            : typeof window !== 'undefined' && window;\n        if (!globalObj) {\n            return from([{ online: true }]);\n        }\n        return new Observable(observer => {\n            observer.next({ online: globalObj.navigator.onLine });\n            const notifyOnline = () => {\n                observer.next({ online: true });\n            };\n            const notifyOffline = () => {\n                observer.next({ online: false });\n            };\n            globalObj.addEventListener('online', notifyOnline);\n            globalObj.addEventListener('offline', notifyOffline);\n            Reachability._observers.push(observer);\n            return () => {\n                globalObj.removeEventListener('online', notifyOnline);\n                globalObj.removeEventListener('offline', notifyOffline);\n                Reachability._observers = Reachability._observers.filter(_observer => _observer !== observer);\n            };\n        });\n    }\n    // expose observers to simulate offline mode for integration testing\n    static _observerOverride(status) {\n        for (const observer of this._observers) {\n            if (observer.closed) {\n                this._observers = this._observers.filter(_observer => _observer !== observer);\n                continue;\n            }\n            observer?.next && observer.next(status);\n        }\n    }\n}\nReachability._observers = [];\n\nexport { Reachability };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction bytesToString(input) {\n    return Array.from(input, byte => String.fromCodePoint(byte)).join('');\n}\n\nexport { bytesToString };\n\n", "import { getBtoa } from '../../globalHelpers/index.mjs';\nimport { bytesToString } from './bytesToString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst base64Encoder = {\n    convert(input, { urlSafe } = { urlSafe: false }) {\n        const inputStr = typeof input === 'string' ? input : bytesToString(input);\n        const encodedStr = getBtoa()(inputStr);\n        // see details about the char replacing at https://datatracker.ietf.org/doc/html/rfc4648#section-5\n        return urlSafe\n            ? encodedStr.replace(/\\+/g, '-').replace(/\\//g, '_')\n            : encodedStr;\n    },\n};\n\nexport { base64Encoder };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { unauthenticatedHandler, getRetryDecider, parseJsonError, jitteredBackoff, getDnsSuffix } from '@aws-amplify/core/internals/aws-client-utils';\nimport { getAmplifyUserAgent, AmplifyUrl } from '@aws-amplify/core/internals/utils';\nimport { composeTransferHandler } from '@aws-amplify/core/internals/aws-client-utils/composers';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-idp';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const customURL = authConfig?.userPoolEndpoint;\n    const defaultURL = new AmplifyUrl(`https://${SERVICE_NAME}.${region}.${getDnsSuffix(region)}`);\n    return {\n        url: customURL ? new AmplifyUrl(customURL) : defaultURL,\n    };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddleware = () => (next, context) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoUserPoolTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddleware]);\n/**\n * @internal\n */\nconst defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\n/**\n * @internal\n */\nconst getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityProviderService.${operation}`,\n});\n/**\n * @internal\n */\nconst buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n\nexport { buildHttpRpcRequest, cognitoUserPoolTransferHandler, defaultConfig, getSharedHeaders };\n\n", "import { AmplifyError } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass AuthError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n    }\n}\n\nexport { AuthError };\n\n", "import { AuthError } from '../AuthError.mjs';\nimport { AmplifyErrorCode } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertServiceError(error) {\n    if (!error ||\n        error.name === 'Error' ||\n        error instanceof TypeError) {\n        throw new AuthError({\n            name: AmplifyErrorCode.Unknown,\n            message: 'An unknown error has occurred.',\n            underlyingError: error,\n        });\n    }\n}\n\nexport { assertServiceError };\n\n", "import { composeServiceApi } from '@aws-amplify/core/internals/aws-client-utils/composers';\nimport { cognitoUserPoolTransferHandler, defaultConfig, buildHttpRpcRequest, getSharedHeaders } from './base.mjs';\nimport { parseJsonError, parseJsonBody } from '@aws-amplify/core/internals/aws-client-utils';\nimport { assertServiceError } from '../../../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../../../errors/AuthError.mjs';\n\nconst buildUserPoolSerializer = (operation) => (input, endpoint) => {\n    const headers = getSharedHeaders(operation);\n    const body = JSON.stringify(input);\n    return buildHttpRpcRequest(endpoint, headers, body);\n};\nconst buildUserPoolDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            const body = await parseJsonBody(response);\n            return body;\n        }\n    };\n};\nconst handleEmptyResponseDeserializer = () => {\n    return async (response) => {\n        if (response.statusCode >= 300) {\n            const error = await parseJsonError(response);\n            assertServiceError(error);\n            throw new AuthError({ name: error.name, message: error.message });\n        }\n        else {\n            return undefined;\n        }\n    };\n};\nconst initiateAuth = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('InitiateAuth'), buildUserPoolDeserializer(), defaultConfig);\nconst revokeToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RevokeToken'), buildUserPoolDeserializer(), defaultConfig);\nconst signUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SignUp'), buildUserPoolDeserializer(), defaultConfig);\nconst confirmSignUp = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmSignUp'), buildUserPoolDeserializer(), defaultConfig);\nconst forgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nconst confirmForgotPassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmForgotPassword'), buildUserPoolDeserializer(), defaultConfig);\nconst respondToAuthChallenge = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('RespondToAuthChallenge'), buildUserPoolDeserializer(), defaultConfig);\nconst resendConfirmationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ResendConfirmationCode'), buildUserPoolDeserializer(), defaultConfig);\nconst verifySoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifySoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nconst associateSoftwareToken = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('AssociateSoftwareToken'), buildUserPoolDeserializer(), defaultConfig);\nconst setUserMFAPreference = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('SetUserMFAPreference'), buildUserPoolDeserializer(), defaultConfig);\nconst getUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUser'), buildUserPoolDeserializer(), defaultConfig);\nconst changePassword = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ChangePassword'), buildUserPoolDeserializer(), defaultConfig);\nconst confirmDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ConfirmDevice'), buildUserPoolDeserializer(), defaultConfig);\nconst forgetDevice = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ForgetDevice'), handleEmptyResponseDeserializer(), defaultConfig);\nconst deleteUser = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUser'), handleEmptyResponseDeserializer(), defaultConfig);\nconst getUserAttributeVerificationCode = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GetUserAttributeVerificationCode'), buildUserPoolDeserializer(), defaultConfig);\nconst globalSignOut = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('GlobalSignOut'), buildUserPoolDeserializer(), defaultConfig);\nconst updateUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\nconst verifyUserAttribute = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('VerifyUserAttribute'), buildUserPoolDeserializer(), defaultConfig);\nconst updateDeviceStatus = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('UpdateDeviceStatus'), buildUserPoolDeserializer(), defaultConfig);\nconst listDevices = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('ListDevices'), buildUserPoolDeserializer(), defaultConfig);\nconst deleteUserAttributes = composeServiceApi(cognitoUserPoolTransferHandler, buildUserPoolSerializer('DeleteUserAttributes'), buildUserPoolDeserializer(), defaultConfig);\n\nexport { associateSoftwareToken, changePassword, confirmDevice, confirmForgotPassword, confirmSignUp, deleteUser, deleteUserAttributes, forgetDevice, forgotPassword, getUser, getUserAttributeVerificationCode, globalSignOut, initiateAuth, listDevices, resendConfirmationCode, respondToAuthChallenge, revokeToken, setUserMFAPreference, signUp, updateDeviceStatus, updateUserAttributes, verifySoftwareToken, verifyUserAttribute };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthValidationErrorCode;\n(function (AuthValidationErrorCode) {\n    AuthValidationErrorCode[\"EmptySignInUsername\"] = \"EmptySignInUsername\";\n    AuthValidationErrorCode[\"EmptySignInPassword\"] = \"EmptySignInPassword\";\n    AuthValidationErrorCode[\"CustomAuthSignInPassword\"] = \"CustomAuthSignInPassword\";\n    AuthValidationErrorCode[\"EmptySignUpUsername\"] = \"EmptySignUpUsername\";\n    AuthValidationErrorCode[\"EmptySignUpPassword\"] = \"EmptySignUpPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpUsername\"] = \"EmptyConfirmSignUpUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmSignUpCode\"] = \"EmptyConfirmSignUpCode\";\n    AuthValidationErrorCode[\"EmptyResendSignUpCodeUsername\"] = \"EmptyresendSignUpCodeUsername\";\n    AuthValidationErrorCode[\"EmptyChallengeResponse\"] = \"EmptyChallengeResponse\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordUsername\"] = \"EmptyConfirmResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordNewPassword\"] = \"EmptyConfirmResetPasswordNewPassword\";\n    AuthValidationErrorCode[\"EmptyConfirmResetPasswordConfirmationCode\"] = \"EmptyConfirmResetPasswordConfirmationCode\";\n    AuthValidationErrorCode[\"EmptyResetPasswordUsername\"] = \"EmptyResetPasswordUsername\";\n    AuthValidationErrorCode[\"EmptyVerifyTOTPSetupCode\"] = \"EmptyVerifyTOTPSetupCode\";\n    AuthValidationErrorCode[\"EmptyConfirmUserAttributeCode\"] = \"EmptyConfirmUserAttributeCode\";\n    AuthValidationErrorCode[\"IncorrectMFAMethod\"] = \"IncorrectMFAMethod\";\n    AuthValidationErrorCode[\"EmptyUpdatePassword\"] = \"EmptyUpdatePassword\";\n})(AuthValidationErrorCode || (AuthValidationErrorCode = {}));\n\nexport { AuthValidationErrorCode };\n\n", "import { AuthValidationErrorCode } from '../errors/types/validation.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst validationErrorMap = {\n    [AuthValidationErrorCode.EmptyChallengeResponse]: {\n        message: 'challengeResponse is required to confirmSignIn',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordUsername]: {\n        message: 'username is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpCode]: {\n        message: 'code is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmSignUpUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode]: {\n        message: 'confirmationCode is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword]: {\n        message: 'newPassword is required to confirmResetPassword',\n    },\n    [AuthValidationErrorCode.EmptyResendSignUpCodeUsername]: {\n        message: 'username is required to confirmSignUp',\n    },\n    [AuthValidationErrorCode.EmptyResetPasswordUsername]: {\n        message: 'username is required to resetPassword',\n    },\n    [AuthValidationErrorCode.EmptySignInPassword]: {\n        message: 'password is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignInUsername]: {\n        message: 'username is required to signIn',\n    },\n    [AuthValidationErrorCode.EmptySignUpPassword]: {\n        message: 'password is required to signUp',\n    },\n    [AuthValidationErrorCode.EmptySignUpUsername]: {\n        message: 'username is required to signUp',\n    },\n    [AuthValidationErrorCode.CustomAuthSignInPassword]: {\n        message: 'A password is not needed when signing in with CUSTOM_WITHOUT_SRP',\n        recoverySuggestion: 'Do not include a password in your signIn call.',\n    },\n    [AuthValidationErrorCode.IncorrectMFAMethod]: {\n        message: 'Incorrect MFA method was chosen. It should be either SMS or TOTP',\n        recoverySuggestion: 'Try to pass TOTP or SMS as the challengeResponse',\n    },\n    [AuthValidationErrorCode.EmptyVerifyTOTPSetupCode]: {\n        message: 'code is required to verifyTotpSetup',\n    },\n    [AuthValidationErrorCode.EmptyUpdatePassword]: {\n        message: 'oldPassword and newPassword are required to changePassword',\n    },\n    [AuthValidationErrorCode.EmptyConfirmUserAttributeCode]: {\n        message: 'confirmation code is required to confirmUserAttribute',\n    },\n};\n// TODO: delete this code when the Auth class is removed.\nvar AuthErrorStrings;\n(function (AuthErrorStrings) {\n    AuthErrorStrings[\"DEFAULT_MSG\"] = \"Authentication Error\";\n    AuthErrorStrings[\"EMPTY_EMAIL\"] = \"Email cannot be empty\";\n    AuthErrorStrings[\"EMPTY_PHONE\"] = \"Phone number cannot be empty\";\n    AuthErrorStrings[\"EMPTY_USERNAME\"] = \"Username cannot be empty\";\n    AuthErrorStrings[\"INVALID_USERNAME\"] = \"The username should either be a string or one of the sign in types\";\n    AuthErrorStrings[\"EMPTY_PASSWORD\"] = \"Password cannot be empty\";\n    AuthErrorStrings[\"EMPTY_CODE\"] = \"Confirmation code cannot be empty\";\n    AuthErrorStrings[\"SIGN_UP_ERROR\"] = \"Error creating account\";\n    AuthErrorStrings[\"NO_MFA\"] = \"No valid MFA method provided\";\n    AuthErrorStrings[\"INVALID_MFA\"] = \"Invalid MFA type\";\n    AuthErrorStrings[\"EMPTY_CHALLENGE\"] = \"Challenge response cannot be empty\";\n    AuthErrorStrings[\"NO_USER_SESSION\"] = \"Failed to get the session because the user is empty\";\n    AuthErrorStrings[\"NETWORK_ERROR\"] = \"Network Error\";\n    AuthErrorStrings[\"DEVICE_CONFIG\"] = \"Device tracking has not been configured in this User Pool\";\n    AuthErrorStrings[\"AUTOSIGNIN_ERROR\"] = \"Please use your credentials to sign in\";\n    AuthErrorStrings[\"OAUTH_ERROR\"] = \"Couldn't finish OAuth flow, check your User Pool HostedUI settings\";\n})(AuthErrorStrings || (AuthErrorStrings = {}));\nvar AuthErrorCodes;\n(function (AuthErrorCodes) {\n    AuthErrorCodes[\"SignInException\"] = \"SignInException\";\n    AuthErrorCodes[\"OAuthSignInError\"] = \"OAuthSignInException\";\n})(AuthErrorCodes || (AuthErrorCodes = {}));\n\nexport { AuthErrorCodes, AuthErrorStrings, validationErrorMap };\n\n", "import { validationErrorMap } from '../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction assertValidationError(assertion, name) {\n    const { message, recoverySuggestion } = validationErrorMap[name];\n    if (!assertion) {\n        throw new AuthError({ name, message, recoverySuggestion });\n    }\n}\n\nexport { assertValidationError };\n\n", "import { AuthError } from '../../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getRegion(userPoolId) {\n    const region = userPoolId?.split('_')[0];\n    if (!userPoolId ||\n        userPoolId.indexOf('_') < 0 ||\n        !region ||\n        typeof region !== 'string')\n        throw new AuthError({\n            name: 'InvalidUserPoolId',\n            message: 'Invalid user pool id provided.',\n        });\n    return region;\n}\nfunction getRegionFromIdentityPoolId(identityPoolId) {\n    if (!identityPoolId || !identityPoolId.includes(':')) {\n        throw new AuthError({\n            name: 'InvalidIdentityPoolIdException',\n            message: 'Invalid identity pool id provided.',\n            recoverySuggestion: 'Make sure a valid identityPoolId is given in the config.',\n        });\n    }\n    return identityPoolId.split(':')[0];\n}\n\nexport { getRegion, getRegionFromIdentityPoolId };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Transforms a user attributes object into an array of AttributeType objects.\n * @param attributes user attributes to be mapped to AttributeType objects.\n * @returns an array of AttributeType objects.\n */\nfunction toAttributeType(attributes) {\n    return Object.entries(attributes).map(([key, value]) => ({\n        Name: key,\n        Value: value,\n    }));\n}\n/**\n * Transforms an array of AttributeType objects into a user attributes object.\n *\n * @param attributes - an array of AttributeType objects.\n * @returns AuthUserAttributes object.\n */\nfunction toAuthUserAttribute(attributes) {\n    const userAttributes = {};\n    attributes?.forEach(attribute => {\n        if (attribute.Name)\n            userAttributes[attribute.Name] = attribute.Value;\n    });\n    return userAttributes;\n}\n\nexport { toAttributeType, toAuthUserAttribute };\n\n", "/* tslint:disable */\n// @ts-nocheck -> BigInteger is already a vended utility\n// A small implementation of BigInteger based on http://www-cs-students.stanford.edu/~tjw/jsbn/\n//\n// All public methods have been removed except the following:\n//   new BigInteger(a, b) (only radix 2, 4, 8, 16 and 32 supported)\n//   toString (only radix 2, 4, 8, 16 and 32 supported)\n//   negate\n//   abs\n//   compareTo\n//   bitLength\n//   mod\n//   equals\n//   add\n//   subtract\n//   multiply\n//   divide\n//   modPow\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n// (public) Constructor\nfunction BigInteger(a, b) {\n    if (a != null)\n        this.fromString(a, b);\n}\n// return new, unset BigInteger\nfunction nbi() {\n    return new BigInteger(null, null);\n}\n// Bits per digit\nlet dbits;\n// JavaScript engine analysis\nconst canary = 0xdeadbeefcafe;\nconst j_lm = (canary & 0xffffff) === 0xefcafe;\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i, x, w, j, c, n) {\n    while (--n >= 0) {\n        const v = x * this[i++] + w[j] + c;\n        c = Math.floor(v / 0x4000000);\n        w[j++] = v & 0x3ffffff;\n    }\n    return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i, x, w, j, c, n) {\n    const xl = x & 0x7fff, xh = x >> 15;\n    while (--n >= 0) {\n        let l = this[i] & 0x7fff;\n        const h = this[i++] >> 15;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n        c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n        w[j++] = l & 0x3fffffff;\n    }\n    return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i, x, w, j, c, n) {\n    const xl = x & 0x3fff, xh = x >> 14;\n    while (--n >= 0) {\n        let l = this[i] & 0x3fff;\n        const h = this[i++] >> 14;\n        const m = xh * l + h * xl;\n        l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n        c = (l >> 28) + (m >> 14) + xh * h;\n        w[j++] = l & 0xfffffff;\n    }\n    return c;\n}\nconst inBrowser = typeof navigator !== 'undefined';\nif (inBrowser && j_lm && navigator.appName === 'Microsoft Internet Explorer') {\n    BigInteger.prototype.am = am2;\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && navigator.appName !== 'Netscape') {\n    BigInteger.prototype.am = am1;\n    dbits = 26;\n}\nelse {\n    // Mozilla/Netscape seems to prefer am3\n    BigInteger.prototype.am = am3;\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = (1 << dbits) - 1;\nBigInteger.prototype.DV = 1 << dbits;\nconst BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nconst BI_RM = '0123456789abcdefghijklmnopqrstuvwxyz';\nconst BI_RC = new Array();\nlet rr, vv;\nrr = '0'.charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'a'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nrr = 'A'.charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv)\n    BI_RC[rr++] = vv;\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\nfunction intAt(s, i) {\n    var c = BI_RC[s.charCodeAt(i)];\n    return c == null ? -1 : c;\n}\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n    for (var i = this.t - 1; i >= 0; --i)\n        r[i] = this[i];\n    r.t = this.t;\n    r.s = this.s;\n}\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n    this.t = 1;\n    this.s = x < 0 ? -1 : 0;\n    if (x > 0)\n        this[0] = x;\n    else if (x < -1)\n        this[0] = x + this.DV;\n    else\n        this.t = 0;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    var r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// (protected) set from string and radix\nfunction bnpFromString(s, b) {\n    let k;\n    if (b === 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    this.t = 0;\n    this.s = 0;\n    let i = s.length, mi = false, sh = 0;\n    while (--i >= 0) {\n        const x = intAt(s, i);\n        if (x < 0) {\n            if (s.charAt(i) === '-')\n                mi = true;\n            continue;\n        }\n        mi = false;\n        if (sh === 0)\n            this[this.t++] = x;\n        else if (sh + k > this.DB) {\n            this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n            this[this.t++] = x >> (this.DB - sh);\n        }\n        else\n            this[this.t - 1] |= x << sh;\n        sh += k;\n        if (sh >= this.DB)\n            sh -= this.DB;\n    }\n    this.clamp();\n    if (mi)\n        BigInteger.ZERO.subTo(this, this);\n}\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n    var c = this.s & this.DM;\n    while (this.t > 0 && this[this.t - 1] == c)\n        --this.t;\n}\n// (public) return string representation in given radix\nfunction bnToString(b) {\n    if (this.s < 0)\n        return '-' + this.negate().toString(b);\n    var k;\n    if (b == 16)\n        k = 4;\n    else if (b === 8)\n        k = 3;\n    else if (b === 2)\n        k = 1;\n    else if (b === 32)\n        k = 5;\n    else if (b === 4)\n        k = 2;\n    else\n        throw new Error('Only radix 2, 4, 8, 16, 32 are supported');\n    let km = (1 << k) - 1, d, m = false, r = '', i = this.t;\n    let p = this.DB - ((i * this.DB) % k);\n    if (i-- > 0) {\n        if (p < this.DB && (d = this[i] >> p) > 0) {\n            m = true;\n            r = int2char(d);\n        }\n        while (i >= 0) {\n            if (p < k) {\n                d = (this[i] & ((1 << p) - 1)) << (k - p);\n                d |= this[--i] >> (p += this.DB - k);\n            }\n            else {\n                d = (this[i] >> (p -= k)) & km;\n                if (p <= 0) {\n                    p += this.DB;\n                    --i;\n                }\n            }\n            if (d > 0)\n                m = true;\n            if (m)\n                r += int2char(d);\n        }\n    }\n    return m ? r : '0';\n}\n// (public) -this\nfunction bnNegate() {\n    var r = nbi();\n    BigInteger.ZERO.subTo(this, r);\n    return r;\n}\n// (public) |this|\nfunction bnAbs() {\n    return this.s < 0 ? this.negate() : this;\n}\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n    var r = this.s - a.s;\n    if (r != 0)\n        return r;\n    var i = this.t;\n    r = i - a.t;\n    if (r != 0)\n        return this.s < 0 ? -r : r;\n    while (--i >= 0)\n        if ((r = this[i] - a[i]) != 0)\n            return r;\n    return 0;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    var r = 1, t;\n    if ((t = x >>> 16) !== 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) !== 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) !== 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) !== 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) !== 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n    if (this.t <= 0)\n        return 0;\n    return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n}\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n, r) {\n    let i;\n    for (i = this.t - 1; i >= 0; --i)\n        r[i + n] = this[i];\n    for (i = n - 1; i >= 0; --i)\n        r[i] = 0;\n    r.t = this.t + n;\n    r.s = this.s;\n}\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n, r) {\n    for (let i = n; i < this.t; ++i)\n        r[i - n] = this[i];\n    r.t = Math.max(this.t - n, 0);\n    r.s = this.s;\n}\n// (protected) r = this << n\nfunction bnpLShiftTo(n, r) {\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << cbs) - 1;\n    let ds = Math.floor(n / this.DB), c = (this.s << bs) & this.DM, i;\n    for (i = this.t - 1; i >= 0; --i) {\n        r[i + ds + 1] = (this[i] >> cbs) | c;\n        c = (this[i] & bm) << bs;\n    }\n    for (i = ds - 1; i >= 0; --i)\n        r[i] = 0;\n    r[ds] = c;\n    r.t = this.t + ds + 1;\n    r.s = this.s;\n    r.clamp();\n}\n// (protected) r = this >> n\nfunction bnpRShiftTo(n, r) {\n    r.s = this.s;\n    const ds = Math.floor(n / this.DB);\n    if (ds >= this.t) {\n        r.t = 0;\n        return;\n    }\n    const bs = n % this.DB;\n    const cbs = this.DB - bs;\n    const bm = (1 << bs) - 1;\n    r[0] = this[ds] >> bs;\n    for (let i = ds + 1; i < this.t; ++i) {\n        r[i - ds - 1] |= (this[i] & bm) << cbs;\n        r[i - ds] = this[i] >> bs;\n    }\n    if (bs > 0)\n        r[this.t - ds - 1] |= (this.s & bm) << cbs;\n    r.t = this.t - ds;\n    r.clamp();\n}\n// (protected) r = this - a\nfunction bnpSubTo(a, r) {\n    let i = 0, c = 0, m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] - a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c -= a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c -= a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c -= a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c < -1)\n        r[i++] = this.DV + c;\n    else if (c > 0)\n        r[i++] = c;\n    r.t = i;\n    r.clamp();\n}\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a, r) {\n    const x = this.abs(), y = a.abs();\n    let i = x.t;\n    r.t = i + y.t;\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < y.t; ++i)\n        r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n    r.s = 0;\n    r.clamp();\n    if (this.s !== a.s)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n    var x = this.abs();\n    var i = (r.t = 2 * x.t);\n    while (--i >= 0)\n        r[i] = 0;\n    for (i = 0; i < x.t - 1; ++i) {\n        var c = x.am(i, x[i], r, 2 * i, 0, 1);\n        if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >=\n            x.DV) {\n            r[i + x.t] -= x.DV;\n            r[i + x.t + 1] = 1;\n        }\n    }\n    if (r.t > 0)\n        r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n    r.s = 0;\n    r.clamp();\n}\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m, q, r) {\n    var pm = m.abs();\n    if (pm.t <= 0)\n        return;\n    var pt = this.abs();\n    if (pt.t < pm.t) {\n        if (q != null)\n            q.fromInt(0);\n        if (r != null)\n            this.copyTo(r);\n        return;\n    }\n    if (r === null)\n        r = nbi();\n    var y = nbi(), ts = this.s, ms = m.s;\n    var nsh = this.DB - nbits(pm[pm.t - 1]);\n    // normalize modulus\n    if (nsh > 0) {\n        pm.lShiftTo(nsh, y);\n        pt.lShiftTo(nsh, r);\n    }\n    else {\n        pm.copyTo(y);\n        pt.copyTo(r);\n    }\n    const ys = y.t;\n    const y0 = y[ys - 1];\n    if (y0 === 0)\n        return;\n    const yt = y0 * (1 << this.F1) + (ys > 1 ? y[ys - 2] >> this.F2 : 0);\n    const d1 = this.FV / yt, d2 = (1 << this.F1) / yt, e = 1 << this.F2;\n    let i = r.t, j = i - ys, t = q === null ? nbi() : q;\n    y.dlShiftTo(j, t);\n    if (r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t, r);\n    }\n    BigInteger.ONE.dlShiftTo(ys, t);\n    t.subTo(y, y);\n    // \"negative\" y so we can replace sub with am later\n    while (y.t < ys)\n        y[y.t++] = 0;\n    while (--j >= 0) {\n        // Estimate quotient digit\n        var qd = r[--i] === y0 ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n        if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) {\n            // Try it out\n            y.dlShiftTo(j, t);\n            r.subTo(t, r);\n            while (r[i] < --qd)\n                r.subTo(t, r);\n        }\n    }\n    if (q !== null) {\n        r.drShiftTo(ys, q);\n        if (ts !== ms)\n            BigInteger.ZERO.subTo(q, q);\n    }\n    r.t = ys;\n    r.clamp();\n    if (nsh > 0)\n        r.rShiftTo(nsh, r);\n    // Denormalize remainder\n    if (ts < 0)\n        BigInteger.ZERO.subTo(r, r);\n}\n// (public) this mod a\nfunction bnMod(a) {\n    var r = nbi();\n    this.abs().divRemTo(a, null, r);\n    if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        a.subTo(r, r);\n    return r;\n}\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n    if (this.t < 1)\n        return 0;\n    var x = this[0];\n    if ((x & 1) === 0)\n        return 0;\n    var y = x & 3;\n    // y == 1/x mod 2^2\n    y = (y * (2 - (x & 0xf) * y)) & 0xf;\n    // y == 1/x mod 2^4\n    y = (y * (2 - (x & 0xff) * y)) & 0xff;\n    // y == 1/x mod 2^8\n    y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff;\n    // y == 1/x mod 2^16\n    // last step - calculate inverse mod DV directly;\n    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n    y = (y * (2 - ((x * y) % this.DV))) % this.DV;\n    // y == 1/x mod 2^dbits\n    // we really want the negative inverse, and -DV < y < DV\n    return y > 0 ? this.DV - y : -y;\n}\nfunction bnEquals(a) {\n    return this.compareTo(a) === 0;\n}\n// (protected) r = this + a\nfunction bnpAddTo(a, r) {\n    let i = 0, c = 0, m = Math.min(a.t, this.t);\n    while (i < m) {\n        c += this[i] + a[i];\n        r[i++] = c & this.DM;\n        c >>= this.DB;\n    }\n    if (a.t < this.t) {\n        c += a.s;\n        while (i < this.t) {\n            c += this[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += this.s;\n    }\n    else {\n        c += this.s;\n        while (i < a.t) {\n            c += a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        c += a.s;\n    }\n    r.s = c < 0 ? -1 : 0;\n    if (c > 0)\n        r[i++] = c;\n    else if (c < -1)\n        r[i++] = this.DV + c;\n    r.t = i;\n    r.clamp();\n}\n// (public) this + a\nfunction bnAdd(a) {\n    var r = nbi();\n    this.addTo(a, r);\n    return r;\n}\n// (public) this - a\nfunction bnSubtract(a) {\n    var r = nbi();\n    this.subTo(a, r);\n    return r;\n}\n// (public) this * a\nfunction bnMultiply(a) {\n    var r = nbi();\n    this.multiplyTo(a, r);\n    return r;\n}\n// (public) this / a\nfunction bnDivide(a) {\n    var r = nbi();\n    this.divRemTo(a, r, null);\n    return r;\n}\n// Montgomery reduction\nfunction Montgomery(m) {\n    this.m = m;\n    this.mp = m.invDigit();\n    this.mpl = this.mp & 0x7fff;\n    this.mph = this.mp >> 15;\n    this.um = (1 << (m.DB - 15)) - 1;\n    this.mt2 = 2 * m.t;\n}\n// xR mod m\nfunction montConvert(x) {\n    var r = nbi();\n    x.abs().dlShiftTo(this.m.t, r);\n    r.divRemTo(this.m, null, r);\n    if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0)\n        this.m.subTo(r, r);\n    return r;\n}\n// x/R mod m\nfunction montRevert(x) {\n    var r = nbi();\n    x.copyTo(r);\n    this.reduce(r);\n    return r;\n}\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n    while (x.t <= this.mt2)\n        // pad x so am has enough room later\n        x[x.t++] = 0;\n    for (var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i] & 0x7fff;\n        var u0 = (j * this.mpl +\n            (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) &\n            x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i + this.m.t;\n        x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n        // propagate carry\n        while (x[j] >= x.DV) {\n            x[j] -= x.DV;\n            x[++j]++;\n        }\n    }\n    x.clamp();\n    x.drShiftTo(this.m.t, x);\n    if (x.compareTo(this.m) >= 0)\n        x.subTo(this.m, x);\n}\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x, r) {\n    x.squareTo(r);\n    this.reduce(r);\n}\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x, y, r) {\n    x.multiplyTo(y, r);\n    this.reduce(r);\n}\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n// (public) this^e % m (HAC 14.85)\nfunction bnModPow(e, m, callback) {\n    let i = e.bitLength(), k, r = nbv(1), z = new Montgomery(m);\n    if (i <= 0)\n        return r;\n    else if (i < 18)\n        k = 1;\n    else if (i < 48)\n        k = 3;\n    else if (i < 144)\n        k = 4;\n    else if (i < 768)\n        k = 5;\n    else\n        k = 6;\n    // precomputation\n    let g = new Array(), n = 3, k1 = k - 1, km = (1 << k) - 1;\n    g[1] = z.convert(this);\n    if (k > 1) {\n        const g2 = nbi();\n        z.sqrTo(g[1], g2);\n        while (n <= km) {\n            g[n] = nbi();\n            z.mulTo(g2, g[n - 2], g[n]);\n            n += 2;\n        }\n    }\n    let j = e.t - 1, w, is1 = true, r2 = nbi(), t;\n    i = nbits(e[j]) - 1;\n    while (j >= 0) {\n        if (i >= k1)\n            w = (e[j] >> (i - k1)) & km;\n        else {\n            w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n            if (j > 0)\n                w |= e[j - 1] >> (this.DB + i - k1);\n        }\n        n = k;\n        while ((w & 1) === 0) {\n            w >>= 1;\n            --n;\n        }\n        if ((i -= n) < 0) {\n            i += this.DB;\n            --j;\n        }\n        if (is1) {\n            // ret == 1, don't bother squaring or multiplying it\n            g[w].copyTo(r);\n            is1 = false;\n        }\n        else {\n            while (n > 1) {\n                z.sqrTo(r, r2);\n                z.sqrTo(r2, r);\n                n -= 2;\n            }\n            if (n > 0)\n                z.sqrTo(r, r2);\n            else {\n                t = r;\n                r = r2;\n                r2 = t;\n            }\n            z.mulTo(r2, g[w], r);\n        }\n        while (j >= 0 && (e[j] & (1 << i)) === 0) {\n            z.sqrTo(r, r2);\n            t = r;\n            r = r2;\n            r2 = t;\n            if (--i < 0) {\n                i = this.DB - 1;\n                --j;\n            }\n        }\n    }\n    var result = z.revert(r);\n    callback(null, result);\n    return result;\n}\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.addTo = bnpAddTo;\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.modPow = bnModPow;\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\nexport { BigInteger as default };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst textEncoder = {\n    convert(input) {\n        return new TextEncoder().encode(input);\n    },\n};\n\nexport { textEncoder };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateS = async ({ a, g, k, x, B, N, U, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(x, N, (outerErr, outerResult) => {\n            if (outerErr) {\n                reject(outerErr);\n                return;\n            }\n            B.subtract(k.multiply(outerResult)).modPow(a.add(U.multiply(x)), N, (innerErr, innerResult) => {\n                if (innerErr) {\n                    reject(innerErr);\n                    return;\n                }\n                resolve(innerResult.mod(N));\n            });\n        });\n    });\n};\n\nexport { calculateS };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst INIT_N = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD1' +\n    '29024E088A67CC74020BBEA63B139B22514A08798E3404DD' +\n    'EF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245' +\n    'E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7ED' +\n    'EE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3D' +\n    'C2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F' +\n    '83655D23DCA3AD961C62F356208552BB9ED529077096966D' +\n    '670C354E4ABC9804F1746C08CA18217C32905E462E36CE3B' +\n    'E39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9' +\n    'DE2BCBF6955817183995497CEA956AE515D2261898FA0510' +\n    '15728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64' +\n    'ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7' +\n    'ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6B' +\n    'F12FFA06D98A0864D87602733EC86A64521F2B18177B200C' +\n    'BBE117577A615D6C770988C0BAD946E208E24FA074E5AB31' +\n    '43DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF';\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n\nexport { HEX_TO_SHORT, INIT_N, SHORT_TO_HEX };\n\n", "import { HEX_TO_SHORT } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nconst getBytesFromHex = (encoded) => {\n    if (encoded.length % 2 !== 0) {\n        throw new Error('Hex encoded strings must have an even number length');\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n};\n\nexport { getBytesFromHex };\n\n", "import { SHORT_TO_HEX } from './constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nconst getHexFromBytes = (bytes) => {\n    let out = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n};\n\nexport { getHexFromBytes };\n\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate a hash from a `SourceData`\n * @param {SourceData} data Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nconst getHashFromData = (data) => {\n    const sha256 = new Sha256();\n    sha256.update(data);\n    const hashedData = sha256.digestSync();\n    const hashHexFromUint8 = getHexFromBytes(hashedData);\n    return new Array(64 - hashHexFromUint8.length).join('0') + hashHexFromUint8;\n};\n\nexport { getHashFromData };\n\n", "import { getBytesFromHex } from './getBytesFromHex.mjs';\nimport { getHashFromData } from './getHashFromData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Calculate a hash from a hex string\n * @param {string} hexStr Value to hash.\n * @returns {string} Hex-encoded hash.\n * @private\n */\nconst getHashFromHex = (hexStr) => getHashFromData(getBytesFromHex(hexStr));\n\nexport { getHashFromHex };\n\n", "import BigInteger from './BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Tests if a hex string has it most significant bit set (case-insensitive regex)\n */\nconst HEX_MSB_REGEX = /^[89a-f]/i;\n/**\n * Returns an unambiguous, even-length hex string of the two's complement encoding of an integer.\n *\n * It is compatible with the hex encoding of Java's BigInteger's toByteArray(), wich returns a\n * byte array containing the two's-complement representation of a BigInteger. The array contains\n * the minimum number of bytes required to represent the BigInteger, including at least one sign bit.\n *\n * Examples showing how ambiguity is avoided by left padding with:\n * \t\"00\" (for positive values where the most-significant-bit is set)\n *  \"FF\" (for negative values where the most-significant-bit is set)\n *\n * padHex(bigInteger.fromInt(-236))  === \"FF14\"\n * padHex(bigInteger.fromInt(20))    === \"14\"\n *\n * padHex(bigInteger.fromInt(-200))  === \"FF38\"\n * padHex(bigInteger.fromInt(56))    === \"38\"\n *\n * padHex(bigInteger.fromInt(-20))   === \"EC\"\n * padHex(bigInteger.fromInt(236))   === \"00EC\"\n *\n * padHex(bigInteger.fromInt(-56))   === \"C8\"\n * padHex(bigInteger.fromInt(200))   === \"00C8\"\n *\n * @param {AuthBigInteger} bigInt Number to encode.\n * @returns {String} even-length hex string of the two's complement encoding.\n */\nconst getPaddedHex = (bigInt) => {\n    if (!(bigInt instanceof BigInteger)) {\n        throw new Error('Not a BigInteger');\n    }\n    const isNegative = bigInt.compareTo(BigInteger.ZERO) < 0;\n    /* Get a hex string for abs(bigInt) */\n    let hexStr = bigInt.abs().toString(16);\n    /* Pad hex to even length if needed */\n    hexStr = hexStr.length % 2 !== 0 ? `0${hexStr}` : hexStr;\n    /* Prepend \"00\" if the most significant bit is set */\n    hexStr = HEX_MSB_REGEX.test(hexStr) ? `00${hexStr}` : hexStr;\n    if (isNegative) {\n        /* Flip the bits of the representation */\n        const invertedNibbles = hexStr\n            .split('')\n            .map((x) => {\n            const invertedNibble = ~parseInt(x, 16) & 0xf;\n            return '0123456789ABCDEF'.charAt(invertedNibble);\n        })\n            .join('');\n        /* After flipping the bits, add one to get the 2's complement representation */\n        const flippedBitsBI = new BigInteger(invertedNibbles, 16).add(BigInteger.ONE);\n        hexStr = flippedBitsBI.toString(16);\n        /*\n        For hex strings starting with 'FF8', 'FF' can be dropped, e.g. 0xFFFF80=0xFF80=0x80=-128\n\n        Any sequence of '1' bits on the left can always be substituted with a single '1' bit\n        without changing the represented value.\n\n        This only happens in the case when the input is 80...00\n        */\n        if (hexStr.toUpperCase().startsWith('FF8')) {\n            hexStr = hexStr.substring(2);\n        }\n    }\n    return hexStr;\n};\n\nexport { getPaddedHex };\n\n", "import BigInteger from '../BigInteger/BigInteger.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateU = ({ A, B, }) => {\n    const U = new BigInteger(getHashFromHex(getPaddedHex(A) + getPaddedHex(B)), 16);\n    if (U.equals(BigInteger.ZERO)) {\n        throw new Error('U cannot be zero.');\n    }\n    return U;\n};\n\nexport { calculateU };\n\n", "import { Sha256 } from '@aws-crypto/sha256-js';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Standard HKDF algorithm.\n *\n * @param {Uint8Array} ikm Input key material.\n * @param {Uint8Array} salt Salt value.\n * @param {Uint8Array} info Context and application specific info.\n *\n * @returns {Uint8Array} Strong key material.\n *\n * @internal\n */\nconst getHkdfKey = (ikm, salt, info) => {\n    const awsCryptoHash = new Sha256(salt);\n    awsCryptoHash.update(ikm);\n    const resultFromAWSCryptoPrk = awsCryptoHash.digestSync();\n    const awsCryptoHashHmac = new Sha256(resultFromAWSCryptoPrk);\n    awsCryptoHashHmac.update(info);\n    const resultFromAWSCryptoHmac = awsCryptoHashHmac.digestSync();\n    const hashHexFromAWSCrypto = resultFromAWSCryptoHmac;\n    return hashHexFromAWSCrypto.slice(0, 16);\n};\n\nexport { getHkdfKey };\n\n", "import { getBytesFromHex } from './getBytesFromHex.mjs';\nimport { WordArray } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a Uint8Array with a sequence of random nBytes\n *\n * @param {number} nBytes\n * @returns {Uint8Array} fixed-length sequence of random bytes\n */\nconst getRandomBytes = (nBytes) => {\n    const str = new WordArray().random(nBytes).toString();\n    return getBytesFromHex(str);\n};\n\nexport { getRandomBytes };\n\n", "import { base64Encoder } from '@aws-amplify/core/internals/utils';\nimport { getRandomBytes } from './getRandomBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Helper function to generate a random string\n * @returns {string} a random value.\n *\n * @internal\n */\nconst getRandomString = () => base64Encoder.convert(getRandomBytes(40));\n\nexport { getRandomString };\n\n", "import { AuthError } from '../../../../../errors/AuthError.mjs';\nimport { textEncoder } from '../../textEncoder/index.mjs';\nimport BigInteger from '../BigInteger/BigInteger.mjs';\nimport { calculateS } from '../calculate/calculateS.mjs';\nimport { calculateU } from '../calculate/calculateU.mjs';\nimport { getBytesFromHex } from '../getBytesFromHex.mjs';\nimport { getHashFromData } from '../getHashFromData.mjs';\nimport { getHashFromHex } from '../getHashFromHex.mjs';\nimport { getHexFromBytes } from '../getHexFromBytes.mjs';\nimport { getHkdfKey } from '../getHkdfKey.mjs';\nimport { getPaddedHex } from '../getPaddedHex.mjs';\nimport { getRandomBytes } from '../getRandomBytes.mjs';\nimport { getRandomString } from '../getRandomString.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @class */\nclass AuthenticationHelper {\n    constructor({ userPoolName, a, g, A, N, }) {\n        this.encoder = textEncoder;\n        this.userPoolName = userPoolName;\n        this.a = a;\n        this.g = g;\n        this.A = A;\n        this.N = N;\n        this.k = new BigInteger(getHashFromHex(`${getPaddedHex(N)}${getPaddedHex(g)}`), 16);\n    }\n    /**\n     * @returns {string} Generated random value included in password hash.\n     */\n    getRandomPassword() {\n        if (!this.randomPassword) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerRandomPassword',\n                message: 'random password is empty',\n            });\n        }\n        return this.randomPassword;\n    }\n    /**\n     * @returns {string} Generated random value included in devices hash.\n     */\n    getSaltToHashDevices() {\n        if (!this.saltToHashDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegersaltToHashDevices',\n                message: 'saltToHashDevices is empty',\n            });\n        }\n        return this.saltToHashDevices;\n    }\n    /**\n     * @returns {string} Value used to verify devices.\n     */\n    getVerifierDevices() {\n        if (!this.verifierDevices) {\n            throw new AuthError({\n                name: 'EmptyBigIntegerVerifierDevices',\n                message: 'verifyDevices is empty',\n            });\n        }\n        return this.verifierDevices;\n    }\n    /**\n     * Generate salts and compute verifier.\n     *\n     * @param {string} deviceGroupKey Devices to generate verifier for.\n     * @param {string} username User to generate verifier for.\n     *\n     * @returns {Promise<void>}\n     */\n    async generateHashDevice(deviceGroupKey, username) {\n        this.randomPassword = getRandomString();\n        const combinedString = `${deviceGroupKey}${username}:${this.randomPassword}`;\n        const hashedString = getHashFromData(combinedString);\n        const hexRandom = getHexFromBytes(getRandomBytes(16));\n        // The random hex will be unambiguously represented as a postive integer\n        this.saltToHashDevices = getPaddedHex(new BigInteger(hexRandom, 16));\n        return new Promise((resolve, reject) => {\n            this.g.modPow(new BigInteger(getHashFromHex(this.saltToHashDevices + hashedString), 16), this.N, (err, result) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                this.verifierDevices = getPaddedHex(result);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Calculates the final HKDF key based on computed S value, computed U value and the key\n     *\n     * @param {String} username Username.\n     * @param {String} password Password.\n     * @param {AuthBigInteger} B Server B value.\n     * @param {AuthBigInteger} salt Generated salt.\n     */\n    async getPasswordAuthenticationKey({ username, password, serverBValue, salt, }) {\n        if (serverBValue.mod(this.N).equals(BigInteger.ZERO)) {\n            throw new Error('B cannot be zero.');\n        }\n        const U = calculateU({\n            A: this.A,\n            B: serverBValue,\n        });\n        const usernamePassword = `${this.userPoolName}${username}:${password}`;\n        const usernamePasswordHash = getHashFromData(usernamePassword);\n        const x = new BigInteger(getHashFromHex(getPaddedHex(salt) + usernamePasswordHash), 16);\n        const S = await calculateS({\n            a: this.a,\n            g: this.g,\n            k: this.k,\n            x,\n            B: serverBValue,\n            N: this.N,\n            U,\n        });\n        const context = this.encoder.convert('Caldera Derived Key');\n        const spacer = this.encoder.convert(String.fromCharCode(1));\n        const info = new Uint8Array(context.byteLength + spacer.byteLength);\n        info.set(context, 0);\n        info.set(spacer, context.byteLength);\n        const hkdfKey = getHkdfKey(getBytesFromHex(getPaddedHex(S)), getBytesFromHex(getPaddedHex(U)), info);\n        return hkdfKey;\n    }\n}\n\nexport { AuthenticationHelper as default };\n\n", "import BigInteger from '../BigInteger/BigInteger.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * @internal\n */\nconst calculateA = async ({ a, g, N, }) => {\n    return new Promise((resolve, reject) => {\n        g.modPow(a, N, (err, A) => {\n            if (err) {\n                reject(err);\n                return;\n            }\n            if (A.mod(N).equals(BigInteger.ZERO)) {\n                reject(new Error('Illegal parameter. A mod N cannot be 0.'));\n                return;\n            }\n            resolve(A);\n        });\n    });\n};\n\nexport { calculateA };\n\n", "import AuthenticationHelper from './AuthenticationHelper/AuthenticationHelper.mjs';\nimport BigInteger from './BigInteger/BigInteger.mjs';\nimport { calculateA } from './calculate/calculateA.mjs';\nimport { INIT_N } from './constants.mjs';\nimport '@aws-crypto/sha256-js';\nimport { getHexFromBytes } from './getHexFromBytes.mjs';\nimport { getRandomBytes } from './getRandomBytes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Returns a new {@link AuthenticationHelper} instance with randomly generated BigInteger seed\n *\n * @param userPoolName Cognito user pool name.\n * @returns An {@link AuthenticationHelper} instance.\n *\n * @internal\n */\nconst getAuthenticationHelper = async (userPoolName) => {\n    const N = new BigInteger(INIT_N, 16);\n    const g = new BigInteger('2', 16);\n    const a = generateRandomBigInteger();\n    const A = await calculateA({ a, g, N });\n    return new AuthenticationHelper({ userPoolName, a, g, A, N });\n};\n/**\n * Generates a random BigInteger.\n *\n * @returns {BigInteger} a random value.\n */\nconst generateRandomBigInteger = () => {\n    // This will be interpreted as a postive 128-bit integer\n    const hexRandom = getHexFromBytes(getRandomBytes(128));\n    // There is no need to do randomBigInt.mod(this.N - 1) as N (3072-bit) is > 128 bytes (1024-bit)\n    return new BigInteger(hexRandom, 16);\n};\n\nexport { getAuthenticationHelper };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MONTH_NAMES = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n];\nconst WEEK_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst getNowString = () => {\n    const now = new Date();\n    const weekDay = WEEK_NAMES[now.getUTCDay()];\n    const month = MONTH_NAMES[now.getUTCMonth()];\n    const day = now.getUTCDate();\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n        hours = `0${hours}`;\n    }\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n        minutes = `0${minutes}`;\n    }\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n        seconds = `0${seconds}`;\n    }\n    const year = now.getUTCFullYear();\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n    return dateNow;\n};\n\nexport { getNowString };\n\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { base64Encoder, base64Decoder } from '@aws-amplify/core/internals/utils';\nimport { textEncoder } from '../textEncoder/index.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getSignatureString = ({ userPoolName, username, challengeParameters, dateNow, hkdf, }) => {\n    const bufUPIDaToB = textEncoder.convert(userPoolName);\n    const bufUNaToB = textEncoder.convert(username);\n    const bufSBaToB = urlB64ToUint8Array(challengeParameters.SECRET_BLOCK);\n    const bufDNaToB = textEncoder.convert(dateNow);\n    const bufConcat = new Uint8Array(bufUPIDaToB.byteLength +\n        bufUNaToB.byteLength +\n        bufSBaToB.byteLength +\n        bufDNaToB.byteLength);\n    bufConcat.set(bufUPIDaToB, 0);\n    bufConcat.set(bufUNaToB, bufUPIDaToB.byteLength);\n    bufConcat.set(bufSBaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength);\n    bufConcat.set(bufDNaToB, bufUPIDaToB.byteLength + bufUNaToB.byteLength + bufSBaToB.byteLength);\n    const awsCryptoHash = new Sha256(hkdf);\n    awsCryptoHash.update(bufConcat);\n    const resultFromAWSCrypto = awsCryptoHash.digestSync();\n    const signatureString = base64Encoder.convert(resultFromAWSCrypto);\n    return signatureString;\n};\nconst urlB64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/');\n    const rawData = base64Decoder.convert(base64);\n    const outputArray = new Uint8Array(rawData.length);\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n};\n\nexport { getSignatureString };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AssociateSoftwareTokenException;\n(function (AssociateSoftwareTokenException) {\n    AssociateSoftwareTokenException[\"ConcurrentModificationException\"] = \"ConcurrentModificationException\";\n    AssociateSoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    AssociateSoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    AssociateSoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    AssociateSoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    AssociateSoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    AssociateSoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n})(AssociateSoftwareTokenException || (AssociateSoftwareTokenException = {}));\nvar ChangePasswordException;\n(function (ChangePasswordException) {\n    ChangePasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ChangePasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ChangePasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ChangePasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ChangePasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ChangePasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ChangePasswordException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ChangePasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ChangePasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ChangePasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ChangePasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ChangePasswordException || (ChangePasswordException = {}));\nvar ConfirmDeviceException;\n(function (ConfirmDeviceException) {\n    ConfirmDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmDeviceException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmDeviceException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ConfirmDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ConfirmDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmDeviceException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n    ConfirmDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmDeviceException || (ConfirmDeviceException = {}));\nvar ConfirmForgotPasswordException;\n(function (ConfirmForgotPasswordException) {\n    ConfirmForgotPasswordException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmForgotPasswordException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmForgotPasswordException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    ConfirmForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmForgotPasswordException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmForgotPasswordException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ConfirmForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmForgotPasswordException || (ConfirmForgotPasswordException = {}));\nvar ConfirmSignUpException;\n(function (ConfirmSignUpException) {\n    ConfirmSignUpException[\"AliasExistsException\"] = \"AliasExistsException\";\n    ConfirmSignUpException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    ConfirmSignUpException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    ConfirmSignUpException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ConfirmSignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ConfirmSignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ConfirmSignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ConfirmSignUpException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ConfirmSignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ConfirmSignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ConfirmSignUpException[\"TooManyFailedAttemptsException\"] = \"TooManyFailedAttemptsException\";\n    ConfirmSignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ConfirmSignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ConfirmSignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ConfirmSignUpException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ConfirmSignUpException || (ConfirmSignUpException = {}));\nvar DeleteUserAttributesException;\n(function (DeleteUserAttributesException) {\n    DeleteUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserAttributesException || (DeleteUserAttributesException = {}));\nvar DeleteUserException;\n(function (DeleteUserException) {\n    DeleteUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    DeleteUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    DeleteUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    DeleteUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    DeleteUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    DeleteUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    DeleteUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    DeleteUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    DeleteUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(DeleteUserException || (DeleteUserException = {}));\nvar ForgetDeviceException;\n(function (ForgetDeviceException) {\n    ForgetDeviceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgetDeviceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgetDeviceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgetDeviceException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ForgetDeviceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgetDeviceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ForgetDeviceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgetDeviceException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgetDeviceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ForgetDeviceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgetDeviceException || (ForgetDeviceException = {}));\nvar ForgotPasswordException;\n(function (ForgotPasswordException) {\n    ForgotPasswordException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ForgotPasswordException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ForgotPasswordException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ForgotPasswordException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ForgotPasswordException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ForgotPasswordException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ForgotPasswordException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ForgotPasswordException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ForgotPasswordException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ForgotPasswordException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ForgotPasswordException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ForgotPasswordException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ForgotPasswordException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ForgotPasswordException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ForgotPasswordException || (ForgotPasswordException = {}));\nvar GetUserException;\n(function (GetUserException) {\n    GetUserException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserException || (GetUserException = {}));\nvar GetIdException;\n(function (GetIdException) {\n    GetIdException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetIdException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetIdException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetIdException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetIdException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetIdException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetIdException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetIdException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetIdException || (GetIdException = {}));\nvar GetCredentialsForIdentityException;\n(function (GetCredentialsForIdentityException) {\n    GetCredentialsForIdentityException[\"ExternalServiceException\"] = \"ExternalServiceException\";\n    GetCredentialsForIdentityException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetCredentialsForIdentityException[\"InvalidIdentityPoolConfigurationException\"] = \"InvalidIdentityPoolConfigurationException\";\n    GetCredentialsForIdentityException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetCredentialsForIdentityException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetCredentialsForIdentityException[\"ResourceConflictException\"] = \"ResourceConflictException\";\n    GetCredentialsForIdentityException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetCredentialsForIdentityException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n})(GetCredentialsForIdentityException || (GetCredentialsForIdentityException = {}));\nvar GetUserAttributeVerificationException;\n(function (GetUserAttributeVerificationException) {\n    GetUserAttributeVerificationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    GetUserAttributeVerificationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GetUserAttributeVerificationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GetUserAttributeVerificationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    GetUserAttributeVerificationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    GetUserAttributeVerificationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    GetUserAttributeVerificationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    GetUserAttributeVerificationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GetUserAttributeVerificationException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GetUserAttributeVerificationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GetUserAttributeVerificationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GetUserAttributeVerificationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    GetUserAttributeVerificationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    GetUserAttributeVerificationException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    GetUserAttributeVerificationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(GetUserAttributeVerificationException || (GetUserAttributeVerificationException = {}));\nvar GlobalSignOutException;\n(function (GlobalSignOutException) {\n    GlobalSignOutException[\"ForbiddenException\"] = \"ForbiddenException\";\n    GlobalSignOutException[\"InternalErrorException\"] = \"InternalErrorException\";\n    GlobalSignOutException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    GlobalSignOutException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    GlobalSignOutException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    GlobalSignOutException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    GlobalSignOutException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    GlobalSignOutException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n})(GlobalSignOutException || (GlobalSignOutException = {}));\nvar InitiateAuthException;\n(function (InitiateAuthException) {\n    InitiateAuthException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    InitiateAuthException[\"ForbiddenException\"] = \"ForbiddenException\";\n    InitiateAuthException[\"InternalErrorException\"] = \"InternalErrorException\";\n    InitiateAuthException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    InitiateAuthException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    InitiateAuthException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    InitiateAuthException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    InitiateAuthException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    InitiateAuthException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    InitiateAuthException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    InitiateAuthException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    InitiateAuthException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    InitiateAuthException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    InitiateAuthException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    InitiateAuthException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(InitiateAuthException || (InitiateAuthException = {}));\nvar ResendConfirmationException;\n(function (ResendConfirmationException) {\n    ResendConfirmationException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    ResendConfirmationException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ResendConfirmationException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ResendConfirmationException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    ResendConfirmationException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ResendConfirmationException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    ResendConfirmationException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    ResendConfirmationException[\"LimitExceededException\"] = \"LimitExceededException\";\n    ResendConfirmationException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ResendConfirmationException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ResendConfirmationException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ResendConfirmationException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    ResendConfirmationException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    ResendConfirmationException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ResendConfirmationException || (ResendConfirmationException = {}));\nvar RespondToAuthChallengeException;\n(function (RespondToAuthChallengeException) {\n    RespondToAuthChallengeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    RespondToAuthChallengeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    RespondToAuthChallengeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    RespondToAuthChallengeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    RespondToAuthChallengeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    RespondToAuthChallengeException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    RespondToAuthChallengeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    RespondToAuthChallengeException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    RespondToAuthChallengeException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    RespondToAuthChallengeException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    RespondToAuthChallengeException[\"MFAMethodNotFoundException\"] = \"MFAMethodNotFoundException\";\n    RespondToAuthChallengeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    RespondToAuthChallengeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    RespondToAuthChallengeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    RespondToAuthChallengeException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    RespondToAuthChallengeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    RespondToAuthChallengeException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    RespondToAuthChallengeException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    RespondToAuthChallengeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    RespondToAuthChallengeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(RespondToAuthChallengeException || (RespondToAuthChallengeException = {}));\nvar SetUserMFAPreferenceException;\n(function (SetUserMFAPreferenceException) {\n    SetUserMFAPreferenceException[\"ForbiddenException\"] = \"ForbiddenException\";\n    SetUserMFAPreferenceException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SetUserMFAPreferenceException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SetUserMFAPreferenceException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SetUserMFAPreferenceException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    SetUserMFAPreferenceException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SetUserMFAPreferenceException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    SetUserMFAPreferenceException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(SetUserMFAPreferenceException || (SetUserMFAPreferenceException = {}));\nvar SignUpException;\n(function (SignUpException) {\n    SignUpException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    SignUpException[\"InternalErrorException\"] = \"InternalErrorException\";\n    SignUpException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    SignUpException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    SignUpException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    SignUpException[\"InvalidPasswordException\"] = \"InvalidPasswordException\";\n    SignUpException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    SignUpException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    SignUpException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    SignUpException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    SignUpException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    SignUpException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    SignUpException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    SignUpException[\"UsernameExistsException\"] = \"UsernameExistsException\";\n})(SignUpException || (SignUpException = {}));\nvar UpdateUserAttributesException;\n(function (UpdateUserAttributesException) {\n    UpdateUserAttributesException[\"AliasExistsException\"] = \"AliasExistsException\";\n    UpdateUserAttributesException[\"CodeDeliveryFailureException\"] = \"CodeDeliveryFailureException\";\n    UpdateUserAttributesException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    UpdateUserAttributesException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    UpdateUserAttributesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateUserAttributesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateUserAttributesException[\"InvalidEmailRoleAccessPolicyException\"] = \"InvalidEmailRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidLambdaResponseException\"] = \"InvalidLambdaResponseException\";\n    UpdateUserAttributesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleAccessPolicyException\"] = \"InvalidSmsRoleAccessPolicyException\";\n    UpdateUserAttributesException[\"InvalidSmsRoleTrustRelationshipException\"] = \"InvalidSmsRoleTrustRelationshipException\";\n    UpdateUserAttributesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateUserAttributesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateUserAttributesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateUserAttributesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateUserAttributesException[\"UnexpectedLambdaException\"] = \"UnexpectedLambdaException\";\n    UpdateUserAttributesException[\"UserLambdaValidationException\"] = \"UserLambdaValidationException\";\n    UpdateUserAttributesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateUserAttributesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateUserAttributesException || (UpdateUserAttributesException = {}));\nvar VerifySoftwareTokenException;\n(function (VerifySoftwareTokenException) {\n    VerifySoftwareTokenException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifySoftwareTokenException[\"EnableSoftwareTokenMFAException\"] = \"EnableSoftwareTokenMFAException\";\n    VerifySoftwareTokenException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifySoftwareTokenException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifySoftwareTokenException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifySoftwareTokenException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    VerifySoftwareTokenException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifySoftwareTokenException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifySoftwareTokenException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifySoftwareTokenException[\"SoftwareTokenMFANotFoundException\"] = \"SoftwareTokenMFANotFoundException\";\n    VerifySoftwareTokenException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifySoftwareTokenException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifySoftwareTokenException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifySoftwareTokenException || (VerifySoftwareTokenException = {}));\nvar VerifyUserAttributeException;\n(function (VerifyUserAttributeException) {\n    VerifyUserAttributeException[\"AliasExistsException\"] = \"AliasExistsException\";\n    VerifyUserAttributeException[\"CodeMismatchException\"] = \"CodeMismatchException\";\n    VerifyUserAttributeException[\"ExpiredCodeException\"] = \"ExpiredCodeException\";\n    VerifyUserAttributeException[\"ForbiddenException\"] = \"ForbiddenException\";\n    VerifyUserAttributeException[\"InternalErrorException\"] = \"InternalErrorException\";\n    VerifyUserAttributeException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    VerifyUserAttributeException[\"LimitExceededException\"] = \"LimitExceededException\";\n    VerifyUserAttributeException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    VerifyUserAttributeException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    VerifyUserAttributeException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    VerifyUserAttributeException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    VerifyUserAttributeException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    VerifyUserAttributeException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(VerifyUserAttributeException || (VerifyUserAttributeException = {}));\nvar UpdateDeviceStatusException;\n(function (UpdateDeviceStatusException) {\n    UpdateDeviceStatusException[\"ForbiddenException\"] = \"ForbiddenException\";\n    UpdateDeviceStatusException[\"InternalErrorException\"] = \"InternalErrorException\";\n    UpdateDeviceStatusException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    UpdateDeviceStatusException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    UpdateDeviceStatusException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    UpdateDeviceStatusException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    UpdateDeviceStatusException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    UpdateDeviceStatusException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    UpdateDeviceStatusException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    UpdateDeviceStatusException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(UpdateDeviceStatusException || (UpdateDeviceStatusException = {}));\nvar ListDevicesException;\n(function (ListDevicesException) {\n    ListDevicesException[\"ForbiddenException\"] = \"ForbiddenException\";\n    ListDevicesException[\"InternalErrorException\"] = \"InternalErrorException\";\n    ListDevicesException[\"InvalidParameterException\"] = \"InvalidParameterException\";\n    ListDevicesException[\"InvalidUserPoolConfigurationException\"] = \"InvalidUserPoolConfigurationException\";\n    ListDevicesException[\"NotAuthorizedException\"] = \"NotAuthorizedException\";\n    ListDevicesException[\"PasswordResetRequiredException\"] = \"PasswordResetRequiredException\";\n    ListDevicesException[\"ResourceNotFoundException\"] = \"ResourceNotFoundException\";\n    ListDevicesException[\"TooManyRequestsException\"] = \"TooManyRequestsException\";\n    ListDevicesException[\"UserNotConfirmedException\"] = \"UserNotConfirmedException\";\n    ListDevicesException[\"UserNotFoundException\"] = \"UserNotFoundException\";\n})(ListDevicesException || (ListDevicesException = {}));\nconst SETUP_TOTP_EXCEPTION = 'SetUpTOTPException';\n\nexport { AssociateSoftwareTokenException, ChangePasswordException, ConfirmDeviceException, ConfirmForgotPasswordException, ConfirmSignUpException, DeleteUserAttributesException, DeleteUserException, ForgetDeviceException, ForgotPasswordException, GetCredentialsForIdentityException, GetIdException, GetUserAttributeVerificationException, GetUserException, GlobalSignOutException, InitiateAuthException, ListDevicesException, ResendConfirmationException, RespondToAuthChallengeException, SETUP_TOTP_EXCEPTION, SetUserMFAPreferenceException, SignUpException, UpdateDeviceStatusException, UpdateUserAttributesException, VerifySoftwareTokenException, VerifyUserAttributeException };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst signInReducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_SIGN_IN_SESSION':\n            return {\n                ...state,\n                signInSession: action.value,\n            };\n        case 'SET_SIGN_IN_STATE':\n            return {\n                ...action.value,\n            };\n        case 'SET_CHALLENGE_NAME':\n            return {\n                ...state,\n                challengeName: action.value,\n            };\n        case 'SET_USERNAME':\n            return {\n                ...state,\n                username: action.value,\n            };\n        case 'SET_INITIAL_STATE':\n            return defaultState();\n        default:\n            return state;\n    }\n};\nfunction defaultState() {\n    return {\n        username: undefined,\n        challengeName: undefined,\n        signInSession: undefined,\n    };\n}\nconst createStore = reducer => {\n    let currentState = reducer(defaultState(), { type: 'SET_INITIAL_STATE' });\n    return {\n        getState: () => currentState,\n        dispatch: action => {\n            currentState = reducer(currentState, action);\n        },\n    };\n};\nconst signInStore = createStore(signInReducer);\nfunction setActiveSignInState(state) {\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_STATE',\n        value: state,\n    });\n}\nfunction cleanActiveSignInState() {\n    signInStore.dispatch({ type: 'SET_INITIAL_STATE' });\n}\n\nexport { cleanActiveSignInState, setActiveSignInState, signInStore };\n\n", "import { AuthError } from './AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_UNAUTHENTICATED_EXCEPTION = 'UserUnAuthenticatedException';\nconst USER_ALREADY_AUTHENTICATED_EXCEPTION = 'UserAlreadyAuthenticatedException';\nconst DEVICE_METADATA_NOT_FOUND_EXCEPTION = 'DeviceMetadataNotFoundException';\nconst AUTO_SIGN_IN_EXCEPTION = 'AutoSignInException';\nconst INVALID_REDIRECT_EXCEPTION = 'InvalidRedirectException';\nconst invalidRedirectException = new AuthError({\n    name: INVALID_REDIRECT_EXCEPTION,\n    message: 'signInRedirect or signOutRedirect had an invalid format or was not found.',\n    recoverySuggestion: 'Please make sure the signIn/Out redirect in your oauth config is valid.',\n});\nconst INVALID_ORIGIN_EXCEPTION = 'InvalidOriginException';\nconst invalidOriginException = new AuthError({\n    name: INVALID_ORIGIN_EXCEPTION,\n    message: 'redirect is coming from a different origin. The oauth flow needs to be initiated from the same origin',\n    recoverySuggestion: 'Please call signInWithRedirect from the same origin.',\n});\nconst OAUTH_SIGNOUT_EXCEPTION = 'OAuthSignOutException';\nconst TOKEN_REFRESH_EXCEPTION = 'TokenRefreshException';\nconst UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION = 'UnexpectedSignInInterruptionException';\n\nexport { AUTO_SIGN_IN_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION, INVALID_ORIGIN_EXCEPTION, INVALID_REDIRECT_EXCEPTION, OAUTH_SIGNOUT_EXCEPTION, TOKEN_REFRESH_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION, USER_ALREADY_AUTHENTICATED_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, invalidOriginException, invalidRedirectException };\n\n", "import { AuthError } from '../../../errors/AuthError.mjs';\nimport { TOKEN_REFRESH_EXCEPTION, USER_UNAUTHENTICATED_EXCEPTION, DEVICE_METADATA_NOT_FOUND_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction isTypeUserPoolConfig(authConfig) {\n    if (authConfig &&\n        authConfig.Cognito.userPoolId &&\n        authConfig.Cognito.userPoolClientId) {\n        return true;\n    }\n    return false;\n}\nfunction assertAuthTokens(tokens) {\n    if (!tokens || !tokens.accessToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nfunction assertIdTokenInAuthTokens(tokens) {\n    if (!tokens || !tokens.idToken) {\n        throw new AuthError({\n            name: USER_UNAUTHENTICATED_EXCEPTION,\n            message: 'User needs to be authenticated to call this API.',\n            recoverySuggestion: 'Sign in before calling this API again.',\n        });\n    }\n}\nconst oAuthTokenRefreshException = new AuthError({\n    name: TOKEN_REFRESH_EXCEPTION,\n    message: `Token refresh is not supported when authenticated with the 'implicit grant' (token) oauth flow. \n\tPlease change your oauth configuration to use 'code grant' flow.`,\n    recoverySuggestion: `Please logout and change your Amplify configuration to use \"code grant\" flow. \n\tE.g { responseType: 'code' }`,\n});\nconst tokenRefreshException = new AuthError({\n    name: USER_UNAUTHENTICATED_EXCEPTION,\n    message: 'User needs to be authenticated to call this API.',\n    recoverySuggestion: 'Sign in before calling this API again.',\n});\nfunction assertAuthTokensWithRefreshToken(tokens) {\n    if (isAuthenticatedWithImplicitOauthFlow(tokens)) {\n        throw oAuthTokenRefreshException;\n    }\n    if (!isAuthenticatedWithRefreshToken(tokens)) {\n        throw tokenRefreshException;\n    }\n}\nfunction assertDeviceMetadata(deviceMetadata) {\n    if (!deviceMetadata ||\n        !deviceMetadata.deviceKey ||\n        !deviceMetadata.deviceGroupKey ||\n        !deviceMetadata.randomPassword) {\n        throw new AuthError({\n            name: DEVICE_METADATA_NOT_FOUND_EXCEPTION,\n            message: 'Either deviceKey, deviceGroupKey or secretPassword were not found during the sign-in process.',\n            recoverySuggestion: 'Make sure to not clear storage after calling the signIn API.',\n        });\n    }\n}\nconst OAuthStorageKeys = {\n    inflightOAuth: 'inflightOAuth',\n    oauthSignIn: 'oauthSignIn',\n    oauthPKCE: 'oauthPKCE',\n    oauthState: 'oauthState',\n};\nfunction isAuthenticated(tokens) {\n    return tokens?.accessToken || tokens?.idToken;\n}\nfunction isAuthenticatedWithRefreshToken(tokens) {\n    return isAuthenticated(tokens) && tokens?.refreshToken;\n}\nfunction isAuthenticatedWithImplicitOauthFlow(tokens) {\n    return isAuthenticated(tokens) && !tokens?.refreshToken;\n}\n\nexport { OAuthStorageKeys, assertAuthTokens, assertAuthTokensWithRefreshToken, assertDeviceMetadata, assertIdTokenInAuthTokens, isTypeUserPoolConfig, oAuthTokenRefreshException, tokenRefreshException };\n\n", "import { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { assertAuthTokens } from '../../utils/types.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getCurrentUser = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const tokens = await amplify.Auth.getTokens({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { 'cognito:username': username, sub } = tokens.idToken?.payload ?? {};\n    const authUser = {\n        username: username,\n        userId: sub,\n    };\n    const signInDetails = getSignInDetailsFromTokens(tokens);\n    if (signInDetails) {\n        authUser.signInDetails = signInDetails;\n    }\n    return authUser;\n};\nfunction getSignInDetailsFromTokens(tokens) {\n    return tokens?.signInDetails;\n}\n\nexport { getCurrentUser };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { getCurrentUser as getCurrentUser$1 } from './internal/getCurrentUser.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Gets the current user from the idToken.\n *\n * @param input -  The GetCurrentUserInput object.\n * @returns GetCurrentUserOutput\n * @throws - {@link InitiateAuthException} - Thrown when the service fails to refresh the tokens.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst getCurrentUser = async () => {\n    return getCurrentUser$1(Amplify);\n};\n\nexport { getCurrentUser };\n\n", "import { getAmplifyUserAgent, Category } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst getAuthUserAgentValue = (action, customUserAgentDetails) => getAmplifyUserAgent({\n    category: Category.Auth,\n    action,\n    ...customUserAgentDetails,\n});\n\nexport { getAuthUserAgentValue };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction getUserContextData({ username, userPoolId, userPoolClientId, }) {\n    if (typeof window === 'undefined') {\n        return undefined;\n    }\n    const amazonCognitoAdvancedSecurityData = window\n        .AmazonCognitoAdvancedSecurityData;\n    if (typeof amazonCognitoAdvancedSecurityData === 'undefined') {\n        return undefined;\n    }\n    const advancedSecurityData = amazonCognitoAdvancedSecurityData.getData(username, userPoolId, userPoolClientId);\n    if (advancedSecurityData) {\n        const userContextData = {\n            EncodedData: advancedSecurityData,\n        };\n        return userContextData;\n    }\n    return {};\n}\n\nexport { getUserContextData };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { AuthAction, assertTokenProviderConfig, AmplifyUrl, base64Encoder } from '@aws-amplify/core/internals/utils';\nimport BigInteger from './srp/BigInteger/BigInteger.mjs';\nimport { getAuthenticationHelper } from './srp/getAuthenticationHelper.mjs';\nimport { getBytesFromHex } from './srp/getBytesFromHex.mjs';\nimport { getNowString } from './srp/getNowString.mjs';\nimport { getSignatureString } from './srp/getSignatureString.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { InitiateAuthException } from '../types/errors.mjs';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { signInStore } from './signInStore.mjs';\nimport { respondToAuthChallenge, verifySoftwareToken, initiateAuth, associateSoftwareToken, confirmDevice } from './clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from './clients/CognitoIdentityProvider/utils.mjs';\nimport { USER_ALREADY_AUTHENTICATED_EXCEPTION } from '../../../errors/constants.mjs';\nimport { getCurrentUser } from '../apis/getCurrentUser.mjs';\nimport { assertDeviceMetadata } from './types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst USER_ATTRIBUTES = 'userAttributes.';\nasync function handleCustomChallenge({ challengeResponse, clientMetadata, session, username, config, tokenOrchestrator, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: challengeResponse,\n    };\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses['DEVICE_KEY'] = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'CUSTOM_CHALLENGE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH') {\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    }\n    return response;\n}\nasync function handleMFASetupChallenge({ challengeResponse, username, clientMetadata, session, deviceName, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n    };\n    const { Session } = await verifySoftwareToken({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, {\n        UserCode: challengeResponse,\n        Session: session,\n        FriendlyDeviceName: deviceName,\n    });\n    signInStore.dispatch({\n        type: 'SET_SIGN_IN_SESSION',\n        value: Session,\n    });\n    const jsonReq = {\n        ChallengeName: 'MFA_SETUP',\n        ChallengeResponses: challengeResponses,\n        Session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n    };\n    return respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReq);\n}\nasync function handleSelectMFATypeChallenge({ challengeResponse, username, clientMetadata, session, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    assertValidationError(challengeResponse === 'TOTP' || challengeResponse === 'SMS', AuthValidationErrorCode.IncorrectMFAMethod);\n    const challengeResponses = {\n        USERNAME: username,\n        ANSWER: mapMfaType(challengeResponse),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SELECT_MFA_TYPE',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nasync function handleSMSMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        SMS_MFA_CODE: challengeResponse,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SMS_MFA',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nasync function handleSoftwareTokenMFAChallenge({ challengeResponse, clientMetadata, session, username, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        USERNAME: username,\n        SOFTWARE_TOKEN_MFA_CODE: challengeResponse,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'SOFTWARE_TOKEN_MFA',\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nasync function handleCompleteNewPasswordChallenge({ challengeResponse, clientMetadata, session, username, requiredAttributes, config, }) {\n    const { userPoolId, userPoolClientId } = config;\n    const challengeResponses = {\n        ...createAttributes(requiredAttributes),\n        NEW_PASSWORD: challengeResponse,\n        USERNAME: username,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        ChallengeName: 'NEW_PASSWORD_REQUIRED',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    return respondToAuthChallenge({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignIn),\n    }, jsonReq);\n}\nasync function handleUserPasswordAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId } = config;\n    const authParameters = {\n        USERNAME: username,\n        PASSWORD: password,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters['DEVICE_KEY'] = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_PASSWORD_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ??\n        response.ChallengeParameters?.USER_ID_FOR_SRP ??\n        username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nasync function handleUserSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'USER_SRP_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const resp = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const { ChallengeParameters: challengeParameters, Session: session } = resp;\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nasync function handleCustomAuthFlowWithoutSRP(username, clientMetadata, config, tokenOrchestrator) {\n    const { userPoolClientId, userPoolId } = config;\n    const authParameters = {\n        USERNAME: username,\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        authParameters['DEVICE_KEY'] = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = response.ChallengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username: activeUsername,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nasync function handleCustomSRPAuthFlow(username, password, clientMetadata, config, tokenOrchestrator) {\n    assertTokenProviderConfig(config);\n    const { userPoolId, userPoolClientId } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const authParameters = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        CHALLENGE_NAME: 'SRP_A',\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReq = {\n        AuthFlow: 'CUSTOM_AUTH',\n        AuthParameters: authParameters,\n        ClientMetadata: clientMetadata,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const { ChallengeParameters: challengeParameters, Session: session } = await initiateAuth({\n        region: getRegion(userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignIn),\n    }, jsonReq);\n    const activeUsername = challengeParameters?.USERNAME ?? username;\n    setActiveSignInUsername(activeUsername);\n    return retryOnResourceNotFoundException(handlePasswordVerifierChallenge, [\n        password,\n        challengeParameters,\n        clientMetadata,\n        session,\n        authenticationHelper,\n        config,\n        tokenOrchestrator,\n    ], activeUsername, tokenOrchestrator);\n}\nasync function handleDeviceSRPAuth({ username, config, clientMetadata, session, tokenOrchestrator, }) {\n    const userPoolId = config.userPoolId;\n    const clientId = config.userPoolClientId;\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const authenticationHelper = await getAuthenticationHelper(deviceMetadata.deviceGroupKey);\n    const challengeResponses = {\n        USERNAME: username,\n        SRP_A: authenticationHelper.A.toString(16),\n        DEVICE_KEY: deviceMetadata.deviceKey,\n    };\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_SRP_AUTH',\n        ClientId: clientId,\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n    };\n    const { ChallengeParameters, Session } = await respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReqResponseChallenge);\n    return handleDevicePasswordVerifier(username, ChallengeParameters, clientMetadata, Session, authenticationHelper, config, tokenOrchestrator);\n}\nasync function handleDevicePasswordVerifier(username, challengeParameters, clientMetadata, session, authenticationHelper, { userPoolId, userPoolClientId }, tokenOrchestrator) {\n    const deviceMetadata = await tokenOrchestrator?.getDeviceMetadata(username);\n    assertDeviceMetadata(deviceMetadata);\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const deviceKey = deviceMetadata.deviceKey;\n    const deviceGroupKey = deviceMetadata.deviceGroupKey;\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username: deviceMetadata.deviceKey,\n        password: deviceMetadata.randomPassword,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: challengeParameters?.USERNAME ?? username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username: deviceKey,\n            userPoolName: deviceGroupKey,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n        DEVICE_KEY: deviceKey,\n    };\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'DEVICE_PASSWORD_VERIFIER',\n        ClientId: userPoolClientId,\n        ChallengeResponses: challengeResponses,\n        Session: session,\n        ClientMetadata: clientMetadata,\n        UserContextData,\n    };\n    return respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReqResponseChallenge);\n}\nasync function handlePasswordVerifierChallenge(password, challengeParameters, clientMetadata, session, authenticationHelper, config, tokenOrchestrator) {\n    const { userPoolId, userPoolClientId } = config;\n    const userPoolName = userPoolId?.split('_')[1] || '';\n    const serverBValue = new BigInteger(challengeParameters?.SRP_B, 16);\n    const salt = new BigInteger(challengeParameters?.SALT, 16);\n    const username = challengeParameters?.USER_ID_FOR_SRP;\n    if (!username)\n        throw new AuthError({\n            name: 'EmptyUserIdForSRPException',\n            message: 'USER_ID_FOR_SRP was not found in challengeParameters',\n        });\n    const hkdf = await authenticationHelper.getPasswordAuthenticationKey({\n        username,\n        password,\n        serverBValue,\n        salt,\n    });\n    const dateNow = getNowString();\n    const challengeResponses = {\n        USERNAME: username,\n        PASSWORD_CLAIM_SECRET_BLOCK: challengeParameters?.SECRET_BLOCK,\n        TIMESTAMP: dateNow,\n        PASSWORD_CLAIM_SIGNATURE: getSignatureString({\n            username,\n            userPoolName,\n            challengeParameters,\n            dateNow,\n            hkdf,\n        }),\n    };\n    const deviceMetadata = await tokenOrchestrator.getDeviceMetadata(username);\n    if (deviceMetadata && deviceMetadata.deviceKey) {\n        challengeResponses['DEVICE_KEY'] = deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const jsonReqResponseChallenge = {\n        ChallengeName: 'PASSWORD_VERIFIER',\n        ChallengeResponses: challengeResponses,\n        ClientMetadata: clientMetadata,\n        Session: session,\n        ClientId: userPoolClientId,\n        UserContextData,\n    };\n    const response = await respondToAuthChallenge({ region: getRegion(userPoolId) }, jsonReqResponseChallenge);\n    if (response.ChallengeName === 'DEVICE_SRP_AUTH')\n        return handleDeviceSRPAuth({\n            username,\n            config,\n            clientMetadata,\n            session: response.Session,\n            tokenOrchestrator,\n        });\n    return response;\n}\nasync function getSignInResult(params) {\n    const { challengeName, challengeParameters } = params;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    switch (challengeName) {\n        case 'CUSTOM_CHALLENGE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_CUSTOM_CHALLENGE',\n                    additionalInfo: challengeParameters,\n                },\n            };\n        case 'MFA_SETUP':\n            const { signInSession, username } = signInStore.getState();\n            if (!isMFATypeEnabled(challengeParameters, 'TOTP'))\n                throw new AuthError({\n                    name: AuthErrorCodes.SignInException,\n                    message: `Cannot initiate MFA setup from available types: ${getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_SETUP))}`,\n                });\n            const { Session, SecretCode: secretCode } = await associateSoftwareToken({ region: getRegion(authConfig.userPoolId) }, {\n                Session: signInSession,\n            });\n            signInStore.dispatch({\n                type: 'SET_SIGN_IN_SESSION',\n                value: Session,\n            });\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_TOTP_SETUP',\n                    totpSetupDetails: getTOTPSetupDetails(secretCode, username),\n                },\n            };\n        case 'NEW_PASSWORD_REQUIRED':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_NEW_PASSWORD_REQUIRED',\n                    missingAttributes: parseAttributes(challengeParameters.requiredAttributes),\n                },\n            };\n        case 'SELECT_MFA_TYPE':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONTINUE_SIGN_IN_WITH_MFA_SELECTION',\n                    allowedMFATypes: getMFATypes(parseMFATypes(challengeParameters.MFAS_CAN_CHOOSE)),\n                },\n            };\n        case 'SMS_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_SMS_CODE',\n                    codeDeliveryDetails: {\n                        deliveryMedium: challengeParameters.CODE_DELIVERY_DELIVERY_MEDIUM,\n                        destination: challengeParameters.CODE_DELIVERY_DESTINATION,\n                    },\n                },\n            };\n        case 'SOFTWARE_TOKEN_MFA':\n            return {\n                isSignedIn: false,\n                nextStep: {\n                    signInStep: 'CONFIRM_SIGN_IN_WITH_TOTP_CODE',\n                },\n            };\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: 'An error occurred during the sign in process. ' +\n            `${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nfunction getTOTPSetupDetails(secretCode, username) {\n    return {\n        sharedSecret: secretCode,\n        getSetupUri: (appName, accountName) => {\n            const totpUri = `otpauth://totp/${appName}:${accountName ?? username}?secret=${secretCode}&issuer=${appName}`;\n            return new AmplifyUrl(totpUri);\n        },\n    };\n}\nfunction getSignInResultFromError(errorName) {\n    if (errorName === InitiateAuthException.PasswordResetRequiredException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'RESET_PASSWORD' },\n        };\n    }\n    else if (errorName === InitiateAuthException.UserNotConfirmedException) {\n        return {\n            isSignedIn: false,\n            nextStep: { signInStep: 'CONFIRM_SIGN_UP' },\n        };\n    }\n}\nfunction parseAttributes(attributes) {\n    if (!attributes)\n        return [];\n    const parsedAttributes = JSON.parse(attributes).map(att => att.includes(USER_ATTRIBUTES) ? att.replace(USER_ATTRIBUTES, '') : att);\n    return parsedAttributes;\n}\nfunction createAttributes(attributes) {\n    if (!attributes)\n        return {};\n    const newAttributes = {};\n    Object.entries(attributes).forEach(([key, value]) => {\n        if (value)\n            newAttributes[`${USER_ATTRIBUTES}${key}`] = value;\n    });\n    return newAttributes;\n}\nasync function handleChallengeName(username, challengeName, session, challengeResponse, config, tokenOrchestrator, clientMetadata, options) {\n    const userAttributes = options?.userAttributes;\n    const deviceName = options?.friendlyDeviceName;\n    switch (challengeName) {\n        case 'SMS_MFA':\n            return handleSMSMFAChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'SELECT_MFA_TYPE':\n            return handleSelectMFATypeChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n        case 'MFA_SETUP':\n            return handleMFASetupChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                deviceName,\n                config,\n            });\n        case 'NEW_PASSWORD_REQUIRED':\n            return handleCompleteNewPasswordChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                requiredAttributes: userAttributes,\n                config,\n            });\n        case 'CUSTOM_CHALLENGE':\n            return retryOnResourceNotFoundException(handleCustomChallenge, [\n                {\n                    challengeResponse,\n                    clientMetadata,\n                    session,\n                    username,\n                    config,\n                    tokenOrchestrator,\n                },\n            ], username, tokenOrchestrator);\n        case 'SOFTWARE_TOKEN_MFA':\n            return handleSoftwareTokenMFAChallenge({\n                challengeResponse,\n                clientMetadata,\n                session,\n                username,\n                config,\n            });\n    }\n    // TODO: remove this error message for production apps\n    throw new AuthError({\n        name: AuthErrorCodes.SignInException,\n        message: `An error occurred during the sign in process. \n\t\t${challengeName} challengeName returned by the underlying service was not addressed.`,\n    });\n}\nfunction mapMfaType(mfa) {\n    let mfaType = 'SMS_MFA';\n    if (mfa === 'TOTP')\n        mfaType = 'SOFTWARE_TOKEN_MFA';\n    return mfaType;\n}\nfunction getMFAType(type) {\n    if (type === 'SMS_MFA')\n        return 'SMS';\n    if (type === 'SOFTWARE_TOKEN_MFA')\n        return 'TOTP';\n    // TODO: log warning for unknown MFA type\n}\nfunction getMFATypes(types) {\n    if (!types)\n        return undefined;\n    return types.map(getMFAType).filter(Boolean);\n}\nfunction parseMFATypes(mfa) {\n    if (!mfa)\n        return [];\n    return JSON.parse(mfa);\n}\nfunction isMFATypeEnabled(challengeParams, mfaType) {\n    const { MFAS_CAN_SETUP } = challengeParams;\n    const mfaTypes = getMFATypes(parseMFATypes(MFAS_CAN_SETUP));\n    if (!mfaTypes)\n        return false;\n    return mfaTypes.includes(mfaType);\n}\nasync function assertUserNotAuthenticated() {\n    let authUser;\n    try {\n        authUser = await getCurrentUser();\n    }\n    catch (error) { }\n    if (authUser && authUser.userId && authUser.username) {\n        throw new AuthError({\n            name: USER_ALREADY_AUTHENTICATED_EXCEPTION,\n            message: 'There is already a signed in user.',\n            recoverySuggestion: 'Call signOut before calling signIn again.',\n        });\n    }\n}\n/**\n * This function is used to kick off the device management flow.\n *\n * If an error is thrown while generating a hash device or calling the `ConfirmDevice`\n * client, then this API will ignore the error and return undefined. Otherwise the authentication\n * flow will not complete and the user won't be able to be signed in.\n *\n * @returns DeviceMetadata | undefined\n */\nasync function getNewDeviceMetatada(userPoolId, newDeviceMetadata, accessToken) {\n    if (!newDeviceMetadata)\n        return undefined;\n    const userPoolName = userPoolId.split('_')[1] || '';\n    const authenticationHelper = await getAuthenticationHelper(userPoolName);\n    const deviceKey = newDeviceMetadata?.DeviceKey;\n    const deviceGroupKey = newDeviceMetadata?.DeviceGroupKey;\n    try {\n        await authenticationHelper.generateHashDevice(deviceGroupKey ?? '', deviceKey ?? '');\n    }\n    catch (errGenHash) {\n        // TODO: log error here\n        return undefined;\n    }\n    const deviceSecretVerifierConfig = {\n        Salt: base64Encoder.convert(getBytesFromHex(authenticationHelper.getSaltToHashDevices())),\n        PasswordVerifier: base64Encoder.convert(getBytesFromHex(authenticationHelper.getVerifierDevices())),\n    };\n    const randomPassword = authenticationHelper.getRandomPassword();\n    try {\n        await confirmDevice({ region: getRegion(userPoolId) }, {\n            AccessToken: accessToken,\n            DeviceKey: newDeviceMetadata?.DeviceKey,\n            DeviceSecretVerifierConfig: deviceSecretVerifierConfig,\n        });\n        return {\n            deviceKey,\n            deviceGroupKey,\n            randomPassword,\n        };\n    }\n    catch (error) {\n        // TODO: log error here\n        return undefined;\n    }\n}\n/**\n * It will retry the function if the error is a `ResourceNotFoundException` and\n * will clean the device keys stored in the storage mechanism.\n *\n */\nasync function retryOnResourceNotFoundException(func, args, username, tokenOrchestrator) {\n    try {\n        return await func(...args);\n    }\n    catch (error) {\n        if (error instanceof AuthError &&\n            error.name === 'ResourceNotFoundException' &&\n            error.message.includes('Device does not exist.')) {\n            await tokenOrchestrator.clearDeviceMetadata(username);\n            return await func(...args);\n        }\n        throw error;\n    }\n}\nfunction setActiveSignInUsername(username) {\n    const { dispatch } = signInStore;\n    dispatch({ type: 'SET_USERNAME', value: username });\n}\nfunction getActiveSignInUsername(username) {\n    const state = signInStore.getState();\n    return state.username ?? username;\n}\n\nexport { assertUserNotAuthenticated, createAttributes, getActiveSignInUsername, getMFAType, getMFATypes, getNewDeviceMetatada, getSignInResult, getSignInResultFromError, getTOTPSetupDetails, handleChallengeName, handleCompleteNewPasswordChallenge, handleCustomAuthFlowWithoutSRP, handleCustomChallenge, handleCustomSRPAuthFlow, handleMFASetupChallenge, handlePasswordVerifierChallenge, handleSMSMFAChallenge, handleSelectMFATypeChallenge, handleSoftwareTokenMFAChallenge, handleUserPasswordAuthFlow, handleUserSRPAuthFlow, isMFATypeEnabled, mapMfaType, parseAttributes, parseMFATypes, retryOnResourceNotFoundException, setActiveSignInUsername };\n\n", "import { deDupeAsyncFunction, assertTokenProviderConfig, decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { initiateAuth } from './clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from './clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokensWithRefreshToken } from './types.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { getUserContextData } from './userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst refreshAuthTokensFunction = async ({ tokens, authConfig, username, }) => {\n    assertTokenProviderConfig(authConfig?.Cognito);\n    const region = getRegion(authConfig.Cognito.userPoolId);\n    assertAuthTokensWithRefreshToken(tokens);\n    const refreshTokenString = tokens.refreshToken;\n    const AuthParameters = {\n        REFRESH_TOKEN: refreshTokenString,\n    };\n    if (tokens.deviceMetadata?.deviceKey) {\n        AuthParameters['DEVICE_KEY'] = tokens.deviceMetadata.deviceKey;\n    }\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId: authConfig.Cognito.userPoolId,\n        userPoolClientId: authConfig.Cognito.userPoolClientId,\n    });\n    const { AuthenticationResult } = await initiateAuth({ region }, {\n        ClientId: authConfig?.Cognito?.userPoolClientId,\n        AuthFlow: 'REFRESH_TOKEN_AUTH',\n        AuthParameters,\n        UserContextData,\n    });\n    const accessToken = decodeJWT(AuthenticationResult?.AccessToken ?? '');\n    const idToken = AuthenticationResult?.IdToken\n        ? decodeJWT(AuthenticationResult.IdToken)\n        : undefined;\n    const iat = accessToken.payload.iat;\n    // This should never happen. If it does, it's a bug from the service.\n    if (!iat) {\n        throw new AuthError({\n            name: 'iatNotFoundException',\n            message: 'iat not found in access token',\n        });\n    }\n    const clockDrift = iat * 1000 - new Date().getTime();\n    return {\n        accessToken,\n        idToken,\n        clockDrift,\n        refreshToken: refreshTokenString,\n        username,\n    };\n};\nconst refreshAuthTokens = deDupeAsyncFunction(refreshAuthTokensFunction);\n\nexport { refreshAuthTokens };\n\n", "const AuthTokenStorageKeys = {\n    accessToken: 'accessToken',\n    idToken: 'idToken',\n    oidcProvider: 'oidcProvider',\n    clockDrift: 'clockDrift',\n    refreshToken: 'refreshToken',\n    deviceKey: 'deviceKey',\n    randomPasswordKey: 'randomPasswordKey',\n    deviceGroupKey: 'deviceGroupKey',\n    signInDetails: 'signInDetails',\n};\n\nexport { AuthTokenStorageKeys };\n\n", "import { createAssertionFunction } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar TokenProviderErrorCode;\n(function (TokenProviderErrorCode) {\n    TokenProviderErrorCode[\"InvalidAuthTokens\"] = \"InvalidAuthTokens\";\n})(TokenProviderErrorCode || (TokenProviderErrorCode = {}));\nconst tokenValidationErrorMap = {\n    [TokenProviderErrorCode.InvalidAuthTokens]: {\n        message: 'Invalid tokens.',\n        recoverySuggestion: 'Make sure the tokens are valid.',\n    },\n};\nconst assert = createAssertionFunction(tokenValidationErrorMap);\n\nexport { TokenProviderErrorCode, assert };\n\n", "import { decodeJWT, assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthTokenStorageKeys } from './types.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { assert, TokenProviderErrorCode } from './errorHelpers.mjs';\n\nclass DefaultTokenStore {\n    constructor() {\n        this.name = 'CognitoIdentityServiceProvider'; // To be backwards compatible with V5, no migration needed\n    }\n    getKeyValueStorage() {\n        if (!this.keyValueStorage) {\n            throw new AuthError({\n                name: 'KeyValueStorageNotFoundException',\n                message: 'KeyValueStorage was not found in TokenStore',\n            });\n        }\n        return this.keyValueStorage;\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    async loadTokens() {\n        // TODO(v6): migration logic should be here\n        // Reading V5 tokens old format\n        try {\n            const authKeys = await this.getAuthKeys();\n            const accessTokenString = await this.getKeyValueStorage().getItem(authKeys.accessToken);\n            if (!accessTokenString) {\n                throw new AuthError({\n                    name: 'NoSessionFoundException',\n                    message: 'Auth session was not found. Make sure to call signIn.',\n                });\n            }\n            const accessToken = decodeJWT(accessTokenString);\n            const itString = await this.getKeyValueStorage().getItem(authKeys.idToken);\n            const idToken = itString ? decodeJWT(itString) : undefined;\n            const refreshToken = (await this.getKeyValueStorage().getItem(authKeys.refreshToken)) ??\n                undefined;\n            const clockDriftString = (await this.getKeyValueStorage().getItem(authKeys.clockDrift)) ?? '0';\n            const clockDrift = Number.parseInt(clockDriftString);\n            const signInDetails = await this.getKeyValueStorage().getItem(authKeys.signInDetails);\n            const tokens = {\n                accessToken,\n                idToken,\n                refreshToken,\n                deviceMetadata: (await this.getDeviceMetadata()) ?? undefined,\n                clockDrift,\n                username: await this.getLastAuthUser(),\n            };\n            if (signInDetails) {\n                tokens.signInDetails = JSON.parse(signInDetails);\n            }\n            return tokens;\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    async storeTokens(tokens) {\n        assert(tokens !== undefined, TokenProviderErrorCode.InvalidAuthTokens);\n        await this.clearTokens();\n        const lastAuthUser = tokens.username;\n        await this.getKeyValueStorage().setItem(this.getLastAuthUserKey(), lastAuthUser);\n        const authKeys = await this.getAuthKeys();\n        await this.getKeyValueStorage().setItem(authKeys.accessToken, tokens.accessToken.toString());\n        if (!!tokens.idToken) {\n            await this.getKeyValueStorage().setItem(authKeys.idToken, tokens.idToken.toString());\n        }\n        if (!!tokens.refreshToken) {\n            await this.getKeyValueStorage().setItem(authKeys.refreshToken, tokens.refreshToken);\n        }\n        if (!!tokens.deviceMetadata) {\n            if (tokens.deviceMetadata.deviceKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceKey, tokens.deviceMetadata.deviceKey);\n            }\n            if (tokens.deviceMetadata.deviceGroupKey) {\n                await this.getKeyValueStorage().setItem(authKeys.deviceGroupKey, tokens.deviceMetadata.deviceGroupKey);\n            }\n            await this.getKeyValueStorage().setItem(authKeys.randomPasswordKey, tokens.deviceMetadata.randomPassword);\n        }\n        if (!!tokens.signInDetails) {\n            await this.getKeyValueStorage().setItem(authKeys.signInDetails, JSON.stringify(tokens.signInDetails));\n        }\n        await this.getKeyValueStorage().setItem(authKeys.clockDrift, `${tokens.clockDrift}`);\n    }\n    async clearTokens() {\n        const authKeys = await this.getAuthKeys();\n        // Not calling clear because it can remove data that is not managed by AuthTokenStore\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.accessToken),\n            this.getKeyValueStorage().removeItem(authKeys.idToken),\n            this.getKeyValueStorage().removeItem(authKeys.clockDrift),\n            this.getKeyValueStorage().removeItem(authKeys.refreshToken),\n            this.getKeyValueStorage().removeItem(authKeys.signInDetails),\n            this.getKeyValueStorage().removeItem(this.getLastAuthUserKey()),\n        ]);\n    }\n    async getDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        const deviceKey = await this.getKeyValueStorage().getItem(authKeys.deviceKey);\n        const deviceGroupKey = await this.getKeyValueStorage().getItem(authKeys.deviceGroupKey);\n        const randomPassword = await this.getKeyValueStorage().getItem(authKeys.randomPasswordKey);\n        return !!randomPassword\n            ? {\n                deviceKey: deviceKey ?? undefined,\n                deviceGroupKey: deviceGroupKey ?? undefined,\n                randomPassword,\n            }\n            : null;\n    }\n    async clearDeviceMetadata(username) {\n        const authKeys = await this.getAuthKeys(username);\n        await Promise.all([\n            this.getKeyValueStorage().removeItem(authKeys.deviceKey),\n            this.getKeyValueStorage().removeItem(authKeys.deviceGroupKey),\n            this.getKeyValueStorage().removeItem(authKeys.randomPasswordKey),\n        ]);\n    }\n    async getAuthKeys(username) {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const lastAuthUser = username ?? (await this.getLastAuthUser());\n        return createKeysForAuthStorage(this.name, `${this.authConfig.Cognito.userPoolClientId}.${lastAuthUser}`);\n    }\n    getLastAuthUserKey() {\n        assertTokenProviderConfig(this.authConfig?.Cognito);\n        const identifier = this.authConfig.Cognito.userPoolClientId;\n        return `${this.name}.${identifier}.LastAuthUser`;\n    }\n    async getLastAuthUser() {\n        const lastAuthUser = (await this.getKeyValueStorage().getItem(this.getLastAuthUserKey())) ??\n            'username';\n        return lastAuthUser;\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(AuthTokenStorageKeys)(`${provider}`, identifier);\n};\nfunction getAuthStorageKeys(authKeys) {\n    const keys = Object.values({ ...authKeys });\n    return (prefix, identifier) => keys.reduce((acc, authKey) => ({\n        ...acc,\n        [authKey]: `${prefix}.${identifier}.${authKey}`,\n    }), {});\n}\n\nexport { DefaultTokenStore, createKeysForAuthStorage, getAuthStorageKeys };\n\n", "import { Hub } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, isTokenExpired, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass TokenOrchestrator {\n    constructor() {\n        this.waitForInflightOAuth = async () => { };\n    }\n    setAuthConfig(authConfig) {\n        this.authConfig = authConfig;\n    }\n    setTokenRefresher(tokenRefresher) {\n        this.tokenRefresher = tokenRefresher;\n    }\n    setAuthTokenStore(tokenStore) {\n        this.tokenStore = tokenStore;\n    }\n    setWaitForInflightOAuth(waitForInflightOAuth) {\n        this.waitForInflightOAuth = waitForInflightOAuth;\n    }\n    getTokenStore() {\n        if (!this.tokenStore) {\n            throw new AuthError({\n                name: 'EmptyTokenStoreException',\n                message: 'TokenStore not set',\n            });\n        }\n        return this.tokenStore;\n    }\n    getTokenRefresher() {\n        if (!this.tokenRefresher) {\n            throw new AuthError({\n                name: 'EmptyTokenRefresherException',\n                message: 'TokenRefresher not set',\n            });\n        }\n        return this.tokenRefresher;\n    }\n    async getTokens(options) {\n        let tokens;\n        try {\n            assertTokenProviderConfig(this.authConfig?.Cognito);\n        }\n        catch (_err) {\n            // Token provider not configured\n            return null;\n        }\n        await this.waitForInflightOAuth();\n        tokens = await this.getTokenStore().loadTokens();\n        const username = await this.getTokenStore().getLastAuthUser();\n        if (tokens === null) {\n            return null;\n        }\n        const idTokenExpired = !!tokens?.idToken &&\n            isTokenExpired({\n                expiresAt: (tokens.idToken?.payload?.exp ?? 0) * 1000,\n                clockDrift: tokens.clockDrift ?? 0,\n            });\n        const accessTokenExpired = isTokenExpired({\n            expiresAt: (tokens.accessToken?.payload?.exp ?? 0) * 1000,\n            clockDrift: tokens.clockDrift ?? 0,\n        });\n        if (options?.forceRefresh || idTokenExpired || accessTokenExpired) {\n            tokens = await this.refreshTokens({\n                tokens,\n                username,\n            });\n            if (tokens === null) {\n                return null;\n            }\n        }\n        return {\n            accessToken: tokens?.accessToken,\n            idToken: tokens?.idToken,\n            signInDetails: tokens?.signInDetails,\n        };\n    }\n    async refreshTokens({ tokens, username, }) {\n        try {\n            const newTokens = await this.getTokenRefresher()({\n                tokens,\n                authConfig: this.authConfig,\n                username,\n            });\n            await this.setTokens({ tokens: newTokens });\n            Hub.dispatch('auth', { event: 'tokenRefresh' }, 'Auth', AMPLIFY_SYMBOL);\n            return newTokens;\n        }\n        catch (err) {\n            return this.handleErrors(err);\n        }\n    }\n    handleErrors(err) {\n        assertServiceError(err);\n        if (err.message !== 'Network error') {\n            // TODO(v6): Check errors on client\n            this.clearTokens();\n        }\n        Hub.dispatch('auth', {\n            event: 'tokenRefresh_failure',\n            data: { error: err },\n        }, 'Auth', AMPLIFY_SYMBOL);\n        if (err.name.startsWith('NotAuthorizedException')) {\n            return null;\n        }\n        throw err;\n    }\n    async setTokens({ tokens }) {\n        return this.getTokenStore().storeTokens(tokens);\n    }\n    async clearTokens() {\n        return this.getTokenStore().clearTokens();\n    }\n    getDeviceMetadata(username) {\n        return this.getTokenStore().getDeviceMetadata(username);\n    }\n    clearDeviceMetadata(username) {\n        return this.getTokenStore().clearDeviceMetadata(username);\n    }\n}\n\nexport { TokenOrchestrator };\n\n", "import { defaultStorage } from '@aws-amplify/core';\nimport { refreshAuthTokens } from '../utils/refreshAuthTokens.mjs';\nimport { DefaultTokenStore } from './TokenStore.mjs';\nimport { TokenOrchestrator } from './TokenOrchestrator.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass CognitoUserPoolsTokenProvider {\n    constructor() {\n        this.authTokenStore = new DefaultTokenStore();\n        this.authTokenStore.setKeyValueStorage(defaultStorage);\n        this.tokenOrchestrator = new TokenOrchestrator();\n        this.tokenOrchestrator.setAuthTokenStore(this.authTokenStore);\n        this.tokenOrchestrator.setTokenRefresher(refreshAuthTokens);\n    }\n    getTokens({ forceRefresh } = { forceRefresh: false }) {\n        return this.tokenOrchestrator.getTokens({ forceRefresh });\n    }\n    setKeyValueStorage(keyValueStorage) {\n        this.authTokenStore.setKeyValueStorage(keyValueStorage);\n    }\n    setWaitForInflightOAuth(waitForInflightOAuth) {\n        this.tokenOrchestrator.setWaitForInflightOAuth(waitForInflightOAuth);\n    }\n    setAuthConfig(authConfig) {\n        this.authTokenStore.setAuthConfig(authConfig);\n        this.tokenOrchestrator.setAuthConfig(authConfig);\n    }\n}\n\nexport { CognitoUserPoolsTokenProvider };\n\n", "import { CognitoUserPoolsTokenProvider } from './CognitoUserPoolsTokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The default provider for the JWT access token and ID token issued from the configured Cognito user pool. It manages\n * the refresh and storage of the tokens. It stores the tokens in `window.localStorage` if available, and falls back to\n * in-memory storage if not.\n */\nconst cognitoUserPoolsTokenProvider = new CognitoUserPoolsTokenProvider();\nconst tokenOrchestrator = cognitoUserPoolsTokenProvider.tokenOrchestrator;\n\nexport { cognitoUserPoolsTokenProvider, tokenOrchestrator };\n\n", "import { decodeJWT, AmplifyError } from '@aws-amplify/core/internals/utils';\nimport { tokenOrchestrator } from './tokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nasync function cacheCognitoTokens(AuthenticationResult) {\n    if (AuthenticationResult.AccessToken) {\n        const accessToken = decodeJWT(AuthenticationResult.AccessToken);\n        const accessTokenIssuedAtInMillis = (accessToken.payload.iat || 0) * 1000;\n        const currentTime = new Date().getTime();\n        const clockDrift = accessTokenIssuedAtInMillis > 0\n            ? accessTokenIssuedAtInMillis - currentTime\n            : 0;\n        let idToken;\n        let refreshToken;\n        let deviceMetadata;\n        if (AuthenticationResult.RefreshToken) {\n            refreshToken = AuthenticationResult.RefreshToken;\n        }\n        if (AuthenticationResult.IdToken) {\n            idToken = decodeJWT(AuthenticationResult.IdToken);\n        }\n        if (AuthenticationResult?.NewDeviceMetadata) {\n            deviceMetadata = AuthenticationResult.NewDeviceMetadata;\n        }\n        const tokens = {\n            accessToken,\n            idToken,\n            refreshToken,\n            clockDrift,\n            deviceMetadata,\n            username: AuthenticationResult.username,\n        };\n        if (AuthenticationResult?.signInDetails) {\n            tokens.signInDetails = AuthenticationResult.signInDetails;\n        }\n        await tokenOrchestrator.setTokens({\n            tokens,\n        });\n    }\n    else {\n        // This would be a service error\n        throw new AmplifyError({\n            message: 'Invalid tokens',\n            name: 'InvalidTokens',\n            recoverySuggestion: 'Check Cognito UserPool settings',\n        });\n    }\n}\n\nexport { cacheCognitoTokens };\n\n", "import { Hub } from '@aws-amplify/core';\nimport { getCurrentUser } from '../apis/getCurrentUser.mjs';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { USER_UNAUTHENTICATED_EXCEPTION, UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION } from '../../../errors/constants.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst ERROR_MESSAGE = 'Unable to get user session following successful sign-in.';\nconst dispatchSignedInHubEvent = async () => {\n    try {\n        Hub.dispatch('auth', {\n            event: 'signedIn',\n            data: await getCurrentUser(),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    catch (error) {\n        if (error.name === USER_UNAUTHENTICATED_EXCEPTION) {\n            throw new AuthError({\n                name: UNEXPECTED_SIGN_IN_INTERRUPTION_EXCEPTION,\n                message: ERROR_MESSAGE,\n                recoverySuggestion: 'This most likely is due to auth tokens not being persisted. If you are using cookie store, please ensure cookies can be correctly set from your server.',\n            });\n        }\n        throw error;\n    }\n};\n\nexport { ERROR_MESSAGE, dispatchSignedInHubEvent };\n\n", "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { retryOnResourceNotFoundException, handleCustomAuthFlowWithoutSRP, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using a custom authentication flow without password\n *\n * @param input -  The SignInWithCustomAuthInput object\n * @returns AuthSignInResult\n * @throws service: {@link InitiateAuthException } - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws SignInWithCustomAuthOutput - Thrown when the token provider config is invalid.\n */\nasync function signInWithCustomAuth(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITHOUT_SRP',\n    };\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!password, AuthValidationErrorCode.CustomAuthSignInPassword);\n    try {\n        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleCustomAuthFlowWithoutSRP, [username, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: ChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: ChallengeName,\n            challengeParameters: ChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithCustomAuth };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { handleCustomSRPAuthFlow, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using a custom authentication flow with SRP\n *\n * @param input -  The SignInWithCustomSRPAuthInput object\n * @returns SignInWithCustomSRPAuthOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito\n * service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithCustomSRPAuth(input) {\n    const { username, password, options } = input;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'CUSTOM_WITH_SRP',\n    };\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await handleCustomSRPAuthFlow(username, password, metadata, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: ChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: ChallengeName,\n            challengeParameters: ChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithCustomSRPAuth };\n\n", "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { handleUserSRPAuthFlow, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in\n *\n * @param input - The SignInWithSRPInput object\n * @returns SignInWithSRPOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException } - Cognito service errors\n * thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithSRP(input) {\n    const { username, password } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_SRP_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = input.options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await handleUserSRPAuthFlow(username, password, clientMetaData, authConfig, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: ChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username: activeUsername,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: ChallengeName,\n            challengeParameters: ChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithSRP };\n\n", "import { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { retryOnResourceNotFoundException, handleUserPasswordAuthFlow, getActiveSignInUsername, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in using USER_PASSWORD_AUTH AuthFlowType\n *\n * @param input - The SignInWithUserPasswordInput object\n * @returns SignInWithUserPasswordOutput\n * @throws service: {@link InitiateAuthException } - Cognito service error thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signInWithUserPassword(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signInDetails = {\n        loginId: username,\n        authFlowType: 'USER_PASSWORD_AUTH',\n    };\n    assertTokenProviderConfig(authConfig);\n    const metadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignInUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignInPassword);\n    try {\n        const { ChallengeName, ChallengeParameters, AuthenticationResult, Session, } = await retryOnResourceNotFoundException(handleUserPasswordAuthFlow, [username, password, metadata, authConfig, tokenOrchestrator], username, tokenOrchestrator);\n        const activeUsername = getActiveSignInUsername(username);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username: activeUsername,\n            challengeName: ChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            await cacheCognitoTokens({\n                ...AuthenticationResult,\n                username: activeUsername,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            cleanActiveSignInState();\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: ChallengeName,\n            challengeParameters: ChallengeParameters,\n        });\n    }\n    catch (error) {\n        cleanActiveSignInState();\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { signInWithUserPassword };\n\n", "import { signInWithCustomAuth } from './signInWithCustomAuth.mjs';\nimport { signInWithCustomSRPAuth } from './signInWithCustomSRPAuth.mjs';\nimport { signInWithSRP } from './signInWithSRP.mjs';\nimport { signInWithUserPassword } from './signInWithUserPassword.mjs';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs a user in\n *\n * @param input -  The SignInInput object\n * @returns SignInOutput\n * @throws service: {@link InitiateAuthException }, {@link RespondToAuthChallengeException }\n *  - Cognito service errors thrown during the sign-in process.\n * @throws validation: {@link AuthValidationErrorCode  } - Validation errors thrown when either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signIn(input) {\n    const authFlowType = input.options?.authFlowType;\n    await assertUserNotAuthenticated();\n    switch (authFlowType) {\n        case 'USER_SRP_AUTH':\n            return signInWithSRP(input);\n        case 'USER_PASSWORD_AUTH':\n            return signInWithUserPassword(input);\n        case 'CUSTOM_WITHOUT_SRP':\n            return signInWithCustomAuth(input);\n        case 'CUSTOM_WITH_SRP':\n            return signInWithCustomSRPAuth(input);\n        default:\n            return signInWithSRP(input);\n    }\n}\n\nexport { signIn };\n\n", "import { AuthError } from '../../../errors/AuthError.mjs';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst initialAutoSignIn = async () => {\n    throw new AuthError({\n        name: AUTO_SIGN_IN_EXCEPTION,\n        message: 'The autoSignIn flow has not started, or has been cancelled/completed.',\n        recoverySuggestion: 'Please try to use the signIn API or log out before starting a new autoSignIn flow.',\n    });\n};\n/**\n * Signs a user in automatically after finishing the sign-up process.\n *\n * This API will automatically sign a user in if the autoSignIn flow has been completed in the following cases:\n * - User confirmed their account with a verification code sent to their phone or email (default option).\n * - User confirmed their account with a verification link sent to their phone or email. In order to\n * enable this option you need to go to the Amazon Cognito [console](https://aws.amazon.com/pm/cognito),\n * look for your userpool, then go to the `Messaging` tab and enable `link` mode inside the `Verification message` option.\n * Finally you need to define the `signUpVerificationMethod` in your `Auth` config.\n *\n * @example\n * ```typescript\n *  Amplify.configure({\n *    Auth: {\n *     Cognito: {\n *    ...cognitoConfig,\n *    signUpVerificationMethod: \"link\" // the default value is \"code\"\n *   }\n *\t}});\n * ```\n *\n * @throws AutoSignInException - Thrown when the autoSignIn flow has not started, or has been cancelled/completed.\n * @returns The signInOutput.\n *\n * @example\n * ```typescript\n *  // handleSignUp.ts\n * async function handleSignUp(\n *   username:string,\n *   password:string\n * ){\n *   try {\n *     const { nextStep } = await signUp({\n *       username,\n *       password,\n *       options: {\n *         userAttributes:{ email:'email@email.com'},\n *         autoSignIn: true // This enables the auto sign-in flow.\n *       },\n *     });\n *\n *     handleSignUpStep(nextStep);\n *\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // handleConfirmSignUp.ts\n * async function handleConfirmSignUp(username:string, confirmationCode:string) {\n *   try {\n *     const { nextStep } = await confirmSignUp({\n *       username,\n *       confirmationCode,\n *     });\n *\n *     handleSignUpStep(nextStep);\n *   } catch (error) {\n *     console.log(error);\n *   }\n * }\n *\n * // signUpUtils.ts\n * async function handleSignUpStep( step: SignUpOutput[\"nextStep\"]) {\n * switch (step.signUpStep) {\n *   case \"CONFIRM_SIGN_UP\":\n *\n *    // Redirect end-user to confirm-sign up screen.\n *\n *   case \"COMPLETE_AUTO_SIGN_IN\":\n *\t   const codeDeliveryDetails = step.codeDeliveryDetails;\n *     if (codeDeliveryDetails) {\n *      // Redirect user to confirm-sign-up with link screen.\n *     }\n *     const signInOutput = await autoSignIn();\n *   // handle sign-in steps\n * }\n *\n * ```\n */\nlet autoSignIn = initialAutoSignIn;\n/**\n * Sets the context of autoSignIn at run time.\n * @internal\n */\nfunction setAutoSignIn(callback) {\n    autoSignIn = callback;\n}\n/**\n * Resets the context\n *\n * @internal\n */\nfunction resetAutoSignIn() {\n    autoSignIn = initialAutoSignIn;\n}\n\nexport { autoSignIn, resetAutoSignIn, setAutoSignIn };\n\n", "import { HubInternal } from '@aws-amplify/core/internals/utils';\nimport { signIn } from '../apis/signIn.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { setAutoSignIn, resetAutoSignIn } from '../apis/autoSignIn.mjs';\nimport { AUTO_SIGN_IN_EXCEPTION } from '../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_AUTOSIGNIN_POLLING_MS = 3 * 60 * 1000;\nfunction handleCodeAutoSignIn(signInInput) {\n    const stopHubListener = HubInternal.listen('auth-internal', async ({ payload }) => {\n        switch (payload.event) {\n            case 'confirmSignUp': {\n                const response = payload.data;\n                if (response?.isSignUpComplete) {\n                    HubInternal.dispatch('auth-internal', {\n                        event: 'autoSignIn',\n                    });\n                    setAutoSignIn(autoSignInWithCode(signInInput));\n                    stopHubListener();\n                }\n            }\n        }\n    });\n    // This will stop the listener if confirmSignUp is not resolved.\n    const timeOutId = setTimeout(() => {\n        stopHubListener();\n        setAutoSignInStarted(false);\n        clearTimeout(timeOutId);\n        resetAutoSignIn();\n    }, MAX_AUTOSIGNIN_POLLING_MS);\n}\nfunction debounce(fun, delay) {\n    let timer;\n    return function (args) {\n        if (!timer) {\n            fun(...args);\n        }\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            timer = undefined;\n        }, delay);\n    };\n}\nfunction handleAutoSignInWithLink(signInInput, resolve, reject) {\n    const start = Date.now();\n    const autoSignInPollingIntervalId = setInterval(async () => {\n        const elapsedTime = Date.now() - start;\n        const maxTime = MAX_AUTOSIGNIN_POLLING_MS;\n        if (elapsedTime > maxTime) {\n            clearInterval(autoSignInPollingIntervalId);\n            setAutoSignInStarted(false);\n            reject(new AuthError({\n                name: AUTO_SIGN_IN_EXCEPTION,\n                message: 'The account was not confirmed on time.',\n                recoverySuggestion: 'Try to verify your account by clicking the link sent your email or phone and then login manually.',\n            }));\n            resetAutoSignIn();\n            return;\n        }\n        else {\n            try {\n                const signInOutput = await signIn(signInInput);\n                if (signInOutput.nextStep.signInStep !== 'CONFIRM_SIGN_UP') {\n                    resolve(signInOutput);\n                    clearInterval(autoSignInPollingIntervalId);\n                    setAutoSignInStarted(false);\n                    resetAutoSignIn();\n                    return;\n                }\n            }\n            catch (error) {\n                clearInterval(autoSignInPollingIntervalId);\n                setAutoSignInStarted(false);\n                reject(error);\n                resetAutoSignIn();\n            }\n        }\n    }, 5000);\n}\nconst debouncedAutoSignInWithLink = debounce(handleAutoSignInWithLink, 300);\nconst debouncedAutoSignWithCodeOrUserConfirmed = debounce(handleAutoSignInWithCodeOrUserConfirmed, 300);\nlet autoSignInStarted = false;\nlet usernameUsedForAutoSignIn;\nfunction setUsernameUsedForAutoSignIn(username) {\n    usernameUsedForAutoSignIn = username;\n}\nfunction isAutoSignInUserUsingConfirmSignUp(username) {\n    return usernameUsedForAutoSignIn === username;\n}\nfunction isAutoSignInStarted() {\n    return autoSignInStarted;\n}\nfunction setAutoSignInStarted(value) {\n    if (value === false) {\n        setUsernameUsedForAutoSignIn(undefined);\n    }\n    autoSignInStarted = value;\n}\nfunction isSignUpComplete(output) {\n    return !!output.UserConfirmed;\n}\nfunction autoSignInWhenUserIsConfirmedWithLink(signInInput) {\n    return async () => {\n        return new Promise(async (resolve, reject) => {\n            debouncedAutoSignInWithLink([signInInput, resolve, reject]);\n        });\n    };\n}\nasync function handleAutoSignInWithCodeOrUserConfirmed(signInInput, resolve, reject) {\n    try {\n        const output = await signIn(signInInput);\n        resolve(output);\n        resetAutoSignIn();\n    }\n    catch (error) {\n        reject(error);\n        resetAutoSignIn();\n    }\n}\nfunction autoSignInWithCode(signInInput) {\n    return async () => {\n        return new Promise(async (resolve, reject) => {\n            debouncedAutoSignWithCodeOrUserConfirmed([signInInput, resolve, reject]);\n        });\n    };\n}\nconst autoSignInUserConfirmed = autoSignInWithCode;\n\nexport { autoSignInUserConfirmed, autoSignInWhenUserIsConfirmedWithLink, handleCodeAutoSignIn, isAutoSignInStarted, isAutoSignInUserUsingConfirmSignUp, isSignUpComplete, setAutoSignInStarted, setUsernameUsedForAutoSignIn };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { signUp as signUp$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { toAttributeType } from '../utils/apiHelpers.mjs';\nimport { setUsernameUsedForAutoSignIn, setAutoSignInStarted, isSignUpComplete, isAutoSignInStarted, autoSignInUserConfirmed, handleCodeAutoSignIn, autoSignInWhenUserIsConfirmedWithLink } from '../utils/signUpHelpers.mjs';\nimport { setAutoSignIn } from './autoSignIn.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Creates a user\n *\n * @param input - The SignUpInput object\n * @returns SignUpOutput\n * @throws service: {@link SignUpException } - Cognito service errors thrown during the sign-up process.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username or password\n *  are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signUp(input) {\n    const { username, password, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const signUpVerificationMethod = authConfig?.signUpVerificationMethod ?? 'code';\n    const { clientMetadata, validationData, autoSignIn } = input.options ?? {};\n    assertTokenProviderConfig(authConfig);\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    assertValidationError(!!password, AuthValidationErrorCode.EmptySignUpPassword);\n    const signInServiceOptions = typeof autoSignIn !== 'boolean' ? autoSignIn : undefined;\n    const signInInput = {\n        username,\n        options: signInServiceOptions,\n    };\n    // if the authFlowType is 'CUSTOM_WITHOUT_SRP' then we don't include the password\n    if (signInServiceOptions?.authFlowType !== 'CUSTOM_WITHOUT_SRP') {\n        signInInput['password'] = password;\n    }\n    if (signInServiceOptions || autoSignIn === true) {\n        setUsernameUsedForAutoSignIn(username);\n        setAutoSignInStarted(true);\n    }\n    const clientOutput = await signUp$1({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SignUp),\n    }, {\n        Username: username,\n        Password: password,\n        UserAttributes: options?.userAttributes && toAttributeType(options?.userAttributes),\n        ClientMetadata: clientMetadata,\n        ValidationData: validationData && toAttributeType(validationData),\n        ClientId: authConfig.userPoolClientId,\n    });\n    const { UserSub, CodeDeliveryDetails } = clientOutput;\n    if (isSignUpComplete(clientOutput) && isAutoSignInStarted()) {\n        setAutoSignIn(autoSignInUserConfirmed(signInInput));\n        return {\n            isSignUpComplete: true,\n            nextStep: {\n                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n            },\n        };\n    }\n    else if (isSignUpComplete(clientOutput) && !isAutoSignInStarted()) {\n        return {\n            isSignUpComplete: true,\n            nextStep: {\n                signUpStep: 'DONE',\n            },\n        };\n    }\n    else if (!isSignUpComplete(clientOutput) &&\n        isAutoSignInStarted() &&\n        signUpVerificationMethod === 'code') {\n        handleCodeAutoSignIn(signInInput);\n    }\n    else if (!isSignUpComplete(clientOutput) &&\n        isAutoSignInStarted() &&\n        signUpVerificationMethod === 'link') {\n        setAutoSignIn(autoSignInWhenUserIsConfirmedWithLink(signInInput));\n        return {\n            isSignUpComplete: false,\n            nextStep: {\n                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                codeDeliveryDetails: {\n                    deliveryMedium: CodeDeliveryDetails?.DeliveryMedium,\n                    destination: CodeDeliveryDetails?.Destination,\n                    attributeName: CodeDeliveryDetails?.AttributeName,\n                },\n            },\n            userId: UserSub,\n        };\n    }\n    return {\n        isSignUpComplete: false,\n        nextStep: {\n            signUpStep: 'CONFIRM_SIGN_UP',\n            codeDeliveryDetails: {\n                deliveryMedium: CodeDeliveryDetails?.DeliveryMedium,\n                destination: CodeDeliveryDetails?.Destination,\n                attributeName: CodeDeliveryDetails?.AttributeName,\n            },\n        },\n        userId: UserSub,\n    };\n}\n\nexport { signUp };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { forgotPassword } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resets a user's password.\n *\n * @param input -  The ResetPasswordInput object.\n * @returns ResetPasswordOutput\n * @throws -{@link ForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n **/\nasync function resetPassword(input) {\n    const username = input.username;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyResetPasswordUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const res = await forgotPassword({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResetPassword),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    const codeDeliveryDetails = res.CodeDeliveryDetails;\n    return {\n        isPasswordReset: false,\n        nextStep: {\n            resetPasswordStep: 'CONFIRM_RESET_PASSWORD_WITH_CODE',\n            codeDeliveryDetails: {\n                deliveryMedium: codeDeliveryDetails?.DeliveryMedium,\n                destination: codeDeliveryDetails?.Destination,\n                attributeName: codeDeliveryDetails?.AttributeName,\n            },\n        },\n    };\n}\n\nexport { resetPassword };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { confirmForgotPassword } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms the new password and verification code to reset the password.\n *\n * @param input -  The ConfirmResetPasswordInput object.\n * @throws -{@link ConfirmForgotPasswordException }\n * Thrown due to an invalid confirmation code or password.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code, password or username.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmResetPassword(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId } = authConfig;\n    const { username, newPassword } = input;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmResetPasswordUsername);\n    assertValidationError(!!newPassword, AuthValidationErrorCode.EmptyConfirmResetPasswordNewPassword);\n    const code = input.confirmationCode;\n    assertValidationError(!!code, AuthValidationErrorCode.EmptyConfirmResetPasswordConfirmationCode);\n    const metadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    await confirmForgotPassword({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmResetPassword),\n    }, {\n        Username: username,\n        ConfirmationCode: code,\n        Password: newPassword,\n        ClientMetadata: metadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData: UserContextData,\n    });\n}\n\nexport { confirmResetPassword };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { resendConfirmationCode } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resend the confirmation code while signing up\n *\n * @param input -  The ResendSignUpCodeInput object\n * @returns ResendSignUpCodeOutput\n * @throws service: {@link ResendConfirmationException } - Cognito service errors thrown when resending the code.\n * @throws validation: {@link AuthValidationErrorCode } - Validation errors thrown either username are not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function resendSignUpCode(input) {\n    const username = input.username;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptySignUpUsername);\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolClientId, userPoolId } = authConfig;\n    const clientMetadata = input.options?.clientMetadata;\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    const { CodeDeliveryDetails } = await resendConfirmationCode({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ResendSignUpCode),\n    }, {\n        Username: username,\n        ClientMetadata: clientMetadata,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName\n            ? AttributeName\n            : undefined,\n    };\n}\n\nexport { resendSignUpCode };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction, HubInternal } from '@aws-amplify/core/internals/utils';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { confirmSignUp as confirmSignUp$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { isAutoSignInStarted, isAutoSignInUserUsingConfirmSignUp, setAutoSignInStarted } from '../utils/signUpHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { getUserContextData } from '../utils/userContextData.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a new user account.\n *\n * @param input -  The ConfirmSignUpInput object.\n * @returns ConfirmSignUpOutput\n * @throws -{@link ConfirmSignUpException }\n * Thrown due to an invalid confirmation code.\n * @throws -{@link AuthValidationErrorCode }\n * Thrown due to an empty confirmation code\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignUp(input) {\n    const { username, confirmationCode, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { userPoolId, userPoolClientId } = authConfig;\n    const clientMetadata = options?.clientMetadata;\n    assertValidationError(!!username, AuthValidationErrorCode.EmptyConfirmSignUpUsername);\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmSignUpCode);\n    const UserContextData = getUserContextData({\n        username,\n        userPoolId,\n        userPoolClientId,\n    });\n    await confirmSignUp$1({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmSignUp),\n    }, {\n        Username: username,\n        ConfirmationCode: confirmationCode,\n        ClientMetadata: clientMetadata,\n        ForceAliasCreation: options?.forceAliasCreation,\n        ClientId: authConfig.userPoolClientId,\n        UserContextData,\n    });\n    return new Promise((resolve, reject) => {\n        try {\n            const signUpOut = {\n                isSignUpComplete: true,\n                nextStep: {\n                    signUpStep: 'DONE',\n                },\n            };\n            if (!isAutoSignInStarted() ||\n                !isAutoSignInUserUsingConfirmSignUp(username)) {\n                return resolve(signUpOut);\n            }\n            const stopListener = HubInternal.listen('auth-internal', ({ payload }) => {\n                switch (payload.event) {\n                    case 'autoSignIn':\n                        resolve({\n                            isSignUpComplete: true,\n                            nextStep: {\n                                signUpStep: 'COMPLETE_AUTO_SIGN_IN',\n                            },\n                        });\n                        setAutoSignInStarted(false);\n                        stopListener();\n                }\n            });\n            HubInternal.dispatch('auth-internal', {\n                event: 'confirmSignUp',\n                data: signUpOut,\n            });\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n\nexport { confirmSignUp };\n\n", "import { signInStore, setActiveSignInState, cleanActiveSignInState } from '../utils/signInStore.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { handleChallengeName, getNewDeviceMetatada, getSignInResult, getSignInResultFromError } from '../utils/signInHelpers.mjs';\nimport { assertServiceError } from '../../../errors/utils/assertServiceError.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { AuthErrorCodes } from '../../../common/AuthErrorStrings.mjs';\nimport { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\nimport { cacheCognitoTokens } from '../tokenProvider/cacheTokens.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../utils/dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Continues or completes the sign in process when required by the initial call to `signIn`.\n *\n * @param input -  The ConfirmSignInInput object\n * @returns ConfirmSignInOutput\n * @throws  -{@link VerifySoftwareTokenException }:\n * Thrown due to an invalid MFA token.\n * @throws  -{@link RespondToAuthChallengeException }:\n * Thrown due to an invalid auth challenge response.\n * @throws  -{@link AssociateSoftwareTokenException}:\n * Thrown due to a service error during the MFA setup process.\n * @throws  -{@link AuthValidationErrorCode }:\n * Thrown when `challengeResponse` is not defined.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmSignIn(input) {\n    const { challengeResponse, options } = input;\n    const { username, challengeName, signInSession, signInDetails } = signInStore.getState();\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const clientMetaData = options?.clientMetadata;\n    assertValidationError(!!challengeResponse, AuthValidationErrorCode.EmptyChallengeResponse);\n    if (!username || !challengeName || !signInSession)\n        // TODO: remove this error message for production apps\n        throw new AuthError({\n            name: AuthErrorCodes.SignInException,\n            message: `\n\t\t\tAn error occurred during the sign in process. \n\t\t\t\n\t\t\tThis most likely occurred due to:\n\t\t\t1. signIn was not called before confirmSignIn.\n\t\t\t2. signIn threw an exception.\n\t\t\t3. page was refreshed during the sign in flow.\n\t\t\t`,\n            recoverySuggestion: 'Make sure a successful call to signIn is made before calling confirmSignIn' +\n                'and that the page is not refreshed until the sign in process is done.',\n        });\n    try {\n        const { Session, ChallengeName, AuthenticationResult, ChallengeParameters, } = await handleChallengeName(username, challengeName, signInSession, challengeResponse, authConfig, tokenOrchestrator, clientMetaData, options);\n        // sets up local state used during the sign-in process\n        setActiveSignInState({\n            signInSession: Session,\n            username,\n            challengeName: ChallengeName,\n            signInDetails,\n        });\n        if (AuthenticationResult) {\n            cleanActiveSignInState();\n            await cacheCognitoTokens({\n                username,\n                ...AuthenticationResult,\n                NewDeviceMetadata: await getNewDeviceMetatada(authConfig.userPoolId, AuthenticationResult.NewDeviceMetadata, AuthenticationResult.AccessToken),\n                signInDetails,\n            });\n            await dispatchSignedInHubEvent();\n            return {\n                isSignedIn: true,\n                nextStep: { signInStep: 'DONE' },\n            };\n        }\n        return getSignInResult({\n            challengeName: ChallengeName,\n            challengeParameters: ChallengeParameters,\n        });\n    }\n    catch (error) {\n        assertServiceError(error);\n        const result = getSignInResultFromError(error.name);\n        if (result)\n            return result;\n        throw error;\n    }\n}\n\nexport { confirmSignIn };\n\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { AuthValidationErrorCode } from '../../../errors/types/validation.mjs';\nimport { assertValidationError } from '../../../errors/utils/assertValidationError.mjs';\nimport { verifyUserAttribute } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Confirms a user attribute with the confirmation code.\n *\n * @param input -  The ConfirmUserAttributeInput object\n * @throws  -{@link AuthValidationErrorCode } -\n * Thrown when `confirmationCode` is not defined.\n * @throws  -{@link VerifyUserAttributeException } - Thrown due to an invalid confirmation code or attribute.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function confirmUserAttribute(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { confirmationCode, userAttributeKey } = input;\n    assertValidationError(!!confirmationCode, AuthValidationErrorCode.EmptyConfirmUserAttributeCode);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    await verifyUserAttribute({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.ConfirmUserAttribute),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        AttributeName: userAttributeKey,\n        Code: confirmationCode,\n    });\n}\n\nexport { confirmUserAttribute };\n\n", "import { OAuthStorageKeys } from './types.mjs';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\nimport { assertTokenProviderConfig } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst V5_HOSTED_UI_KEY = 'amplify-signin-with-hostedUI';\nconst name = 'CognitoIdentityServiceProvider';\nclass DefaultOAuthStore {\n    constructor(keyValueStorage) {\n        this.keyValueStorage = keyValueStorage;\n    }\n    async clearOAuthInflightData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await Promise.all([\n            this.keyValueStorage.removeItem(authKeys.inflightOAuth),\n            this.keyValueStorage.removeItem(authKeys.oauthPKCE),\n            this.keyValueStorage.removeItem(authKeys.oauthState),\n        ]);\n    }\n    async clearOAuthData() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        await this.clearOAuthInflightData();\n        await this.keyValueStorage.removeItem(V5_HOSTED_UI_KEY); // remove in case a customer migrated an App from v5 to v6\n        return this.keyValueStorage.removeItem(authKeys.oauthSignIn);\n    }\n    loadOAuthState() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthState);\n    }\n    storeOAuthState(state) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthState, state);\n    }\n    loadPKCE() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.getItem(authKeys.oauthPKCE);\n    }\n    storePKCE(pkce) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return this.keyValueStorage.setItem(authKeys.oauthPKCE, pkce);\n    }\n    setAuthConfig(authConfigParam) {\n        this.cognitoConfig = authConfigParam;\n    }\n    async loadOAuthInFlight() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return ((await this.keyValueStorage.getItem(authKeys.inflightOAuth)) === 'true');\n    }\n    async storeOAuthInFlight(inflight) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return await this.keyValueStorage.setItem(authKeys.inflightOAuth, `${inflight}`);\n    }\n    async loadOAuthSignIn() {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        const isLegacyHostedUISignIn = await this.keyValueStorage.getItem(V5_HOSTED_UI_KEY);\n        const [isOAuthSignIn, preferPrivateSession] = (await this.keyValueStorage.getItem(authKeys.oauthSignIn))?.split(',') ??\n            [];\n        return {\n            isOAuthSignIn: isOAuthSignIn === 'true' || isLegacyHostedUISignIn === 'true',\n            preferPrivateSession: preferPrivateSession === 'true',\n        };\n    }\n    async storeOAuthSignIn(oauthSignIn, preferPrivateSession = false) {\n        assertTokenProviderConfig(this.cognitoConfig);\n        const authKeys = createKeysForAuthStorage(name, this.cognitoConfig.userPoolClientId);\n        return await this.keyValueStorage.setItem(authKeys.oauthSignIn, `${oauthSignIn},${preferPrivateSession}`);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(OAuthStorageKeys)(provider, identifier);\n};\n\nexport { DefaultOAuthStore };\n\n", "import { defaultStorage } from '@aws-amplify/core';\nimport { DefaultOAuthStore } from '../signInWithRedirectStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthStore = new DefaultOAuthStore(defaultStorage);\n\nexport { oAuthStore };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar AuthErrorTypes;\n(function (AuthErrorTypes) {\n    AuthErrorTypes[\"NoConfig\"] = \"noConfig\";\n    AuthErrorTypes[\"MissingAuthConfig\"] = \"missingAuthConfig\";\n    AuthErrorTypes[\"EmptyUsername\"] = \"emptyUsername\";\n    AuthErrorTypes[\"InvalidUsername\"] = \"invalidUsername\";\n    AuthErrorTypes[\"EmptyPassword\"] = \"emptyPassword\";\n    AuthErrorTypes[\"EmptyCode\"] = \"emptyCode\";\n    AuthErrorTypes[\"SignUpError\"] = \"signUpError\";\n    AuthErrorTypes[\"NoMFA\"] = \"noMFA\";\n    AuthErrorTypes[\"InvalidMFA\"] = \"invalidMFA\";\n    AuthErrorTypes[\"EmptyChallengeResponse\"] = \"emptyChallengeResponse\";\n    AuthErrorTypes[\"NoUserSession\"] = \"noUserSession\";\n    AuthErrorTypes[\"Default\"] = \"default\";\n    AuthErrorTypes[\"DeviceConfig\"] = \"deviceConfig\";\n    AuthErrorTypes[\"NetworkError\"] = \"networkError\";\n    AuthErrorTypes[\"AutoSignInError\"] = \"autoSignInError\";\n    AuthErrorTypes[\"OAuthSignInError\"] = \"oauthSignInError\";\n})(AuthErrorTypes || (AuthErrorTypes = {}));\n\nexport { AuthErrorTypes };\n\n", "import { AuthError } from '../../../../errors/AuthError.mjs';\nimport { AuthErrorTypes } from '../../../../types/Auth.mjs';\nimport { oAuthStore } from './oAuthStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst flowCancelledMessage = '`signInWithRedirect` has been canceled.';\nconst validationFailedMessage = 'An error occurred while validating the state.';\nconst validationRecoverySuggestion = 'Try to initiate an OAuth flow from Amplify';\nconst validateState = async (state) => {\n    const savedState = await oAuthStore.loadOAuthState();\n    // This is because savedState only exists if the flow was initiated by Amplify\n    const validatedState = state === savedState ? savedState : undefined;\n    if (!validatedState) {\n        throw new AuthError({\n            name: AuthErrorTypes.OAuthSignInError,\n            message: state === null ? flowCancelledMessage : validationFailedMessage,\n            recoverySuggestion: state === null ? undefined : validationRecoverySuggestion,\n        });\n    }\n    return validatedState;\n};\n\nexport { flowCancelledMessage, validateState, validationFailedMessage, validationRecoverySuggestion };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst inflightPromises = [];\nconst addInflightPromise = (resolver) => {\n    inflightPromises.push(resolver);\n};\nconst resolveAndClearInflightPromises = () => {\n    while (inflightPromises.length) {\n        inflightPromises.pop()?.();\n    }\n};\n\nexport { addInflightPromise, resolveAndClearInflightPromises };\n\n", "import { ConsoleLogger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('AuthError');\nclass AuthError extends Error {\n    constructor(type) {\n        const { message, log } = authErrorMessages[type];\n        super(message);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = AuthError;\n        Object.setPrototypeOf(this, AuthError.prototype);\n        this.name = 'AuthError';\n        this.log = log || message;\n        logger.error(this.log);\n    }\n}\nclass NoUserPoolError extends AuthError {\n    constructor(type) {\n        super(type);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(this, NoUserPoolError.prototype);\n        this.name = 'NoUserPoolError';\n    }\n}\nconst authErrorMessages = {\n    oauthSignInError: {\n        message: AuthErrorStrings.OAUTH_ERROR,\n        log: 'Make sure Cognito Hosted UI has been configured correctly',\n    },\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly.\n            This error is typically caused by one of the following scenarios:\n\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\n            \n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\n\t\t\t\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\n        `,\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: `\n            Error: Amplify has not been configured correctly. \n            The configuration object is missing required auth properties.\n            This error is typically caused by one of the following scenarios:\n\n            1. Did you run \\`amplify push\\` after adding auth via \\`amplify add auth\\`?\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\n\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\n        `,\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n\nexport { AuthError, NoUserPoolError, authErrorMessages };\n\n", "import { authErrorMessages } from '../../../../Errors.mjs';\nimport { AuthErrorCodes } from '../../../../common/AuthErrorStrings.mjs';\nimport { AuthError } from '../../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst createOAuthError = (message, recoverySuggestion) => new AuthError({\n    message: message ?? 'An error has occurred during the oauth process.',\n    name: AuthErrorCodes.OAuthSignInError,\n    recoverySuggestion: recoverySuggestion ?? authErrorMessages.oauthSignInError.log,\n});\n\nexport { createOAuthError };\n\n", "import { AmplifyUrl, USER_AGENT_HEADER, urlSafeDecode, AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { decodeJWT, Hub } from '@aws-amplify/core';\nimport { validateState } from './validateState.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\nimport { cacheCognitoTokens } from '../../tokenProvider/cacheTokens.mjs';\nimport { createOAuthError } from './createOAuthError.mjs';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport { cognitoUserPoolsTokenProvider } from '../../tokenProvider/tokenProvider.mjs';\nimport { dispatchSignedInHubEvent } from '../dispatchSignedInHubEvent.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, responseType, domain, preferPrivateSession, }) => {\n    const urlParams = new AmplifyUrl(currentUrl);\n    const error = urlParams.searchParams.get('error');\n    const errorMessage = urlParams.searchParams.get('error_description');\n    if (error) {\n        throw createOAuthError(errorMessage ?? error);\n    }\n    if (responseType === 'code') {\n        return handleCodeFlow({\n            currentUrl,\n            userAgentValue,\n            clientId,\n            redirectUri,\n            domain,\n            preferPrivateSession,\n        });\n    }\n    return handleImplicitFlow({\n        currentUrl,\n        redirectUri,\n        preferPrivateSession,\n    });\n};\nconst handleCodeFlow = async ({ currentUrl, userAgentValue, clientId, redirectUri, domain, preferPrivateSession, }) => {\n    /* Convert URL into an object with parameters as keys\n{ redirect_uri: 'http://localhost:3000/', response_type: 'code', ...} */\n    const url = new AmplifyUrl(currentUrl);\n    const code = url.searchParams.get('code');\n    const state = url.searchParams.get('state');\n    // if `code` or `state` is not presented in the redirect url, most likely\n    // that the end user cancelled the inflight oauth flow by:\n    // 1. clicking the back button of browser\n    // 2. closing the provider hosted UI page and coming back to the app\n    if (!code || !state) {\n        throw createOAuthError('User cancelled OAuth flow.');\n    }\n    // may throw error is being caught in attemptCompleteOAuthFlow.ts\n    const validatedState = await validateState(state);\n    const oAuthTokenEndpoint = 'https://' + domain + '/oauth2/token';\n    // TODO(v6): check hub events\n    // dispatchAuthEvent(\n    // \t'codeFlow',\n    // \t{},\n    // \t`Retrieving tokens from ${oAuthTokenEndpoint}`\n    // );\n    const codeVerifier = await oAuthStore.loadPKCE();\n    const oAuthTokenBody = {\n        grant_type: 'authorization_code',\n        code,\n        client_id: clientId,\n        redirect_uri: redirectUri,\n        ...(codeVerifier ? { code_verifier: codeVerifier } : {}),\n    };\n    const body = Object.entries(oAuthTokenBody)\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    const { access_token, refresh_token, id_token, error, error_message, token_type, expires_in, } = await (await fetch(oAuthTokenEndpoint, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            [USER_AGENT_HEADER]: userAgentValue,\n        },\n        body,\n    })).json();\n    if (error) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError(error_message ?? error);\n    }\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        RefreshToken: refresh_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst handleImplicitFlow = async ({ currentUrl, redirectUri, preferPrivateSession, }) => {\n    // hash is `null` if `#` doesn't exist on URL\n    const url = new AmplifyUrl(currentUrl);\n    const { id_token, access_token, state, token_type, expires_in, error_description, error, } = (url.hash ?? '#')\n        .substring(1) // Remove # from returned code\n        .split('&')\n        .map(pairings => pairings.split('='))\n        .reduce((accum, [k, v]) => ({ ...accum, [k]: v }), {\n        id_token: undefined,\n        access_token: undefined,\n        state: undefined,\n        token_type: undefined,\n        expires_in: undefined,\n        error_description: undefined,\n        error: undefined,\n    });\n    if (error) {\n        throw createOAuthError(error_description ?? error);\n    }\n    if (!access_token) {\n        // error is being caught in attemptCompleteOAuthFlow.ts\n        throw createOAuthError('No access token returned from OAuth flow.');\n    }\n    const validatedState = await validateState(state);\n    const username = (access_token && decodeJWT(access_token).payload.username) ?? 'username';\n    await cacheCognitoTokens({\n        username,\n        AccessToken: access_token,\n        IdToken: id_token,\n        TokenType: token_type,\n        ExpiresIn: expires_in,\n    });\n    return completeFlow({\n        redirectUri,\n        state: validatedState,\n        preferPrivateSession,\n    });\n};\nconst completeFlow = async ({ redirectUri, state, preferPrivateSession, }) => {\n    await oAuthStore.clearOAuthData();\n    await oAuthStore.storeOAuthSignIn(true, preferPrivateSession);\n    // this should be called before any call that involves `fetchAuthSession`\n    // e.g. `getCurrentUser()` below, so it allows every inflight async calls to\n    //  `fetchAuthSession` can be resolved\n    resolveAndClearInflightPromises();\n    // when the oauth flow is completed, there should be nothing to block the async calls\n    // that involves fetchAuthSession in the `TokenOrchestrator`\n    cognitoUserPoolsTokenProvider.setWaitForInflightOAuth(async () => { });\n    if (isCustomState(state)) {\n        Hub.dispatch('auth', {\n            event: 'customOAuthState',\n            data: urlSafeDecode(getCustomState(state)),\n        }, 'Auth', AMPLIFY_SYMBOL);\n    }\n    Hub.dispatch('auth', { event: 'signInWithRedirect' }, 'Auth', AMPLIFY_SYMBOL);\n    await dispatchSignedInHubEvent();\n    clearHistory(redirectUri);\n};\nconst isCustomState = (state) => {\n    return /-/.test(state);\n};\nconst getCustomState = (state) => {\n    return state.split('-').splice(1).join('-');\n};\nconst clearHistory = (redirectUri) => {\n    if (typeof window !== 'undefined' && typeof window.history !== 'undefined') {\n        window.history.replaceState(window.history.state, '', redirectUri);\n    }\n};\n\nexport { completeOAuthFlow };\n\n", "import { invalidOriginException, invalidRedirectException } from '../../../../errors/constants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/** @internal */\nfunction getRedirectUrl(redirects) {\n    const redirectUrlFromTheSameOrigin = redirects?.find(isSameOriginAndPathName) ??\n        redirects?.find(isTheSameDomain);\n    const redirectUrlFromDifferentOrigin = redirects?.find(isHttps) ?? redirects?.find(isHttp);\n    if (redirectUrlFromTheSameOrigin) {\n        return redirectUrlFromTheSameOrigin;\n    }\n    else if (redirectUrlFromDifferentOrigin) {\n        throw invalidOriginException;\n    }\n    throw invalidRedirectException;\n}\n// origin + pathname => https://example.com/app\nconst isSameOriginAndPathName = (redirect) => redirect.startsWith(String(window.location.origin + window.location.pathname ?? '/'));\n// domain => outlook.live.com, github.com\nconst isTheSameDomain = (redirect) => redirect.includes(String(window.location.hostname));\nconst isHttp = (redirect) => redirect.startsWith('http://');\nconst isHttps = (redirect) => redirect.startsWith('https://');\n\nexport { getRedirectUrl };\n\n", "import { Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { resolveAndClearInflightPromises } from './inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleFailure = async (error) => {\n    resolveAndClearInflightPromises();\n    await oAuthStore.clearOAuthInflightData();\n    Hub.dispatch('auth', { event: 'signInWithRedirect_failure', data: { error } }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nexport { handleFailure };\n\n", "import { assertTokenProviderConfig, assertOAuthConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { oAuthStore } from './oAuthStore.mjs';\nimport { completeOAuthFlow } from './completeOAuthFlow.mjs';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\nimport { handleFailure } from './handleFailure.mjs';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport '@aws-amplify/core';\nimport { cognitoUserPoolsTokenProvider } from '../../tokenProvider/tokenProvider.mjs';\nimport { addInflightPromise } from './inflightPromise.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst attemptCompleteOAuthFlow = async (authConfig) => {\n    try {\n        assertTokenProviderConfig(authConfig);\n        assertOAuthConfig(authConfig);\n        oAuthStore.setAuthConfig(authConfig);\n    }\n    catch (_) {\n        // no-op\n        // This should not happen as Amplify singleton checks the oauth config key\n        // unless the oauth config object doesn't contain required properties\n        return;\n    }\n    // No inflight OAuth\n    if (!(await oAuthStore.loadOAuthInFlight())) {\n        return;\n    }\n    // when there is valid oauth config and there is an inflight oauth flow, try\n    // to block async calls that require fetching tokens before the oauth flow completes\n    // e.g. getCurrentUser, fetchAuthSession etc.\n    const asyncGetSessionBlocker = new Promise((resolve, _) => {\n        addInflightPromise(resolve);\n    });\n    cognitoUserPoolsTokenProvider.setWaitForInflightOAuth(() => asyncGetSessionBlocker);\n    try {\n        const currentUrl = window.location.href;\n        const { loginWith, userPoolClientId } = authConfig;\n        const { domain, redirectSignIn, responseType } = loginWith.oauth;\n        const redirectUri = getRedirectUrl(redirectSignIn);\n        await completeOAuthFlow({\n            currentUrl,\n            clientId: userPoolClientId,\n            domain,\n            redirectUri,\n            responseType,\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n        });\n    }\n    catch (err) {\n        await handleFailure(err);\n    }\n};\n\nexport { attemptCompleteOAuthFlow };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { isBrowser, ADD_OAUTH_LISTENER } from '@aws-amplify/core/internals/utils';\nimport { attemptCompleteOAuthFlow } from './attemptCompleteOAuthFlow.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// attach the side effect for handling the completion of an inflight oauth flow\n// this side effect works only on Web\nisBrowser() &&\n    (() => {\n        // add the listener to the singleton for triggering\n        Amplify[ADD_OAUTH_LISTENER](attemptCompleteOAuthFlow);\n    })();\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst cognitoHostedUIIdentityProviderMap = {\n    Google: 'Google',\n    Facebook: 'Facebook',\n    Amazon: 'LoginWithAmazon',\n    Apple: 'SignInWithApple',\n};\n\nexport { cognitoHostedUIIdentityProviderMap };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst openAuthSession = async (url) => {\n    if (!window?.location) {\n        return;\n    }\n    // enforce HTTPS\n    window.location.href = url.replace('http://', 'https://');\n};\n\nexport { openAuthSession };\n\n", "import { Sha256 } from '@aws-crypto/sha256-js';\nimport { getCrypto, base64Encoder } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst CODE_VERIFIER_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n/**\n *\n * @param length Desired length of the code verifier.\n *\n * **NOTE:** According to the [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.1)\n * A code verifier must be with a length >= 43 and <= 128.\n *\n * @returns An object that contains the generated `codeVerifier` and a method\n * `toCodeChallenge` to generate the code challenge from the `codeVerifier`\n * following the spec of [RFC 7636](https://datatracker.ietf.org/doc/html/rfc7636#section-4.2).\n */\nconst generateCodeVerifier = (length) => {\n    const randomBytes = new Uint8Array(length);\n    getCrypto().getRandomValues(randomBytes);\n    let value = '';\n    let codeChallenge;\n    for (let byte of randomBytes) {\n        value += CODE_VERIFIER_CHARSET.charAt(byte % CODE_VERIFIER_CHARSET.length);\n    }\n    return {\n        value,\n        method: 'S256',\n        toCodeChallenge() {\n            if (codeChallenge) {\n                return codeChallenge;\n            }\n            codeChallenge = generateCodeChallenge(value);\n            return codeChallenge;\n        },\n    };\n};\nfunction generateCodeChallenge(codeVerifier) {\n    const awsCryptoHash = new Sha256();\n    awsCryptoHash.update(codeVerifier);\n    const codeChallenge = removePaddingChar(base64Encoder.convert(awsCryptoHash.digestSync(), { urlSafe: true }));\n    return codeChallenge;\n}\nfunction removePaddingChar(base64Encoded) {\n    return base64Encoded.replace(/=/g, '');\n}\n\nexport { generateCodeVerifier };\n\n", "import { generateRandomString } from '@aws-amplify/core/internals/utils';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst generateState = () => {\n    return generateRandomString(32);\n};\n\nexport { generateState };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, urlSafeEncode, AuthAction } from '@aws-amplify/core/internals/utils';\nimport '../utils/oauth/enableOAuthListener.mjs';\nimport { cognitoHostedUIIdentityProviderMap } from '../types/models.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport { openAuthSession } from '../../../utils/openAuthSession.mjs';\nimport { assertUserNotAuthenticated } from '../utils/signInHelpers.mjs';\nimport { generateCodeVerifier } from '../utils/oauth/generateCodeVerifier.mjs';\nimport { generateState } from '../utils/oauth/generateState.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport '../tokenProvider/tokenProvider.mjs';\nimport { getRedirectUrl } from '../utils/oauth/getRedirectUrl.mjs';\nimport { handleFailure } from '../utils/oauth/handleFailure.mjs';\nimport { completeOAuthFlow } from '../utils/oauth/completeOAuthFlow.mjs';\nimport { oAuthStore } from '../utils/oauth/oAuthStore.mjs';\nimport { createOAuthError } from '../utils/oauth/createOAuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Signs in a user with OAuth. Redirects the application to an Identity Provider.\n *\n * @param input - The SignInWithRedirectInput object, if empty it will redirect to Cognito HostedUI\n *\n * @throws AuthTokenConfigException - Thrown when the user pool config is invalid.\n * @throws OAuthNotConfigureException - Thrown when the oauth config is invalid.\n */\nasync function signInWithRedirect(input) {\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    assertOAuthConfig(authConfig);\n    oAuthStore.setAuthConfig(authConfig);\n    await assertUserNotAuthenticated();\n    let provider = 'COGNITO'; // Default\n    if (typeof input?.provider === 'string') {\n        provider = cognitoHostedUIIdentityProviderMap[input.provider];\n    }\n    else if (input?.provider?.custom) {\n        provider = input.provider.custom;\n    }\n    return oauthSignIn({\n        oauthConfig: authConfig.loginWith.oauth,\n        clientId: authConfig.userPoolClientId,\n        provider,\n        customState: input?.customState,\n        preferPrivateSession: input?.options?.preferPrivateSession,\n    });\n}\nconst oauthSignIn = async ({ oauthConfig, provider, clientId, customState, preferPrivateSession, }) => {\n    const { domain, redirectSignIn, responseType, scopes } = oauthConfig;\n    const randomState = generateState();\n    /* encodeURIComponent is not URL safe, use urlSafeEncode instead. Cognito\n    single-encodes/decodes url on first sign in and double-encodes/decodes url\n    when user already signed in. Using encodeURIComponent, Base32, Base64 add\n    characters % or = which on further encoding becomes unsafe. '=' create issue\n    for parsing query params.\n    Refer: https://github.com/aws-amplify/amplify-js/issues/5218 */\n    const state = customState\n        ? `${randomState}-${urlSafeEncode(customState)}`\n        : randomState;\n    const { value, method, toCodeChallenge } = generateCodeVerifier(128);\n    const redirectUri = getRedirectUrl(oauthConfig.redirectSignIn);\n    oAuthStore.storeOAuthInFlight(true);\n    oAuthStore.storeOAuthState(state);\n    oAuthStore.storePKCE(value);\n    const queryString = Object.entries({\n        redirect_uri: redirectUri,\n        response_type: responseType,\n        client_id: clientId,\n        identity_provider: provider,\n        scope: scopes.join(' '),\n        state,\n        ...(responseType === 'code' && {\n            code_challenge: toCodeChallenge(),\n            code_challenge_method: method,\n        }),\n    })\n        .map(([k, v]) => `${encodeURIComponent(k)}=${encodeURIComponent(v)}`)\n        .join('&');\n    // TODO(v6): use URL object instead\n    const oAuthUrl = `https://${domain}/oauth2/authorize?${queryString}`;\n    // the following is effective only in react-native as openAuthSession resolves only in react-native\n    const { type, error, url } = (await openAuthSession(oAuthUrl)) ??\n        {};\n    try {\n        if (type === 'error') {\n            throw createOAuthError(String(error));\n        }\n        if (type === 'success' && url) {\n            await completeOAuthFlow({\n                currentUrl: url,\n                clientId,\n                domain,\n                redirectUri,\n                responseType,\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignInWithRedirect),\n                preferPrivateSession,\n            });\n        }\n    }\n    catch (error) {\n        await handleFailure(error);\n        // rethrow the error so it can be caught by `await signInWithRedirect()` in react-native\n        throw error;\n    }\n};\n\nexport { signInWithRedirect };\n\n", "import { assertTokenProviderConfig, fetchAuthSession, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUser } from '../../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokens } from '../../utils/types.mjs';\nimport { toAuthUserAttribute } from '../../utils/apiHelpers.mjs';\nimport { getAuthUserAgentValue } from '../../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst fetchUserAttributes = async (amplify) => {\n    const authConfig = amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(authConfig);\n    const { tokens } = await fetchAuthSession(amplify, {\n        forceRefresh: false,\n    });\n    assertAuthTokens(tokens);\n    const { UserAttributes } = await getUser({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.FetchUserAttributes),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n    });\n    return toAuthUserAttribute(UserAttributes);\n};\n\nexport { fetchUserAttributes };\n\n", "import { Amplify } from '@aws-amplify/core';\nimport { fetchUserAttributes as fetchUserAttributes$1 } from './internal/fetchUserAttributes.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Fetches the current user attributes while authenticated.\n *\n * @throws - {@link GetUserException} - Cognito service errors thrown when the service is not able to get the user.\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst fetchUserAttributes = () => {\n    return fetchUserAttributes$1(Amplify);\n};\n\nexport { fetchUserAttributes };\n\n", "import { clearCredentials, Hub } from '@aws-amplify/core';\nimport { AMPLIFY_SYMBOL } from '@aws-amplify/core/internals/utils';\nimport '../refreshAuthTokens.mjs';\nimport '../../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../../tokenProvider/tokenProvider.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst completeOAuthSignOut = async (store) => {\n    await store.clearOAuthData();\n    tokenOrchestrator.clearTokens();\n    await clearCredentials();\n    Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n};\n\nexport { completeOAuthSignOut };\n\n", "import { assertOAuthConfig } from '@aws-amplify/core/internals/utils';\nimport { openAuthSession } from '../../../../utils/openAuthSession.mjs';\nimport { getRedirectUrl } from './getRedirectUrl.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst oAuthSignOutRedirect = async (authConfig, preferPrivateSession = false) => {\n    assertOAuthConfig(authConfig);\n    const { loginWith, userPoolClientId } = authConfig;\n    const { domain, redirectSignOut } = loginWith.oauth;\n    const signoutUri = getRedirectUrl(redirectSignOut);\n    const oAuthLogoutEndpoint = `https://${domain}/logout?${Object.entries({\n        client_id: userPoolClientId,\n        logout_uri: encodeURIComponent(signoutUri),\n    })\n        .map(([k, v]) => `${k}=${v}`)\n        .join('&')}`;\n    return openAuthSession(oAuthLogoutEndpoint);\n};\n\nexport { oAuthSignOutRedirect };\n\n", "import { completeOAuthSignOut } from './completeOAuthSignOut.mjs';\nimport { oAuthSignOutRedirect } from './oAuthSignOutRedirect.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst handleOAuthSignOut = async (cognitoConfig, store) => {\n    const { isOAuthSignIn } = await store.loadOAuthSignIn();\n    // Clear everything before attempting to visted logout endpoint since the current application\n    // state could be wiped away on redirect\n    await completeOAuthSignOut(store);\n    if (isOAuthSignIn) {\n        // On web, this will always end up being a void action\n        return oAuthSignOutRedirect(cognitoConfig);\n    }\n};\n\nexport { handleOAuthSignOut };\n\n", "import { ConsoleLogger, Amplify, clearCredentials, Hub, defaultStorage } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, assertOAuthConfig, AMPLIFY_SYMBOL, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\nimport '../utils/refreshAuthTokens.mjs';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport '../tokenProvider/errorHelpers.mjs';\nimport { tokenOrchestrator } from '../tokenProvider/tokenProvider.mjs';\nimport { revokeToken, globalSignOut as globalSignOut$1 } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { assertAuthTokensWithRefreshToken, assertAuthTokens } from '../utils/types.mjs';\nimport '@aws-crypto/sha256-js';\nimport { handleOAuthSignOut } from '../utils/oauth/handleOAuthSignOut.mjs';\nimport { OAUTH_SIGNOUT_EXCEPTION } from '../../../errors/constants.mjs';\nimport { DefaultOAuthStore } from '../utils/signInWithRedirectStore.mjs';\nimport '../../../types/Auth.mjs';\nimport '../../../Errors.mjs';\nimport '../../../common/AuthErrorStrings.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('Auth');\n/**\n * Signs a user out\n *\n * @param input - The SignOutInput object\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nasync function signOut(input) {\n    const cognitoConfig = Amplify.getConfig().Auth?.Cognito;\n    assertTokenProviderConfig(cognitoConfig);\n    if (input?.global) {\n        await globalSignOut(cognitoConfig);\n    }\n    else {\n        await clientSignOut(cognitoConfig);\n    }\n    let hasOAuthConfig;\n    try {\n        assertOAuthConfig(cognitoConfig);\n        hasOAuthConfig = true;\n    }\n    catch (err) {\n        hasOAuthConfig = false;\n    }\n    if (hasOAuthConfig) {\n        const oAuthStore = new DefaultOAuthStore(defaultStorage);\n        oAuthStore.setAuthConfig(cognitoConfig);\n        const { type } = (await handleOAuthSignOut(cognitoConfig, oAuthStore)) ?? {};\n        if (type === 'error') {\n            throw new AuthError({\n                name: OAUTH_SIGNOUT_EXCEPTION,\n                message: 'An error occurred when attempting to log out from OAuth provider.',\n            });\n        }\n    }\n    else {\n        // complete sign out\n        tokenOrchestrator.clearTokens();\n        await clearCredentials();\n        Hub.dispatch('auth', { event: 'signedOut' }, 'Auth', AMPLIFY_SYMBOL);\n    }\n}\nasync function clientSignOut(cognitoConfig) {\n    try {\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokensWithRefreshToken(authTokens);\n        if (isSessionRevocable(authTokens.accessToken)) {\n            await revokeToken({\n                region: getRegion(cognitoConfig.userPoolId),\n                userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n            }, {\n                ClientId: cognitoConfig.userPoolClientId,\n                Token: authTokens.refreshToken,\n            });\n        }\n    }\n    catch (err) {\n        // this shouldn't throw\n        logger.debug('Client signOut error caught but will proceed with token removal');\n    }\n}\nasync function globalSignOut(cognitoConfig) {\n    try {\n        const authTokens = await tokenOrchestrator.getTokenStore().loadTokens();\n        assertAuthTokens(authTokens);\n        await globalSignOut$1({\n            region: getRegion(cognitoConfig.userPoolId),\n            userAgentValue: getAuthUserAgentValue(AuthAction.SignOut),\n        }, {\n            AccessToken: authTokens.accessToken.toString(),\n        });\n    }\n    catch (err) {\n        // it should not throw\n        logger.debug('Global signOut error caught but will proceed with token removal');\n    }\n}\nconst isSessionRevocable = (token) => !!token?.payload?.origin_jti;\n\nexport { signOut };\n\n", "import { Amplify, fetchAuthSession } from '@aws-amplify/core';\nimport { assertTokenProviderConfig, AuthAction } from '@aws-amplify/core/internals/utils';\nimport { getUserAttributeVerificationCode } from '../utils/clients/CognitoIdentityProvider/index.mjs';\nimport { assertAuthTokens } from '../utils/types.mjs';\nimport { getRegion } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { getAuthUserAgentValue } from '../../../utils/getAuthUserAgentValue.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Resends user's confirmation code when updating attributes while authenticated.\n *\n * @param input - The SendUserAttributeVerificationCodeInput object\n * @returns SendUserAttributeVerificationCodeOutput\n * @throws - {@link GetUserAttributeVerificationException}\n * @throws AuthTokenConfigException - Thrown when the token provider config is invalid.\n */\nconst sendUserAttributeVerificationCode = async (input) => {\n    const { userAttributeKey, options } = input;\n    const authConfig = Amplify.getConfig().Auth?.Cognito;\n    const clientMetadata = options?.clientMetadata;\n    assertTokenProviderConfig(authConfig);\n    const { tokens } = await fetchAuthSession({ forceRefresh: false });\n    assertAuthTokens(tokens);\n    const { CodeDeliveryDetails } = await getUserAttributeVerificationCode({\n        region: getRegion(authConfig.userPoolId),\n        userAgentValue: getAuthUserAgentValue(AuthAction.SendUserAttributeVerificationCode),\n    }, {\n        AccessToken: tokens.accessToken.toString(),\n        ClientMetadata: clientMetadata,\n        AttributeName: userAttributeKey,\n    });\n    const { DeliveryMedium, AttributeName, Destination } = {\n        ...CodeDeliveryDetails,\n    };\n    return {\n        destination: Destination,\n        deliveryMedium: DeliveryMedium,\n        attributeName: AttributeName,\n    };\n};\n\nexport { sendUserAttributeVerificationCode };\n\n", "// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst IdentityIdStorageKeys = {\n    identityId: 'identityId',\n};\n\nexport { IdentityIdStorageKeys };\n\n", "import { ConsoleLogger } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { IdentityIdStorageKeys } from './types.mjs';\nimport { getAuthStorageKeys } from '../tokenProvider/TokenStore.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('DefaultIdentityIdStore');\nclass DefaultIdentityIdStore {\n    setAuthConfig(authConfigParam) {\n        assertIdentityPoolIdConfig(authConfigParam.Cognito);\n        this.authConfig = authConfigParam;\n        this._authKeys = createKeysForAuthStorage('Cognito', authConfigParam.Cognito.identityPoolId);\n        return;\n    }\n    constructor(keyValueStorage) {\n        this._authKeys = {};\n        this.keyValueStorage = keyValueStorage;\n    }\n    async loadIdentityId() {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        try {\n            if (!!this._primaryIdentityId) {\n                return {\n                    id: this._primaryIdentityId,\n                    type: 'primary',\n                };\n            }\n            else {\n                const storedIdentityId = await this.keyValueStorage.getItem(this._authKeys.identityId);\n                if (!!storedIdentityId) {\n                    return {\n                        id: storedIdentityId,\n                        type: 'guest',\n                    };\n                }\n                return null;\n            }\n        }\n        catch (err) {\n            logger.log('Error getting stored IdentityId.', err);\n            return null;\n        }\n    }\n    async storeIdentityId(identity) {\n        assertIdentityPoolIdConfig(this.authConfig?.Cognito);\n        if (identity.type === 'guest') {\n            this.keyValueStorage.setItem(this._authKeys.identityId, identity.id);\n            // Clear in-memory storage of primary identityId\n            this._primaryIdentityId = undefined;\n        }\n        else {\n            this._primaryIdentityId = identity.id;\n            // Clear locally stored guest id\n            this.keyValueStorage.removeItem(this._authKeys.identityId);\n        }\n    }\n    async clearIdentityId() {\n        this._primaryIdentityId = undefined;\n        await this.keyValueStorage.removeItem(this._authKeys.identityId);\n    }\n}\nconst createKeysForAuthStorage = (provider, identifier) => {\n    return getAuthStorageKeys(IdentityIdStorageKeys)(`com.amplify.${provider}`, identifier);\n};\n\nexport { DefaultIdentityIdStore };\n\n", "import { decodeJWT } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nfunction formLoginsMap(idToken) {\n    const issuer = decodeJWT(idToken).payload.iss;\n    const res = {};\n    if (!issuer) {\n        throw new AuthError({\n            name: 'InvalidIdTokenException',\n            message: 'Invalid Idtoken.',\n        });\n    }\n    let domainName = issuer.replace(/(^\\w+:|^)\\/\\//, '');\n    res[domainName] = idToken;\n    return res;\n}\n\nexport { formLoginsMap };\n\n", "import { ConsoleLogger, getId } from '@aws-amplify/core';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { formLoginsMap } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('CognitoIdentityIdProvider');\n/**\n * Provides a Cognito identityId\n *\n * @param tokens - The AuthTokens received after SignIn\n * @returns string\n * @throws configuration excpetions: {@link InvalidIdentityPoolIdException }\n *  - Auth errors that may arise from misconfiguration.\n * @throws service excpetions: {@link GetIdException }\n */\nasync function cognitoIdentityIdProvider({ tokens, authConfig, identityIdStore, }) {\n    identityIdStore.setAuthConfig({ Cognito: authConfig });\n    // will return null only if there is no identityId cached or if there is an error retrieving it\n    let identityId = await identityIdStore.loadIdentityId();\n    // Tokens are available so return primary identityId\n    if (tokens) {\n        // If there is existing primary identityId in-memory return that\n        if (identityId && identityId.type === 'primary') {\n            return identityId.id;\n        }\n        else {\n            const logins = tokens.idToken\n                ? formLoginsMap(tokens.idToken.toString())\n                : {};\n            const generatedIdentityId = await generateIdentityId(logins, authConfig);\n            if (identityId && identityId.id === generatedIdentityId) {\n                logger.debug(`The guest identity ${identityId.id} has become the primary identity.`);\n            }\n            identityId = {\n                id: generatedIdentityId,\n                type: 'primary',\n            };\n        }\n    }\n    else {\n        // If there is existing guest identityId cached return that\n        if (identityId && identityId.type === 'guest') {\n            return identityId.id;\n        }\n        else {\n            identityId = {\n                id: await generateIdentityId({}, authConfig),\n                type: 'guest',\n            };\n        }\n    }\n    // Store in-memory or local storage depending on guest or primary identityId\n    identityIdStore.storeIdentityId(identityId);\n    return identityId.id;\n}\nasync function generateIdentityId(logins, authConfig) {\n    const identityPoolId = authConfig?.identityPoolId;\n    const region = getRegionFromIdentityPoolId(identityPoolId);\n    // IdentityId is absent so get it using IdentityPoolId with Cognito's GetId API\n    const idResult = \n    // for a first-time user, this will return a brand new identity\n    // for a returning user, this will retrieve the previous identity assocaited with the logins\n    (await getId({\n        region,\n    }, {\n        IdentityPoolId: identityPoolId,\n        Logins: logins,\n    })).IdentityId;\n    if (!idResult) {\n        throw new AuthError({\n            name: 'GetIdResponseException',\n            message: 'Received undefined response from getId operation',\n            recoverySuggestion: 'Make sure to pass a valid identityPoolId in the configuration.',\n        });\n    }\n    return idResult;\n}\n\nexport { cognitoIdentityIdProvider };\n\n", "import { cognitoIdentityIdProvider } from './IdentityIdProvider.mjs';\nimport { ConsoleLogger, getCredentialsForIdentity } from '@aws-amplify/core';\nimport { assertIdentityPoolIdConfig } from '@aws-amplify/core/internals/utils';\nimport { AuthError } from '../../../errors/AuthError.mjs';\nimport { getRegionFromIdentityPoolId } from '../utils/clients/CognitoIdentityProvider/utils.mjs';\nimport { assertIdTokenInAuthTokens } from '../utils/types.mjs';\nimport { formLoginsMap } from './utils.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst logger = new ConsoleLogger('CognitoCredentialsProvider');\nconst CREDENTIALS_TTL = 50 * 60 * 1000; // 50 min, can be modified on config if required in the future\nclass CognitoAWSCredentialsAndIdentityIdProvider {\n    constructor(identityIdStore) {\n        this._nextCredentialsRefresh = 0;\n        this._identityIdStore = identityIdStore;\n    }\n    async clearCredentialsAndIdentityId() {\n        logger.debug('Clearing out credentials and identityId');\n        this._credentialsAndIdentityId = undefined;\n        await this._identityIdStore.clearIdentityId();\n    }\n    async clearCredentials() {\n        logger.debug('Clearing out in-memory credentials');\n        this._credentialsAndIdentityId = undefined;\n    }\n    async getCredentialsAndIdentityId(getCredentialsOptions) {\n        const isAuthenticated = getCredentialsOptions.authenticated;\n        const tokens = getCredentialsOptions.tokens;\n        const authConfig = getCredentialsOptions.authConfig;\n        try {\n            assertIdentityPoolIdConfig(authConfig?.Cognito);\n        }\n        catch {\n            // No identity pool configured, skipping\n            return;\n        }\n        if (!isAuthenticated && !authConfig.Cognito.allowGuestAccess) {\n            // TODO(V6): return partial result like Native platforms\n            return;\n        }\n        const forceRefresh = getCredentialsOptions.forceRefresh;\n        const tokenHasChanged = this.hasTokenChanged(tokens);\n        const identityId = await cognitoIdentityIdProvider({\n            tokens,\n            authConfig: authConfig.Cognito,\n            identityIdStore: this._identityIdStore,\n        });\n        // Clear cached credentials when forceRefresh is true OR the cache token has changed\n        if (forceRefresh || tokenHasChanged) {\n            this.clearCredentials();\n        }\n        if (!isAuthenticated) {\n            return this.getGuestCredentials(identityId, authConfig.Cognito);\n        }\n        else {\n            assertIdTokenInAuthTokens(tokens);\n            return this.credsForOIDCTokens(authConfig.Cognito, tokens, identityId);\n        }\n    }\n    async getGuestCredentials(identityId, authConfig) {\n        // Return existing in-memory cached credentials only if it exists, is not past it's lifetime and is unauthenticated credentials\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === false) {\n            logger.info('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any authenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        // use identityId to obtain guest credentials\n        // save credentials in-memory\n        // No logins params should be passed for guest creds:\n        // https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'guest',\n                });\n            }\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: false,\n            };\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsNotFoundException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    async credsForOIDCTokens(authConfig, authTokens, identityId) {\n        if (this._credentialsAndIdentityId &&\n            !this.isPastTTL() &&\n            this._credentialsAndIdentityId.isAuthenticatedCreds === true) {\n            logger.debug('returning stored credentials as they neither past TTL nor expired.');\n            return this._credentialsAndIdentityId;\n        }\n        // Clear to discard if any unauthenticated credentials are set and start with a clean slate\n        this.clearCredentials();\n        const logins = authTokens.idToken\n            ? formLoginsMap(authTokens.idToken.toString())\n            : {};\n        const region = getRegionFromIdentityPoolId(authConfig.identityPoolId);\n        const clientResult = await getCredentialsForIdentity({ region }, {\n            IdentityId: identityId,\n            Logins: logins,\n        });\n        if (clientResult.Credentials &&\n            clientResult.Credentials.AccessKeyId &&\n            clientResult.Credentials.SecretKey) {\n            const res = {\n                credentials: {\n                    accessKeyId: clientResult.Credentials.AccessKeyId,\n                    secretAccessKey: clientResult.Credentials.SecretKey,\n                    sessionToken: clientResult.Credentials.SessionToken,\n                    expiration: clientResult.Credentials.Expiration,\n                },\n                identityId,\n            };\n            // Store the credentials in-memory along with the expiration\n            this._credentialsAndIdentityId = {\n                ...res,\n                isAuthenticatedCreds: true,\n                associatedIdToken: authTokens.idToken?.toString(),\n            };\n            this._nextCredentialsRefresh = new Date().getTime() + CREDENTIALS_TTL;\n            const identityIdRes = clientResult.IdentityId;\n            if (identityIdRes) {\n                res.identityId = identityIdRes;\n                this._identityIdStore.storeIdentityId({\n                    id: identityIdRes,\n                    type: 'primary',\n                });\n            }\n            return res;\n        }\n        else {\n            throw new AuthError({\n                name: 'CredentialsException',\n                message: `Cognito did not respond with either Credentials, AccessKeyId or SecretKey.`,\n            });\n        }\n    }\n    isPastTTL() {\n        return this._nextCredentialsRefresh === undefined\n            ? true\n            : this._nextCredentialsRefresh <= Date.now();\n    }\n    hasTokenChanged(tokens) {\n        return (!!tokens &&\n            !!this._credentialsAndIdentityId?.associatedIdToken &&\n            tokens.idToken?.toString() !==\n                this._credentialsAndIdentityId.associatedIdToken);\n    }\n}\n\nexport { CognitoAWSCredentialsAndIdentityIdProvider };\n\n", "import { DefaultIdentityIdStore } from './IdentityIdStore.mjs';\nimport { CognitoAWSCredentialsAndIdentityIdProvider } from './credentialsProvider.mjs';\nimport { defaultStorage } from '@aws-amplify/core';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Cognito specific implmentation of the CredentialsProvider interface\n * that manages setting and getting of AWS Credentials.\n *\n * @throws configuration expections: {@link InvalidIdentityPoolIdException }\n *  - Auth errors that may arise from misconfiguration.\n * @throws service expections: {@link GetCredentialsForIdentityException}, {@link GetIdException}\n *\n */\nconst cognitoCredentialsProvider = new CognitoAWSCredentialsAndIdentityIdProvider(new DefaultIdentityIdStore(defaultStorage));\n\nexport { CognitoAWSCredentialsAndIdentityIdProvider, DefaultIdentityIdStore, cognitoCredentialsProvider };\n\n", "import { Amplify, CookieStorage, defaultStorage } from '@aws-amplify/core';\nimport { parseAWSExports } from '@aws-amplify/core/internals/utils';\nimport { cognitoUserPoolsTokenProvider, cognitoCredentialsProvider } from '@aws-amplify/auth/cognito';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nconst DefaultAmplify = {\n    /**\n     * Configures Amplify with the {@link resourceConfig} and {@link libraryOptions}.\n     *\n     * @param resourceConfig The {@link ResourcesConfig} object that is typically imported from the\n     * `amplifyconfiguration.json` file. It can also be an object literal created inline when calling `Amplify.configure`.\n     * @param libraryOptions The {@link LibraryOptions} additional options for the library.\n     *\n     * @example\n     * import config from './amplifyconfiguration.json';\n     *\n     * Amplify.configure(config);\n     */\n    configure(resourceConfig, libraryOptions) {\n        let resolvedResourceConfig;\n        if (Object.keys(resourceConfig).some(key => key.startsWith('aws_'))) {\n            resolvedResourceConfig = parseAWSExports(resourceConfig);\n        }\n        else {\n            resolvedResourceConfig = resourceConfig;\n        }\n        // If no Auth config is provided, no special handling will be required, configure as is.\n        // Otherwise, we can assume an Auth config is provided from here on.\n        if (!resolvedResourceConfig.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If Auth options are provided, always just configure as is.\n        // Otherwise, we can assume no Auth libraryOptions were provided from here on.\n        if (libraryOptions?.Auth) {\n            Amplify.configure(resolvedResourceConfig, libraryOptions);\n            return;\n        }\n        // If no Auth libraryOptions were previously configured, then always add default providers.\n        if (!Amplify.libraryOptions.Auth) {\n            cognitoUserPoolsTokenProvider.setAuthConfig(resolvedResourceConfig.Auth);\n            cognitoUserPoolsTokenProvider.setKeyValueStorage(\n            // TODO: allow configure with a public interface\n            libraryOptions?.ssr\n                ? new CookieStorage({ sameSite: 'lax' })\n                : defaultStorage);\n            Amplify.configure(resolvedResourceConfig, {\n                ...libraryOptions,\n                Auth: {\n                    tokenProvider: cognitoUserPoolsTokenProvider,\n                    credentialsProvider: cognitoCredentialsProvider,\n                },\n            });\n            return;\n        }\n        // At this point, Auth libraryOptions would have been previously configured and no overriding\n        // Auth options were given, so we should preserve the currently configured Auth libraryOptions.\n        if (libraryOptions) {\n            // If ssr is provided through libraryOptions, we should respect the intentional reconfiguration.\n            if (libraryOptions.ssr !== undefined) {\n                cognitoUserPoolsTokenProvider.setKeyValueStorage(\n                // TODO: allow configure with a public interface\n                libraryOptions.ssr\n                    ? new CookieStorage({ sameSite: 'lax' })\n                    : defaultStorage);\n            }\n            Amplify.configure(resolvedResourceConfig, {\n                Auth: Amplify.libraryOptions.Auth,\n                ...libraryOptions,\n            });\n            return;\n        }\n        // Finally, if there were no libraryOptions given at all, we should simply not touch the currently\n        // configured libraryOptions.\n        Amplify.configure(resolvedResourceConfig);\n    },\n    /**\n     * Returns the {@link ResourcesConfig} object passed in as the `resourceConfig` parameter when calling\n     * `Amplify.configure`.\n     *\n     * @returns An {@link ResourcesConfig} object.\n     */\n    getConfig() {\n        return Amplify.getConfig();\n    },\n};\n\nexport { DefaultAmplify };\n\n"],
  "mappings": "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",
  "names": ["LogType", "name", "name", "AmplifyErrorCode", "name", "name", "AuthConfigurationErrorCode", "assert", "assert", "logger", "api", "name", "logger", "logger", "name", "fetchAuthSession", "RawSha256", "fromUtf8", "Sha256", "defaultConfig", "jitteredBackoff", "Framework", "Category", "AnalyticsAction", "ApiAction", "AuthAction", "DataStoreAction", "GeoAction", "InAppMessagingAction", "InteractionsAction", "PredictionsAction", "PubSubAction", "PushNotificationAction", "StorageAction", "api", "disableCacheMiddleware", "jitteredBackoff", "name", "converter", "defaultConfig", "CacheErrorCode", "assert", "logger", "defaultConfig", "assert", "logger", "defaultConfig", "logger", "I18nErrorCode", "assert", "logger", "I18n", "assert", "URL", "name", "version", "SERVICE_NAME", "endpointResolver", "defaultConfig", "jitteredBackoff", "getSharedHeaders", "PinpointValidationErrorCode", "assert", "hexEncode", "getSharedHeaders", "defaultConfig", "assert", "getSharedHeaders", "defaultConfig", "logger", "UpdateEndpointException", "ServiceWorkerErrorCode", "assert", "crypto", "BackgroundProcessManagerState", "SERVICE_NAME", "endpointResolver", "disableCacheMiddleware", "defaultConfig", "jitteredBackoff", "getSharedHeaders", "buildHttpRpcRequest", "getSharedHeaders", "buildHttpRpcRequest", "defaultConfig", "AuthValidationErrorCode", "AuthErrorStrings", "AuthErrorCodes", "name", "SHORT_TO_HEX", "HEX_TO_SHORT", "HEX_TO_SHORT", "SHORT_TO_HEX", "AssociateSoftwareTokenException", "ChangePasswordException", "ConfirmDeviceException", "ConfirmForgotPasswordException", "ConfirmSignUpException", "DeleteUserAttributesException", "DeleteUserException", "ForgetDeviceException", "ForgotPasswordException", "GetUserException", "GetIdException", "GetCredentialsForIdentityException", "GetUserAttributeVerificationException", "GlobalSignOutException", "InitiateAuthException", "ResendConfirmationException", "RespondToAuthChallengeException", "SetUserMFAPreferenceException", "SignUpException", "UpdateUserAttributesException", "VerifySoftwareTokenException", "VerifyUserAttributeException", "UpdateDeviceStatusException", "ListDevicesException", "getCurrentUser", "tokenOrchestrator", "getCurrentUser", "TokenProviderErrorCode", "assert", "assert", "getCurrentUser", "signUp", "autoSignIn", "confirmSignUp", "fetchAuthSession", "createKeysForAuthStorage", "oauthSignIn", "AuthErrorTypes", "logger", "getRedirectUrl", "getRedirectUrl", "getRedirectUrl", "error", "fetchUserAttributes", "getRedirectUrl", "logger", "globalSignOut", "oAuthStore", "fetchAuthSession", "logger", "createKeysForAuthStorage", "logger", "logger", "isAuthenticated"]
}
